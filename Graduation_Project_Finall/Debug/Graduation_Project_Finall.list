
Graduation_Project_Finall.axf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000559c  08000130  08000130  00010130  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00019c00  080056cc  080056cc  000156cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0801f2cc  0801f2cc  00030050  2**0
                  CONTENTS
  4 .ARM          00000000  0801f2cc  0801f2cc  00030050  2**0
                  CONTENTS
  5 .preinit_array 00000000  0801f2cc  0801f2cc  00030050  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0801f2cc  0801f2cc  0002f2cc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0801f2d0  0801f2d0  0002f2d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000050  20000000  0801f2d4  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00004268  20000050  0801f324  00030050  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200042b8  0801f324  000342b8  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00030050  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000ec8a  00000000  00000000  00030079  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00002067  00000000  00000000  0003ed03  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    000039f4  00000000  00000000  00040d6a  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_aranges 00000810  00000000  00000000  00044760  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000006f8  00000000  00000000  00044f70  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_macro  00002652  00000000  00000000  00045668  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_line   00009016  00000000  00000000  00047cba  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_str    00014560  00000000  00000000  00050cd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .comment      000000be  00000000  00000000  00065230  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00001d1c  00000000  00000000  000652f0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000050 	.word	0x20000050
 800014c:	00000000 	.word	0x00000000
 8000150:	080056b4 	.word	0x080056b4

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000054 	.word	0x20000054
 800016c:	080056b4 	.word	0x080056b4

08000170 <vListInitialise>:
 8000170:	b480      	push	{r7}
 8000172:	b083      	sub	sp, #12
 8000174:	af00      	add	r7, sp, #0
 8000176:	6078      	str	r0, [r7, #4]
 8000178:	687b      	ldr	r3, [r7, #4]
 800017a:	f103 0208 	add.w	r2, r3, #8
 800017e:	687b      	ldr	r3, [r7, #4]
 8000180:	605a      	str	r2, [r3, #4]
 8000182:	687b      	ldr	r3, [r7, #4]
 8000184:	f04f 32ff 	mov.w	r2, #4294967295
 8000188:	609a      	str	r2, [r3, #8]
 800018a:	687b      	ldr	r3, [r7, #4]
 800018c:	f103 0208 	add.w	r2, r3, #8
 8000190:	687b      	ldr	r3, [r7, #4]
 8000192:	60da      	str	r2, [r3, #12]
 8000194:	687b      	ldr	r3, [r7, #4]
 8000196:	f103 0208 	add.w	r2, r3, #8
 800019a:	687b      	ldr	r3, [r7, #4]
 800019c:	611a      	str	r2, [r3, #16]
 800019e:	687b      	ldr	r3, [r7, #4]
 80001a0:	2200      	movs	r2, #0
 80001a2:	601a      	str	r2, [r3, #0]
 80001a4:	bf00      	nop
 80001a6:	370c      	adds	r7, #12
 80001a8:	46bd      	mov	sp, r7
 80001aa:	bc80      	pop	{r7}
 80001ac:	4770      	bx	lr

080001ae <vListInitialiseItem>:
 80001ae:	b480      	push	{r7}
 80001b0:	b083      	sub	sp, #12
 80001b2:	af00      	add	r7, sp, #0
 80001b4:	6078      	str	r0, [r7, #4]
 80001b6:	687b      	ldr	r3, [r7, #4]
 80001b8:	2200      	movs	r2, #0
 80001ba:	611a      	str	r2, [r3, #16]
 80001bc:	bf00      	nop
 80001be:	370c      	adds	r7, #12
 80001c0:	46bd      	mov	sp, r7
 80001c2:	bc80      	pop	{r7}
 80001c4:	4770      	bx	lr

080001c6 <vListInsertEnd>:
 80001c6:	b480      	push	{r7}
 80001c8:	b085      	sub	sp, #20
 80001ca:	af00      	add	r7, sp, #0
 80001cc:	6078      	str	r0, [r7, #4]
 80001ce:	6039      	str	r1, [r7, #0]
 80001d0:	687b      	ldr	r3, [r7, #4]
 80001d2:	685b      	ldr	r3, [r3, #4]
 80001d4:	60fb      	str	r3, [r7, #12]
 80001d6:	683b      	ldr	r3, [r7, #0]
 80001d8:	68fa      	ldr	r2, [r7, #12]
 80001da:	605a      	str	r2, [r3, #4]
 80001dc:	68fb      	ldr	r3, [r7, #12]
 80001de:	689a      	ldr	r2, [r3, #8]
 80001e0:	683b      	ldr	r3, [r7, #0]
 80001e2:	609a      	str	r2, [r3, #8]
 80001e4:	68fb      	ldr	r3, [r7, #12]
 80001e6:	689b      	ldr	r3, [r3, #8]
 80001e8:	683a      	ldr	r2, [r7, #0]
 80001ea:	605a      	str	r2, [r3, #4]
 80001ec:	68fb      	ldr	r3, [r7, #12]
 80001ee:	683a      	ldr	r2, [r7, #0]
 80001f0:	609a      	str	r2, [r3, #8]
 80001f2:	683b      	ldr	r3, [r7, #0]
 80001f4:	687a      	ldr	r2, [r7, #4]
 80001f6:	611a      	str	r2, [r3, #16]
 80001f8:	687b      	ldr	r3, [r7, #4]
 80001fa:	681b      	ldr	r3, [r3, #0]
 80001fc:	1c5a      	adds	r2, r3, #1
 80001fe:	687b      	ldr	r3, [r7, #4]
 8000200:	601a      	str	r2, [r3, #0]
 8000202:	bf00      	nop
 8000204:	3714      	adds	r7, #20
 8000206:	46bd      	mov	sp, r7
 8000208:	bc80      	pop	{r7}
 800020a:	4770      	bx	lr

0800020c <uxListRemove>:
 800020c:	b480      	push	{r7}
 800020e:	b085      	sub	sp, #20
 8000210:	af00      	add	r7, sp, #0
 8000212:	6078      	str	r0, [r7, #4]
 8000214:	687b      	ldr	r3, [r7, #4]
 8000216:	691b      	ldr	r3, [r3, #16]
 8000218:	60fb      	str	r3, [r7, #12]
 800021a:	687b      	ldr	r3, [r7, #4]
 800021c:	685b      	ldr	r3, [r3, #4]
 800021e:	687a      	ldr	r2, [r7, #4]
 8000220:	6892      	ldr	r2, [r2, #8]
 8000222:	609a      	str	r2, [r3, #8]
 8000224:	687b      	ldr	r3, [r7, #4]
 8000226:	689b      	ldr	r3, [r3, #8]
 8000228:	687a      	ldr	r2, [r7, #4]
 800022a:	6852      	ldr	r2, [r2, #4]
 800022c:	605a      	str	r2, [r3, #4]
 800022e:	68fb      	ldr	r3, [r7, #12]
 8000230:	685b      	ldr	r3, [r3, #4]
 8000232:	687a      	ldr	r2, [r7, #4]
 8000234:	429a      	cmp	r2, r3
 8000236:	d103      	bne.n	8000240 <uxListRemove+0x34>
 8000238:	687b      	ldr	r3, [r7, #4]
 800023a:	689a      	ldr	r2, [r3, #8]
 800023c:	68fb      	ldr	r3, [r7, #12]
 800023e:	605a      	str	r2, [r3, #4]
 8000240:	687b      	ldr	r3, [r7, #4]
 8000242:	2200      	movs	r2, #0
 8000244:	611a      	str	r2, [r3, #16]
 8000246:	68fb      	ldr	r3, [r7, #12]
 8000248:	681b      	ldr	r3, [r3, #0]
 800024a:	1e5a      	subs	r2, r3, #1
 800024c:	68fb      	ldr	r3, [r7, #12]
 800024e:	601a      	str	r2, [r3, #0]
 8000250:	68fb      	ldr	r3, [r7, #12]
 8000252:	681b      	ldr	r3, [r3, #0]
 8000254:	4618      	mov	r0, r3
 8000256:	3714      	adds	r7, #20
 8000258:	46bd      	mov	sp, r7
 800025a:	bc80      	pop	{r7}
 800025c:	4770      	bx	lr

0800025e <xTaskCreate>:
 800025e:	b580      	push	{r7, lr}
 8000260:	b08c      	sub	sp, #48	; 0x30
 8000262:	af04      	add	r7, sp, #16
 8000264:	60f8      	str	r0, [r7, #12]
 8000266:	60b9      	str	r1, [r7, #8]
 8000268:	603b      	str	r3, [r7, #0]
 800026a:	4613      	mov	r3, r2
 800026c:	80fb      	strh	r3, [r7, #6]
 800026e:	88fb      	ldrh	r3, [r7, #6]
 8000270:	009b      	lsls	r3, r3, #2
 8000272:	4618      	mov	r0, r3
 8000274:	f000 ff7c 	bl	8001170 <pvPortMalloc>
 8000278:	6178      	str	r0, [r7, #20]
 800027a:	697b      	ldr	r3, [r7, #20]
 800027c:	2b00      	cmp	r3, #0
 800027e:	d013      	beq.n	80002a8 <xTaskCreate+0x4a>
 8000280:	2054      	movs	r0, #84	; 0x54
 8000282:	f000 ff75 	bl	8001170 <pvPortMalloc>
 8000286:	61f8      	str	r0, [r7, #28]
 8000288:	69fb      	ldr	r3, [r7, #28]
 800028a:	2b00      	cmp	r3, #0
 800028c:	d008      	beq.n	80002a0 <xTaskCreate+0x42>
 800028e:	2254      	movs	r2, #84	; 0x54
 8000290:	2100      	movs	r1, #0
 8000292:	69f8      	ldr	r0, [r7, #28]
 8000294:	f005 fa06 	bl	80056a4 <memset>
 8000298:	69fb      	ldr	r3, [r7, #28]
 800029a:	697a      	ldr	r2, [r7, #20]
 800029c:	631a      	str	r2, [r3, #48]	; 0x30
 800029e:	e005      	b.n	80002ac <xTaskCreate+0x4e>
 80002a0:	6978      	ldr	r0, [r7, #20]
 80002a2:	f000 ffb7 	bl	8001214 <vPortFree>
 80002a6:	e001      	b.n	80002ac <xTaskCreate+0x4e>
 80002a8:	2300      	movs	r3, #0
 80002aa:	61fb      	str	r3, [r7, #28]
 80002ac:	69fb      	ldr	r3, [r7, #28]
 80002ae:	2b00      	cmp	r3, #0
 80002b0:	d013      	beq.n	80002da <xTaskCreate+0x7c>
 80002b2:	88fa      	ldrh	r2, [r7, #6]
 80002b4:	2300      	movs	r3, #0
 80002b6:	9303      	str	r3, [sp, #12]
 80002b8:	69fb      	ldr	r3, [r7, #28]
 80002ba:	9302      	str	r3, [sp, #8]
 80002bc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80002be:	9301      	str	r3, [sp, #4]
 80002c0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80002c2:	9300      	str	r3, [sp, #0]
 80002c4:	683b      	ldr	r3, [r7, #0]
 80002c6:	68b9      	ldr	r1, [r7, #8]
 80002c8:	68f8      	ldr	r0, [r7, #12]
 80002ca:	f000 f80e 	bl	80002ea <prvInitialiseNewTask>
 80002ce:	69f8      	ldr	r0, [r7, #28]
 80002d0:	f000 f874 	bl	80003bc <prvAddNewTaskToReadyList>
 80002d4:	2301      	movs	r3, #1
 80002d6:	61bb      	str	r3, [r7, #24]
 80002d8:	e002      	b.n	80002e0 <xTaskCreate+0x82>
 80002da:	f04f 33ff 	mov.w	r3, #4294967295
 80002de:	61bb      	str	r3, [r7, #24]
 80002e0:	69bb      	ldr	r3, [r7, #24]
 80002e2:	4618      	mov	r0, r3
 80002e4:	3720      	adds	r7, #32
 80002e6:	46bd      	mov	sp, r7
 80002e8:	bd80      	pop	{r7, pc}

080002ea <prvInitialiseNewTask>:
 80002ea:	b580      	push	{r7, lr}
 80002ec:	b086      	sub	sp, #24
 80002ee:	af00      	add	r7, sp, #0
 80002f0:	60f8      	str	r0, [r7, #12]
 80002f2:	60b9      	str	r1, [r7, #8]
 80002f4:	607a      	str	r2, [r7, #4]
 80002f6:	603b      	str	r3, [r7, #0]
 80002f8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80002fa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80002fc:	687b      	ldr	r3, [r7, #4]
 80002fe:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8000302:	3b01      	subs	r3, #1
 8000304:	009b      	lsls	r3, r3, #2
 8000306:	4413      	add	r3, r2
 8000308:	613b      	str	r3, [r7, #16]
 800030a:	693b      	ldr	r3, [r7, #16]
 800030c:	f023 0307 	bic.w	r3, r3, #7
 8000310:	613b      	str	r3, [r7, #16]
 8000312:	68bb      	ldr	r3, [r7, #8]
 8000314:	2b00      	cmp	r3, #0
 8000316:	d01e      	beq.n	8000356 <prvInitialiseNewTask+0x6c>
 8000318:	2300      	movs	r3, #0
 800031a:	617b      	str	r3, [r7, #20]
 800031c:	e012      	b.n	8000344 <prvInitialiseNewTask+0x5a>
 800031e:	68ba      	ldr	r2, [r7, #8]
 8000320:	697b      	ldr	r3, [r7, #20]
 8000322:	4413      	add	r3, r2
 8000324:	7819      	ldrb	r1, [r3, #0]
 8000326:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8000328:	697b      	ldr	r3, [r7, #20]
 800032a:	4413      	add	r3, r2
 800032c:	3334      	adds	r3, #52	; 0x34
 800032e:	460a      	mov	r2, r1
 8000330:	701a      	strb	r2, [r3, #0]
 8000332:	68ba      	ldr	r2, [r7, #8]
 8000334:	697b      	ldr	r3, [r7, #20]
 8000336:	4413      	add	r3, r2
 8000338:	781b      	ldrb	r3, [r3, #0]
 800033a:	2b00      	cmp	r3, #0
 800033c:	d006      	beq.n	800034c <prvInitialiseNewTask+0x62>
 800033e:	697b      	ldr	r3, [r7, #20]
 8000340:	3301      	adds	r3, #1
 8000342:	617b      	str	r3, [r7, #20]
 8000344:	697b      	ldr	r3, [r7, #20]
 8000346:	2b0f      	cmp	r3, #15
 8000348:	d9e9      	bls.n	800031e <prvInitialiseNewTask+0x34>
 800034a:	e000      	b.n	800034e <prvInitialiseNewTask+0x64>
 800034c:	bf00      	nop
 800034e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000350:	2200      	movs	r2, #0
 8000352:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8000356:	6a3b      	ldr	r3, [r7, #32]
 8000358:	2b04      	cmp	r3, #4
 800035a:	d901      	bls.n	8000360 <prvInitialiseNewTask+0x76>
 800035c:	2304      	movs	r3, #4
 800035e:	623b      	str	r3, [r7, #32]
 8000360:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000362:	6a3a      	ldr	r2, [r7, #32]
 8000364:	62da      	str	r2, [r3, #44]	; 0x2c
 8000366:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000368:	6a3a      	ldr	r2, [r7, #32]
 800036a:	645a      	str	r2, [r3, #68]	; 0x44
 800036c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800036e:	3304      	adds	r3, #4
 8000370:	4618      	mov	r0, r3
 8000372:	f7ff ff1c 	bl	80001ae <vListInitialiseItem>
 8000376:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000378:	3318      	adds	r3, #24
 800037a:	4618      	mov	r0, r3
 800037c:	f7ff ff17 	bl	80001ae <vListInitialiseItem>
 8000380:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000382:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8000384:	611a      	str	r2, [r3, #16]
 8000386:	6a3b      	ldr	r3, [r7, #32]
 8000388:	f1c3 0205 	rsb	r2, r3, #5
 800038c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800038e:	619a      	str	r2, [r3, #24]
 8000390:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000392:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8000394:	625a      	str	r2, [r3, #36]	; 0x24
 8000396:	683a      	ldr	r2, [r7, #0]
 8000398:	68f9      	ldr	r1, [r7, #12]
 800039a:	6938      	ldr	r0, [r7, #16]
 800039c:	f000 fdbe 	bl	8000f1c <pxPortInitialiseStack>
 80003a0:	4602      	mov	r2, r0
 80003a2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80003a4:	601a      	str	r2, [r3, #0]
 80003a6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80003a8:	2b00      	cmp	r3, #0
 80003aa:	d002      	beq.n	80003b2 <prvInitialiseNewTask+0xc8>
 80003ac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80003ae:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80003b0:	601a      	str	r2, [r3, #0]
 80003b2:	bf00      	nop
 80003b4:	3718      	adds	r7, #24
 80003b6:	46bd      	mov	sp, r7
 80003b8:	bd80      	pop	{r7, pc}
	...

080003bc <prvAddNewTaskToReadyList>:
 80003bc:	b580      	push	{r7, lr}
 80003be:	b084      	sub	sp, #16
 80003c0:	af00      	add	r7, sp, #0
 80003c2:	6078      	str	r0, [r7, #4]
 80003c4:	f000 fe3a 	bl	800103c <vPortEnterCritical>
 80003c8:	4b3e      	ldr	r3, [pc, #248]	; (80004c4 <prvAddNewTaskToReadyList+0x108>)
 80003ca:	681b      	ldr	r3, [r3, #0]
 80003cc:	3301      	adds	r3, #1
 80003ce:	4a3d      	ldr	r2, [pc, #244]	; (80004c4 <prvAddNewTaskToReadyList+0x108>)
 80003d0:	6013      	str	r3, [r2, #0]
 80003d2:	4b3d      	ldr	r3, [pc, #244]	; (80004c8 <prvAddNewTaskToReadyList+0x10c>)
 80003d4:	681b      	ldr	r3, [r3, #0]
 80003d6:	2b00      	cmp	r3, #0
 80003d8:	d109      	bne.n	80003ee <prvAddNewTaskToReadyList+0x32>
 80003da:	4a3b      	ldr	r2, [pc, #236]	; (80004c8 <prvAddNewTaskToReadyList+0x10c>)
 80003dc:	687b      	ldr	r3, [r7, #4]
 80003de:	6013      	str	r3, [r2, #0]
 80003e0:	4b38      	ldr	r3, [pc, #224]	; (80004c4 <prvAddNewTaskToReadyList+0x108>)
 80003e2:	681b      	ldr	r3, [r3, #0]
 80003e4:	2b01      	cmp	r3, #1
 80003e6:	d110      	bne.n	800040a <prvAddNewTaskToReadyList+0x4e>
 80003e8:	f000 fd00 	bl	8000dec <prvInitialiseTaskLists>
 80003ec:	e00d      	b.n	800040a <prvAddNewTaskToReadyList+0x4e>
 80003ee:	4b37      	ldr	r3, [pc, #220]	; (80004cc <prvAddNewTaskToReadyList+0x110>)
 80003f0:	681b      	ldr	r3, [r3, #0]
 80003f2:	2b00      	cmp	r3, #0
 80003f4:	d109      	bne.n	800040a <prvAddNewTaskToReadyList+0x4e>
 80003f6:	4b34      	ldr	r3, [pc, #208]	; (80004c8 <prvAddNewTaskToReadyList+0x10c>)
 80003f8:	681b      	ldr	r3, [r3, #0]
 80003fa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80003fc:	687b      	ldr	r3, [r7, #4]
 80003fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000400:	429a      	cmp	r2, r3
 8000402:	d802      	bhi.n	800040a <prvAddNewTaskToReadyList+0x4e>
 8000404:	4a30      	ldr	r2, [pc, #192]	; (80004c8 <prvAddNewTaskToReadyList+0x10c>)
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	6013      	str	r3, [r2, #0]
 800040a:	4b31      	ldr	r3, [pc, #196]	; (80004d0 <prvAddNewTaskToReadyList+0x114>)
 800040c:	681b      	ldr	r3, [r3, #0]
 800040e:	3301      	adds	r3, #1
 8000410:	4a2f      	ldr	r2, [pc, #188]	; (80004d0 <prvAddNewTaskToReadyList+0x114>)
 8000412:	6013      	str	r3, [r2, #0]
 8000414:	687b      	ldr	r3, [r7, #4]
 8000416:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000418:	2201      	movs	r2, #1
 800041a:	409a      	lsls	r2, r3
 800041c:	4b2d      	ldr	r3, [pc, #180]	; (80004d4 <prvAddNewTaskToReadyList+0x118>)
 800041e:	681b      	ldr	r3, [r3, #0]
 8000420:	4313      	orrs	r3, r2
 8000422:	4a2c      	ldr	r2, [pc, #176]	; (80004d4 <prvAddNewTaskToReadyList+0x118>)
 8000424:	6013      	str	r3, [r2, #0]
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800042a:	492b      	ldr	r1, [pc, #172]	; (80004d8 <prvAddNewTaskToReadyList+0x11c>)
 800042c:	4613      	mov	r3, r2
 800042e:	009b      	lsls	r3, r3, #2
 8000430:	4413      	add	r3, r2
 8000432:	009b      	lsls	r3, r3, #2
 8000434:	440b      	add	r3, r1
 8000436:	3304      	adds	r3, #4
 8000438:	681b      	ldr	r3, [r3, #0]
 800043a:	60fb      	str	r3, [r7, #12]
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	68fa      	ldr	r2, [r7, #12]
 8000440:	609a      	str	r2, [r3, #8]
 8000442:	68fb      	ldr	r3, [r7, #12]
 8000444:	689a      	ldr	r2, [r3, #8]
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	60da      	str	r2, [r3, #12]
 800044a:	68fb      	ldr	r3, [r7, #12]
 800044c:	689b      	ldr	r3, [r3, #8]
 800044e:	687a      	ldr	r2, [r7, #4]
 8000450:	3204      	adds	r2, #4
 8000452:	605a      	str	r2, [r3, #4]
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	1d1a      	adds	r2, r3, #4
 8000458:	68fb      	ldr	r3, [r7, #12]
 800045a:	609a      	str	r2, [r3, #8]
 800045c:	687b      	ldr	r3, [r7, #4]
 800045e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000460:	4613      	mov	r3, r2
 8000462:	009b      	lsls	r3, r3, #2
 8000464:	4413      	add	r3, r2
 8000466:	009b      	lsls	r3, r3, #2
 8000468:	4a1b      	ldr	r2, [pc, #108]	; (80004d8 <prvAddNewTaskToReadyList+0x11c>)
 800046a:	441a      	add	r2, r3
 800046c:	687b      	ldr	r3, [r7, #4]
 800046e:	615a      	str	r2, [r3, #20]
 8000470:	687b      	ldr	r3, [r7, #4]
 8000472:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000474:	4918      	ldr	r1, [pc, #96]	; (80004d8 <prvAddNewTaskToReadyList+0x11c>)
 8000476:	4613      	mov	r3, r2
 8000478:	009b      	lsls	r3, r3, #2
 800047a:	4413      	add	r3, r2
 800047c:	009b      	lsls	r3, r3, #2
 800047e:	440b      	add	r3, r1
 8000480:	681b      	ldr	r3, [r3, #0]
 8000482:	1c59      	adds	r1, r3, #1
 8000484:	4814      	ldr	r0, [pc, #80]	; (80004d8 <prvAddNewTaskToReadyList+0x11c>)
 8000486:	4613      	mov	r3, r2
 8000488:	009b      	lsls	r3, r3, #2
 800048a:	4413      	add	r3, r2
 800048c:	009b      	lsls	r3, r3, #2
 800048e:	4403      	add	r3, r0
 8000490:	6019      	str	r1, [r3, #0]
 8000492:	f000 fded 	bl	8001070 <vPortExitCritical>
 8000496:	4b0d      	ldr	r3, [pc, #52]	; (80004cc <prvAddNewTaskToReadyList+0x110>)
 8000498:	681b      	ldr	r3, [r3, #0]
 800049a:	2b00      	cmp	r3, #0
 800049c:	d00e      	beq.n	80004bc <prvAddNewTaskToReadyList+0x100>
 800049e:	4b0a      	ldr	r3, [pc, #40]	; (80004c8 <prvAddNewTaskToReadyList+0x10c>)
 80004a0:	681b      	ldr	r3, [r3, #0]
 80004a2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80004a4:	687b      	ldr	r3, [r7, #4]
 80004a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80004a8:	429a      	cmp	r2, r3
 80004aa:	d207      	bcs.n	80004bc <prvAddNewTaskToReadyList+0x100>
 80004ac:	4b0b      	ldr	r3, [pc, #44]	; (80004dc <prvAddNewTaskToReadyList+0x120>)
 80004ae:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80004b2:	601a      	str	r2, [r3, #0]
 80004b4:	f3bf 8f4f 	dsb	sy
 80004b8:	f3bf 8f6f 	isb	sy
 80004bc:	bf00      	nop
 80004be:	3710      	adds	r7, #16
 80004c0:	46bd      	mov	sp, r7
 80004c2:	bd80      	pop	{r7, pc}
 80004c4:	20000144 	.word	0x20000144
 80004c8:	2000006c 	.word	0x2000006c
 80004cc:	20000150 	.word	0x20000150
 80004d0:	20000160 	.word	0x20000160
 80004d4:	2000014c 	.word	0x2000014c
 80004d8:	20000070 	.word	0x20000070
 80004dc:	e000ed04 	.word	0xe000ed04

080004e0 <vTaskPrioritySet>:
 80004e0:	b580      	push	{r7, lr}
 80004e2:	b088      	sub	sp, #32
 80004e4:	af00      	add	r7, sp, #0
 80004e6:	6078      	str	r0, [r7, #4]
 80004e8:	6039      	str	r1, [r7, #0]
 80004ea:	2300      	movs	r3, #0
 80004ec:	61fb      	str	r3, [r7, #28]
 80004ee:	683b      	ldr	r3, [r7, #0]
 80004f0:	2b04      	cmp	r3, #4
 80004f2:	d901      	bls.n	80004f8 <vTaskPrioritySet+0x18>
 80004f4:	2304      	movs	r3, #4
 80004f6:	603b      	str	r3, [r7, #0]
 80004f8:	f000 fda0 	bl	800103c <vPortEnterCritical>
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	2b00      	cmp	r3, #0
 8000500:	d102      	bne.n	8000508 <vTaskPrioritySet+0x28>
 8000502:	4b55      	ldr	r3, [pc, #340]	; (8000658 <vTaskPrioritySet+0x178>)
 8000504:	681b      	ldr	r3, [r3, #0]
 8000506:	e000      	b.n	800050a <vTaskPrioritySet+0x2a>
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	61bb      	str	r3, [r7, #24]
 800050c:	69bb      	ldr	r3, [r7, #24]
 800050e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000510:	617b      	str	r3, [r7, #20]
 8000512:	697a      	ldr	r2, [r7, #20]
 8000514:	683b      	ldr	r3, [r7, #0]
 8000516:	429a      	cmp	r2, r3
 8000518:	f000 8098 	beq.w	800064c <vTaskPrioritySet+0x16c>
 800051c:	683a      	ldr	r2, [r7, #0]
 800051e:	697b      	ldr	r3, [r7, #20]
 8000520:	429a      	cmp	r2, r3
 8000522:	d90d      	bls.n	8000540 <vTaskPrioritySet+0x60>
 8000524:	4b4c      	ldr	r3, [pc, #304]	; (8000658 <vTaskPrioritySet+0x178>)
 8000526:	681b      	ldr	r3, [r3, #0]
 8000528:	69ba      	ldr	r2, [r7, #24]
 800052a:	429a      	cmp	r2, r3
 800052c:	d00f      	beq.n	800054e <vTaskPrioritySet+0x6e>
 800052e:	4b4a      	ldr	r3, [pc, #296]	; (8000658 <vTaskPrioritySet+0x178>)
 8000530:	681b      	ldr	r3, [r3, #0]
 8000532:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000534:	683a      	ldr	r2, [r7, #0]
 8000536:	429a      	cmp	r2, r3
 8000538:	d309      	bcc.n	800054e <vTaskPrioritySet+0x6e>
 800053a:	2301      	movs	r3, #1
 800053c:	61fb      	str	r3, [r7, #28]
 800053e:	e006      	b.n	800054e <vTaskPrioritySet+0x6e>
 8000540:	4b45      	ldr	r3, [pc, #276]	; (8000658 <vTaskPrioritySet+0x178>)
 8000542:	681b      	ldr	r3, [r3, #0]
 8000544:	69ba      	ldr	r2, [r7, #24]
 8000546:	429a      	cmp	r2, r3
 8000548:	d101      	bne.n	800054e <vTaskPrioritySet+0x6e>
 800054a:	2301      	movs	r3, #1
 800054c:	61fb      	str	r3, [r7, #28]
 800054e:	69bb      	ldr	r3, [r7, #24]
 8000550:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000552:	613b      	str	r3, [r7, #16]
 8000554:	69bb      	ldr	r3, [r7, #24]
 8000556:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8000558:	69bb      	ldr	r3, [r7, #24]
 800055a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800055c:	429a      	cmp	r2, r3
 800055e:	d102      	bne.n	8000566 <vTaskPrioritySet+0x86>
 8000560:	69bb      	ldr	r3, [r7, #24]
 8000562:	683a      	ldr	r2, [r7, #0]
 8000564:	62da      	str	r2, [r3, #44]	; 0x2c
 8000566:	69bb      	ldr	r3, [r7, #24]
 8000568:	683a      	ldr	r2, [r7, #0]
 800056a:	645a      	str	r2, [r3, #68]	; 0x44
 800056c:	69bb      	ldr	r3, [r7, #24]
 800056e:	699b      	ldr	r3, [r3, #24]
 8000570:	2b00      	cmp	r3, #0
 8000572:	db04      	blt.n	800057e <vTaskPrioritySet+0x9e>
 8000574:	683b      	ldr	r3, [r7, #0]
 8000576:	f1c3 0205 	rsb	r2, r3, #5
 800057a:	69bb      	ldr	r3, [r7, #24]
 800057c:	619a      	str	r2, [r3, #24]
 800057e:	69bb      	ldr	r3, [r7, #24]
 8000580:	6959      	ldr	r1, [r3, #20]
 8000582:	693a      	ldr	r2, [r7, #16]
 8000584:	4613      	mov	r3, r2
 8000586:	009b      	lsls	r3, r3, #2
 8000588:	4413      	add	r3, r2
 800058a:	009b      	lsls	r3, r3, #2
 800058c:	4a33      	ldr	r2, [pc, #204]	; (800065c <vTaskPrioritySet+0x17c>)
 800058e:	4413      	add	r3, r2
 8000590:	4299      	cmp	r1, r3
 8000592:	d150      	bne.n	8000636 <vTaskPrioritySet+0x156>
 8000594:	69bb      	ldr	r3, [r7, #24]
 8000596:	3304      	adds	r3, #4
 8000598:	4618      	mov	r0, r3
 800059a:	f7ff fe37 	bl	800020c <uxListRemove>
 800059e:	4603      	mov	r3, r0
 80005a0:	2b00      	cmp	r3, #0
 80005a2:	d109      	bne.n	80005b8 <vTaskPrioritySet+0xd8>
 80005a4:	2201      	movs	r2, #1
 80005a6:	693b      	ldr	r3, [r7, #16]
 80005a8:	fa02 f303 	lsl.w	r3, r2, r3
 80005ac:	43da      	mvns	r2, r3
 80005ae:	4b2c      	ldr	r3, [pc, #176]	; (8000660 <vTaskPrioritySet+0x180>)
 80005b0:	681b      	ldr	r3, [r3, #0]
 80005b2:	4013      	ands	r3, r2
 80005b4:	4a2a      	ldr	r2, [pc, #168]	; (8000660 <vTaskPrioritySet+0x180>)
 80005b6:	6013      	str	r3, [r2, #0]
 80005b8:	69bb      	ldr	r3, [r7, #24]
 80005ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80005bc:	2201      	movs	r2, #1
 80005be:	409a      	lsls	r2, r3
 80005c0:	4b27      	ldr	r3, [pc, #156]	; (8000660 <vTaskPrioritySet+0x180>)
 80005c2:	681b      	ldr	r3, [r3, #0]
 80005c4:	4313      	orrs	r3, r2
 80005c6:	4a26      	ldr	r2, [pc, #152]	; (8000660 <vTaskPrioritySet+0x180>)
 80005c8:	6013      	str	r3, [r2, #0]
 80005ca:	69bb      	ldr	r3, [r7, #24]
 80005cc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80005ce:	4923      	ldr	r1, [pc, #140]	; (800065c <vTaskPrioritySet+0x17c>)
 80005d0:	4613      	mov	r3, r2
 80005d2:	009b      	lsls	r3, r3, #2
 80005d4:	4413      	add	r3, r2
 80005d6:	009b      	lsls	r3, r3, #2
 80005d8:	440b      	add	r3, r1
 80005da:	3304      	adds	r3, #4
 80005dc:	681b      	ldr	r3, [r3, #0]
 80005de:	60fb      	str	r3, [r7, #12]
 80005e0:	69bb      	ldr	r3, [r7, #24]
 80005e2:	68fa      	ldr	r2, [r7, #12]
 80005e4:	609a      	str	r2, [r3, #8]
 80005e6:	68fb      	ldr	r3, [r7, #12]
 80005e8:	689a      	ldr	r2, [r3, #8]
 80005ea:	69bb      	ldr	r3, [r7, #24]
 80005ec:	60da      	str	r2, [r3, #12]
 80005ee:	68fb      	ldr	r3, [r7, #12]
 80005f0:	689b      	ldr	r3, [r3, #8]
 80005f2:	69ba      	ldr	r2, [r7, #24]
 80005f4:	3204      	adds	r2, #4
 80005f6:	605a      	str	r2, [r3, #4]
 80005f8:	69bb      	ldr	r3, [r7, #24]
 80005fa:	1d1a      	adds	r2, r3, #4
 80005fc:	68fb      	ldr	r3, [r7, #12]
 80005fe:	609a      	str	r2, [r3, #8]
 8000600:	69bb      	ldr	r3, [r7, #24]
 8000602:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000604:	4613      	mov	r3, r2
 8000606:	009b      	lsls	r3, r3, #2
 8000608:	4413      	add	r3, r2
 800060a:	009b      	lsls	r3, r3, #2
 800060c:	4a13      	ldr	r2, [pc, #76]	; (800065c <vTaskPrioritySet+0x17c>)
 800060e:	441a      	add	r2, r3
 8000610:	69bb      	ldr	r3, [r7, #24]
 8000612:	615a      	str	r2, [r3, #20]
 8000614:	69bb      	ldr	r3, [r7, #24]
 8000616:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000618:	4910      	ldr	r1, [pc, #64]	; (800065c <vTaskPrioritySet+0x17c>)
 800061a:	4613      	mov	r3, r2
 800061c:	009b      	lsls	r3, r3, #2
 800061e:	4413      	add	r3, r2
 8000620:	009b      	lsls	r3, r3, #2
 8000622:	440b      	add	r3, r1
 8000624:	681b      	ldr	r3, [r3, #0]
 8000626:	1c59      	adds	r1, r3, #1
 8000628:	480c      	ldr	r0, [pc, #48]	; (800065c <vTaskPrioritySet+0x17c>)
 800062a:	4613      	mov	r3, r2
 800062c:	009b      	lsls	r3, r3, #2
 800062e:	4413      	add	r3, r2
 8000630:	009b      	lsls	r3, r3, #2
 8000632:	4403      	add	r3, r0
 8000634:	6019      	str	r1, [r3, #0]
 8000636:	69fb      	ldr	r3, [r7, #28]
 8000638:	2b00      	cmp	r3, #0
 800063a:	d007      	beq.n	800064c <vTaskPrioritySet+0x16c>
 800063c:	4b09      	ldr	r3, [pc, #36]	; (8000664 <vTaskPrioritySet+0x184>)
 800063e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8000642:	601a      	str	r2, [r3, #0]
 8000644:	f3bf 8f4f 	dsb	sy
 8000648:	f3bf 8f6f 	isb	sy
 800064c:	f000 fd10 	bl	8001070 <vPortExitCritical>
 8000650:	bf00      	nop
 8000652:	3720      	adds	r7, #32
 8000654:	46bd      	mov	sp, r7
 8000656:	bd80      	pop	{r7, pc}
 8000658:	2000006c 	.word	0x2000006c
 800065c:	20000070 	.word	0x20000070
 8000660:	2000014c 	.word	0x2000014c
 8000664:	e000ed04 	.word	0xe000ed04

08000668 <vTaskSuspend>:
 8000668:	b580      	push	{r7, lr}
 800066a:	b084      	sub	sp, #16
 800066c:	af00      	add	r7, sp, #0
 800066e:	6078      	str	r0, [r7, #4]
 8000670:	f000 fce4 	bl	800103c <vPortEnterCritical>
 8000674:	687b      	ldr	r3, [r7, #4]
 8000676:	2b00      	cmp	r3, #0
 8000678:	d102      	bne.n	8000680 <vTaskSuspend+0x18>
 800067a:	4b3b      	ldr	r3, [pc, #236]	; (8000768 <vTaskSuspend+0x100>)
 800067c:	681b      	ldr	r3, [r3, #0]
 800067e:	e000      	b.n	8000682 <vTaskSuspend+0x1a>
 8000680:	687b      	ldr	r3, [r7, #4]
 8000682:	60bb      	str	r3, [r7, #8]
 8000684:	68bb      	ldr	r3, [r7, #8]
 8000686:	3304      	adds	r3, #4
 8000688:	4618      	mov	r0, r3
 800068a:	f7ff fdbf 	bl	800020c <uxListRemove>
 800068e:	4603      	mov	r3, r0
 8000690:	2b00      	cmp	r3, #0
 8000692:	d115      	bne.n	80006c0 <vTaskSuspend+0x58>
 8000694:	68bb      	ldr	r3, [r7, #8]
 8000696:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000698:	4934      	ldr	r1, [pc, #208]	; (800076c <vTaskSuspend+0x104>)
 800069a:	4613      	mov	r3, r2
 800069c:	009b      	lsls	r3, r3, #2
 800069e:	4413      	add	r3, r2
 80006a0:	009b      	lsls	r3, r3, #2
 80006a2:	440b      	add	r3, r1
 80006a4:	681b      	ldr	r3, [r3, #0]
 80006a6:	2b00      	cmp	r3, #0
 80006a8:	d10a      	bne.n	80006c0 <vTaskSuspend+0x58>
 80006aa:	68bb      	ldr	r3, [r7, #8]
 80006ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80006ae:	2201      	movs	r2, #1
 80006b0:	fa02 f303 	lsl.w	r3, r2, r3
 80006b4:	43da      	mvns	r2, r3
 80006b6:	4b2e      	ldr	r3, [pc, #184]	; (8000770 <vTaskSuspend+0x108>)
 80006b8:	681b      	ldr	r3, [r3, #0]
 80006ba:	4013      	ands	r3, r2
 80006bc:	4a2c      	ldr	r2, [pc, #176]	; (8000770 <vTaskSuspend+0x108>)
 80006be:	6013      	str	r3, [r2, #0]
 80006c0:	68bb      	ldr	r3, [r7, #8]
 80006c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80006c4:	2b00      	cmp	r3, #0
 80006c6:	d004      	beq.n	80006d2 <vTaskSuspend+0x6a>
 80006c8:	68bb      	ldr	r3, [r7, #8]
 80006ca:	3318      	adds	r3, #24
 80006cc:	4618      	mov	r0, r3
 80006ce:	f7ff fd9d 	bl	800020c <uxListRemove>
 80006d2:	68bb      	ldr	r3, [r7, #8]
 80006d4:	3304      	adds	r3, #4
 80006d6:	4619      	mov	r1, r3
 80006d8:	4826      	ldr	r0, [pc, #152]	; (8000774 <vTaskSuspend+0x10c>)
 80006da:	f7ff fd74 	bl	80001c6 <vListInsertEnd>
 80006de:	2300      	movs	r3, #0
 80006e0:	60fb      	str	r3, [r7, #12]
 80006e2:	e010      	b.n	8000706 <vTaskSuspend+0x9e>
 80006e4:	68ba      	ldr	r2, [r7, #8]
 80006e6:	68fb      	ldr	r3, [r7, #12]
 80006e8:	4413      	add	r3, r2
 80006ea:	3350      	adds	r3, #80	; 0x50
 80006ec:	781b      	ldrb	r3, [r3, #0]
 80006ee:	b2db      	uxtb	r3, r3
 80006f0:	2b01      	cmp	r3, #1
 80006f2:	d105      	bne.n	8000700 <vTaskSuspend+0x98>
 80006f4:	68ba      	ldr	r2, [r7, #8]
 80006f6:	68fb      	ldr	r3, [r7, #12]
 80006f8:	4413      	add	r3, r2
 80006fa:	3350      	adds	r3, #80	; 0x50
 80006fc:	2200      	movs	r2, #0
 80006fe:	701a      	strb	r2, [r3, #0]
 8000700:	68fb      	ldr	r3, [r7, #12]
 8000702:	3301      	adds	r3, #1
 8000704:	60fb      	str	r3, [r7, #12]
 8000706:	68fb      	ldr	r3, [r7, #12]
 8000708:	2b00      	cmp	r3, #0
 800070a:	ddeb      	ble.n	80006e4 <vTaskSuspend+0x7c>
 800070c:	f000 fcb0 	bl	8001070 <vPortExitCritical>
 8000710:	4b19      	ldr	r3, [pc, #100]	; (8000778 <vTaskSuspend+0x110>)
 8000712:	681b      	ldr	r3, [r3, #0]
 8000714:	2b00      	cmp	r3, #0
 8000716:	d005      	beq.n	8000724 <vTaskSuspend+0xbc>
 8000718:	f000 fc90 	bl	800103c <vPortEnterCritical>
 800071c:	f000 fbe4 	bl	8000ee8 <prvResetNextTaskUnblockTime>
 8000720:	f000 fca6 	bl	8001070 <vPortExitCritical>
 8000724:	4b10      	ldr	r3, [pc, #64]	; (8000768 <vTaskSuspend+0x100>)
 8000726:	681b      	ldr	r3, [r3, #0]
 8000728:	68ba      	ldr	r2, [r7, #8]
 800072a:	429a      	cmp	r2, r3
 800072c:	d118      	bne.n	8000760 <vTaskSuspend+0xf8>
 800072e:	4b12      	ldr	r3, [pc, #72]	; (8000778 <vTaskSuspend+0x110>)
 8000730:	681b      	ldr	r3, [r3, #0]
 8000732:	2b00      	cmp	r3, #0
 8000734:	d008      	beq.n	8000748 <vTaskSuspend+0xe0>
 8000736:	4b11      	ldr	r3, [pc, #68]	; (800077c <vTaskSuspend+0x114>)
 8000738:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800073c:	601a      	str	r2, [r3, #0]
 800073e:	f3bf 8f4f 	dsb	sy
 8000742:	f3bf 8f6f 	isb	sy
 8000746:	e00b      	b.n	8000760 <vTaskSuspend+0xf8>
 8000748:	4b0a      	ldr	r3, [pc, #40]	; (8000774 <vTaskSuspend+0x10c>)
 800074a:	681a      	ldr	r2, [r3, #0]
 800074c:	4b0c      	ldr	r3, [pc, #48]	; (8000780 <vTaskSuspend+0x118>)
 800074e:	681b      	ldr	r3, [r3, #0]
 8000750:	429a      	cmp	r2, r3
 8000752:	d103      	bne.n	800075c <vTaskSuspend+0xf4>
 8000754:	4b04      	ldr	r3, [pc, #16]	; (8000768 <vTaskSuspend+0x100>)
 8000756:	2200      	movs	r2, #0
 8000758:	601a      	str	r2, [r3, #0]
 800075a:	e001      	b.n	8000760 <vTaskSuspend+0xf8>
 800075c:	f000 fae8 	bl	8000d30 <vTaskSwitchContext>
 8000760:	bf00      	nop
 8000762:	3710      	adds	r7, #16
 8000764:	46bd      	mov	sp, r7
 8000766:	bd80      	pop	{r7, pc}
 8000768:	2000006c 	.word	0x2000006c
 800076c:	20000070 	.word	0x20000070
 8000770:	2000014c 	.word	0x2000014c
 8000774:	20000130 	.word	0x20000130
 8000778:	20000150 	.word	0x20000150
 800077c:	e000ed04 	.word	0xe000ed04
 8000780:	20000144 	.word	0x20000144

08000784 <prvTaskIsTaskSuspended>:
 8000784:	b480      	push	{r7}
 8000786:	b085      	sub	sp, #20
 8000788:	af00      	add	r7, sp, #0
 800078a:	6078      	str	r0, [r7, #4]
 800078c:	2300      	movs	r3, #0
 800078e:	60fb      	str	r3, [r7, #12]
 8000790:	687b      	ldr	r3, [r7, #4]
 8000792:	60bb      	str	r3, [r7, #8]
 8000794:	68bb      	ldr	r3, [r7, #8]
 8000796:	695b      	ldr	r3, [r3, #20]
 8000798:	4a09      	ldr	r2, [pc, #36]	; (80007c0 <prvTaskIsTaskSuspended+0x3c>)
 800079a:	4293      	cmp	r3, r2
 800079c:	d10a      	bne.n	80007b4 <prvTaskIsTaskSuspended+0x30>
 800079e:	68bb      	ldr	r3, [r7, #8]
 80007a0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80007a2:	4a08      	ldr	r2, [pc, #32]	; (80007c4 <prvTaskIsTaskSuspended+0x40>)
 80007a4:	4293      	cmp	r3, r2
 80007a6:	d005      	beq.n	80007b4 <prvTaskIsTaskSuspended+0x30>
 80007a8:	68bb      	ldr	r3, [r7, #8]
 80007aa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80007ac:	2b00      	cmp	r3, #0
 80007ae:	d101      	bne.n	80007b4 <prvTaskIsTaskSuspended+0x30>
 80007b0:	2301      	movs	r3, #1
 80007b2:	60fb      	str	r3, [r7, #12]
 80007b4:	68fb      	ldr	r3, [r7, #12]
 80007b6:	4618      	mov	r0, r3
 80007b8:	3714      	adds	r7, #20
 80007ba:	46bd      	mov	sp, r7
 80007bc:	bc80      	pop	{r7}
 80007be:	4770      	bx	lr
 80007c0:	20000130 	.word	0x20000130
 80007c4:	20000104 	.word	0x20000104

080007c8 <vTaskResume>:
 80007c8:	b580      	push	{r7, lr}
 80007ca:	b084      	sub	sp, #16
 80007cc:	af00      	add	r7, sp, #0
 80007ce:	6078      	str	r0, [r7, #4]
 80007d0:	687b      	ldr	r3, [r7, #4]
 80007d2:	60fb      	str	r3, [r7, #12]
 80007d4:	4b34      	ldr	r3, [pc, #208]	; (80008a8 <vTaskResume+0xe0>)
 80007d6:	681b      	ldr	r3, [r3, #0]
 80007d8:	68fa      	ldr	r2, [r7, #12]
 80007da:	429a      	cmp	r2, r3
 80007dc:	d05f      	beq.n	800089e <vTaskResume+0xd6>
 80007de:	68fb      	ldr	r3, [r7, #12]
 80007e0:	2b00      	cmp	r3, #0
 80007e2:	d05c      	beq.n	800089e <vTaskResume+0xd6>
 80007e4:	f000 fc2a 	bl	800103c <vPortEnterCritical>
 80007e8:	68f8      	ldr	r0, [r7, #12]
 80007ea:	f7ff ffcb 	bl	8000784 <prvTaskIsTaskSuspended>
 80007ee:	4603      	mov	r3, r0
 80007f0:	2b00      	cmp	r3, #0
 80007f2:	d052      	beq.n	800089a <vTaskResume+0xd2>
 80007f4:	68fb      	ldr	r3, [r7, #12]
 80007f6:	3304      	adds	r3, #4
 80007f8:	4618      	mov	r0, r3
 80007fa:	f7ff fd07 	bl	800020c <uxListRemove>
 80007fe:	68fb      	ldr	r3, [r7, #12]
 8000800:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000802:	2201      	movs	r2, #1
 8000804:	409a      	lsls	r2, r3
 8000806:	4b29      	ldr	r3, [pc, #164]	; (80008ac <vTaskResume+0xe4>)
 8000808:	681b      	ldr	r3, [r3, #0]
 800080a:	4313      	orrs	r3, r2
 800080c:	4a27      	ldr	r2, [pc, #156]	; (80008ac <vTaskResume+0xe4>)
 800080e:	6013      	str	r3, [r2, #0]
 8000810:	68fb      	ldr	r3, [r7, #12]
 8000812:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000814:	4926      	ldr	r1, [pc, #152]	; (80008b0 <vTaskResume+0xe8>)
 8000816:	4613      	mov	r3, r2
 8000818:	009b      	lsls	r3, r3, #2
 800081a:	4413      	add	r3, r2
 800081c:	009b      	lsls	r3, r3, #2
 800081e:	440b      	add	r3, r1
 8000820:	3304      	adds	r3, #4
 8000822:	681b      	ldr	r3, [r3, #0]
 8000824:	60bb      	str	r3, [r7, #8]
 8000826:	68fb      	ldr	r3, [r7, #12]
 8000828:	68ba      	ldr	r2, [r7, #8]
 800082a:	609a      	str	r2, [r3, #8]
 800082c:	68bb      	ldr	r3, [r7, #8]
 800082e:	689a      	ldr	r2, [r3, #8]
 8000830:	68fb      	ldr	r3, [r7, #12]
 8000832:	60da      	str	r2, [r3, #12]
 8000834:	68bb      	ldr	r3, [r7, #8]
 8000836:	689b      	ldr	r3, [r3, #8]
 8000838:	68fa      	ldr	r2, [r7, #12]
 800083a:	3204      	adds	r2, #4
 800083c:	605a      	str	r2, [r3, #4]
 800083e:	68fb      	ldr	r3, [r7, #12]
 8000840:	1d1a      	adds	r2, r3, #4
 8000842:	68bb      	ldr	r3, [r7, #8]
 8000844:	609a      	str	r2, [r3, #8]
 8000846:	68fb      	ldr	r3, [r7, #12]
 8000848:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800084a:	4613      	mov	r3, r2
 800084c:	009b      	lsls	r3, r3, #2
 800084e:	4413      	add	r3, r2
 8000850:	009b      	lsls	r3, r3, #2
 8000852:	4a17      	ldr	r2, [pc, #92]	; (80008b0 <vTaskResume+0xe8>)
 8000854:	441a      	add	r2, r3
 8000856:	68fb      	ldr	r3, [r7, #12]
 8000858:	615a      	str	r2, [r3, #20]
 800085a:	68fb      	ldr	r3, [r7, #12]
 800085c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800085e:	4914      	ldr	r1, [pc, #80]	; (80008b0 <vTaskResume+0xe8>)
 8000860:	4613      	mov	r3, r2
 8000862:	009b      	lsls	r3, r3, #2
 8000864:	4413      	add	r3, r2
 8000866:	009b      	lsls	r3, r3, #2
 8000868:	440b      	add	r3, r1
 800086a:	681b      	ldr	r3, [r3, #0]
 800086c:	1c59      	adds	r1, r3, #1
 800086e:	4810      	ldr	r0, [pc, #64]	; (80008b0 <vTaskResume+0xe8>)
 8000870:	4613      	mov	r3, r2
 8000872:	009b      	lsls	r3, r3, #2
 8000874:	4413      	add	r3, r2
 8000876:	009b      	lsls	r3, r3, #2
 8000878:	4403      	add	r3, r0
 800087a:	6019      	str	r1, [r3, #0]
 800087c:	68fb      	ldr	r3, [r7, #12]
 800087e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000880:	4b09      	ldr	r3, [pc, #36]	; (80008a8 <vTaskResume+0xe0>)
 8000882:	681b      	ldr	r3, [r3, #0]
 8000884:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000886:	429a      	cmp	r2, r3
 8000888:	d307      	bcc.n	800089a <vTaskResume+0xd2>
 800088a:	4b0a      	ldr	r3, [pc, #40]	; (80008b4 <vTaskResume+0xec>)
 800088c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8000890:	601a      	str	r2, [r3, #0]
 8000892:	f3bf 8f4f 	dsb	sy
 8000896:	f3bf 8f6f 	isb	sy
 800089a:	f000 fbe9 	bl	8001070 <vPortExitCritical>
 800089e:	bf00      	nop
 80008a0:	3710      	adds	r7, #16
 80008a2:	46bd      	mov	sp, r7
 80008a4:	bd80      	pop	{r7, pc}
 80008a6:	bf00      	nop
 80008a8:	2000006c 	.word	0x2000006c
 80008ac:	2000014c 	.word	0x2000014c
 80008b0:	20000070 	.word	0x20000070
 80008b4:	e000ed04 	.word	0xe000ed04

080008b8 <vTaskStartScheduler>:
 80008b8:	b580      	push	{r7, lr}
 80008ba:	b084      	sub	sp, #16
 80008bc:	af02      	add	r7, sp, #8
 80008be:	4b15      	ldr	r3, [pc, #84]	; (8000914 <vTaskStartScheduler+0x5c>)
 80008c0:	9301      	str	r3, [sp, #4]
 80008c2:	2300      	movs	r3, #0
 80008c4:	9300      	str	r3, [sp, #0]
 80008c6:	2300      	movs	r3, #0
 80008c8:	f44f 7280 	mov.w	r2, #256	; 0x100
 80008cc:	4912      	ldr	r1, [pc, #72]	; (8000918 <vTaskStartScheduler+0x60>)
 80008ce:	4813      	ldr	r0, [pc, #76]	; (800091c <vTaskStartScheduler+0x64>)
 80008d0:	f7ff fcc5 	bl	800025e <xTaskCreate>
 80008d4:	6078      	str	r0, [r7, #4]
 80008d6:	687b      	ldr	r3, [r7, #4]
 80008d8:	2b01      	cmp	r3, #1
 80008da:	d115      	bne.n	8000908 <vTaskStartScheduler+0x50>
 80008dc:	f04f 03bf 	mov.w	r3, #191	; 0xbf
 80008e0:	f383 8811 	msr	BASEPRI, r3
 80008e4:	f3bf 8f6f 	isb	sy
 80008e8:	f3bf 8f4f 	dsb	sy
 80008ec:	603b      	str	r3, [r7, #0]
 80008ee:	bf00      	nop
 80008f0:	4b0b      	ldr	r3, [pc, #44]	; (8000920 <vTaskStartScheduler+0x68>)
 80008f2:	f04f 32ff 	mov.w	r2, #4294967295
 80008f6:	601a      	str	r2, [r3, #0]
 80008f8:	4b0a      	ldr	r3, [pc, #40]	; (8000924 <vTaskStartScheduler+0x6c>)
 80008fa:	2201      	movs	r2, #1
 80008fc:	601a      	str	r2, [r3, #0]
 80008fe:	4b0a      	ldr	r3, [pc, #40]	; (8000928 <vTaskStartScheduler+0x70>)
 8000900:	2200      	movs	r2, #0
 8000902:	601a      	str	r2, [r3, #0]
 8000904:	f000 fb7a 	bl	8000ffc <xPortStartScheduler>
 8000908:	4b08      	ldr	r3, [pc, #32]	; (800092c <vTaskStartScheduler+0x74>)
 800090a:	681b      	ldr	r3, [r3, #0]
 800090c:	bf00      	nop
 800090e:	3708      	adds	r7, #8
 8000910:	46bd      	mov	sp, r7
 8000912:	bd80      	pop	{r7, pc}
 8000914:	20000168 	.word	0x20000168
 8000918:	080056cc 	.word	0x080056cc
 800091c:	08000dbd 	.word	0x08000dbd
 8000920:	20000164 	.word	0x20000164
 8000924:	20000150 	.word	0x20000150
 8000928:	20000148 	.word	0x20000148
 800092c:	20000000 	.word	0x20000000

08000930 <vTaskSuspendAll>:
 8000930:	b480      	push	{r7}
 8000932:	af00      	add	r7, sp, #0
 8000934:	4b04      	ldr	r3, [pc, #16]	; (8000948 <vTaskSuspendAll+0x18>)
 8000936:	681b      	ldr	r3, [r3, #0]
 8000938:	3301      	adds	r3, #1
 800093a:	4a03      	ldr	r2, [pc, #12]	; (8000948 <vTaskSuspendAll+0x18>)
 800093c:	6013      	str	r3, [r2, #0]
 800093e:	bf00      	nop
 8000940:	46bd      	mov	sp, r7
 8000942:	bc80      	pop	{r7}
 8000944:	4770      	bx	lr
 8000946:	bf00      	nop
 8000948:	2000016c 	.word	0x2000016c

0800094c <xTaskResumeAll>:
 800094c:	b580      	push	{r7, lr}
 800094e:	b086      	sub	sp, #24
 8000950:	af00      	add	r7, sp, #0
 8000952:	2300      	movs	r3, #0
 8000954:	617b      	str	r3, [r7, #20]
 8000956:	2300      	movs	r3, #0
 8000958:	613b      	str	r3, [r7, #16]
 800095a:	f000 fb6f 	bl	800103c <vPortEnterCritical>
 800095e:	4b68      	ldr	r3, [pc, #416]	; (8000b00 <xTaskResumeAll+0x1b4>)
 8000960:	681b      	ldr	r3, [r3, #0]
 8000962:	3b01      	subs	r3, #1
 8000964:	4a66      	ldr	r2, [pc, #408]	; (8000b00 <xTaskResumeAll+0x1b4>)
 8000966:	6013      	str	r3, [r2, #0]
 8000968:	4b65      	ldr	r3, [pc, #404]	; (8000b00 <xTaskResumeAll+0x1b4>)
 800096a:	681b      	ldr	r3, [r3, #0]
 800096c:	2b00      	cmp	r3, #0
 800096e:	f040 80c0 	bne.w	8000af2 <xTaskResumeAll+0x1a6>
 8000972:	4b64      	ldr	r3, [pc, #400]	; (8000b04 <xTaskResumeAll+0x1b8>)
 8000974:	681b      	ldr	r3, [r3, #0]
 8000976:	2b00      	cmp	r3, #0
 8000978:	f000 80bb 	beq.w	8000af2 <xTaskResumeAll+0x1a6>
 800097c:	e08a      	b.n	8000a94 <xTaskResumeAll+0x148>
 800097e:	4b62      	ldr	r3, [pc, #392]	; (8000b08 <xTaskResumeAll+0x1bc>)
 8000980:	68db      	ldr	r3, [r3, #12]
 8000982:	68db      	ldr	r3, [r3, #12]
 8000984:	617b      	str	r3, [r7, #20]
 8000986:	697b      	ldr	r3, [r7, #20]
 8000988:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800098a:	60bb      	str	r3, [r7, #8]
 800098c:	697b      	ldr	r3, [r7, #20]
 800098e:	69db      	ldr	r3, [r3, #28]
 8000990:	697a      	ldr	r2, [r7, #20]
 8000992:	6a12      	ldr	r2, [r2, #32]
 8000994:	609a      	str	r2, [r3, #8]
 8000996:	697b      	ldr	r3, [r7, #20]
 8000998:	6a1b      	ldr	r3, [r3, #32]
 800099a:	697a      	ldr	r2, [r7, #20]
 800099c:	69d2      	ldr	r2, [r2, #28]
 800099e:	605a      	str	r2, [r3, #4]
 80009a0:	68bb      	ldr	r3, [r7, #8]
 80009a2:	685a      	ldr	r2, [r3, #4]
 80009a4:	697b      	ldr	r3, [r7, #20]
 80009a6:	3318      	adds	r3, #24
 80009a8:	429a      	cmp	r2, r3
 80009aa:	d103      	bne.n	80009b4 <xTaskResumeAll+0x68>
 80009ac:	697b      	ldr	r3, [r7, #20]
 80009ae:	6a1a      	ldr	r2, [r3, #32]
 80009b0:	68bb      	ldr	r3, [r7, #8]
 80009b2:	605a      	str	r2, [r3, #4]
 80009b4:	697b      	ldr	r3, [r7, #20]
 80009b6:	2200      	movs	r2, #0
 80009b8:	629a      	str	r2, [r3, #40]	; 0x28
 80009ba:	68bb      	ldr	r3, [r7, #8]
 80009bc:	681b      	ldr	r3, [r3, #0]
 80009be:	1e5a      	subs	r2, r3, #1
 80009c0:	68bb      	ldr	r3, [r7, #8]
 80009c2:	601a      	str	r2, [r3, #0]
 80009c4:	697b      	ldr	r3, [r7, #20]
 80009c6:	695b      	ldr	r3, [r3, #20]
 80009c8:	607b      	str	r3, [r7, #4]
 80009ca:	697b      	ldr	r3, [r7, #20]
 80009cc:	689b      	ldr	r3, [r3, #8]
 80009ce:	697a      	ldr	r2, [r7, #20]
 80009d0:	68d2      	ldr	r2, [r2, #12]
 80009d2:	609a      	str	r2, [r3, #8]
 80009d4:	697b      	ldr	r3, [r7, #20]
 80009d6:	68db      	ldr	r3, [r3, #12]
 80009d8:	697a      	ldr	r2, [r7, #20]
 80009da:	6892      	ldr	r2, [r2, #8]
 80009dc:	605a      	str	r2, [r3, #4]
 80009de:	687b      	ldr	r3, [r7, #4]
 80009e0:	685a      	ldr	r2, [r3, #4]
 80009e2:	697b      	ldr	r3, [r7, #20]
 80009e4:	3304      	adds	r3, #4
 80009e6:	429a      	cmp	r2, r3
 80009e8:	d103      	bne.n	80009f2 <xTaskResumeAll+0xa6>
 80009ea:	697b      	ldr	r3, [r7, #20]
 80009ec:	68da      	ldr	r2, [r3, #12]
 80009ee:	687b      	ldr	r3, [r7, #4]
 80009f0:	605a      	str	r2, [r3, #4]
 80009f2:	697b      	ldr	r3, [r7, #20]
 80009f4:	2200      	movs	r2, #0
 80009f6:	615a      	str	r2, [r3, #20]
 80009f8:	687b      	ldr	r3, [r7, #4]
 80009fa:	681b      	ldr	r3, [r3, #0]
 80009fc:	1e5a      	subs	r2, r3, #1
 80009fe:	687b      	ldr	r3, [r7, #4]
 8000a00:	601a      	str	r2, [r3, #0]
 8000a02:	697b      	ldr	r3, [r7, #20]
 8000a04:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000a06:	2201      	movs	r2, #1
 8000a08:	409a      	lsls	r2, r3
 8000a0a:	4b40      	ldr	r3, [pc, #256]	; (8000b0c <xTaskResumeAll+0x1c0>)
 8000a0c:	681b      	ldr	r3, [r3, #0]
 8000a0e:	4313      	orrs	r3, r2
 8000a10:	4a3e      	ldr	r2, [pc, #248]	; (8000b0c <xTaskResumeAll+0x1c0>)
 8000a12:	6013      	str	r3, [r2, #0]
 8000a14:	697b      	ldr	r3, [r7, #20]
 8000a16:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000a18:	493d      	ldr	r1, [pc, #244]	; (8000b10 <xTaskResumeAll+0x1c4>)
 8000a1a:	4613      	mov	r3, r2
 8000a1c:	009b      	lsls	r3, r3, #2
 8000a1e:	4413      	add	r3, r2
 8000a20:	009b      	lsls	r3, r3, #2
 8000a22:	440b      	add	r3, r1
 8000a24:	3304      	adds	r3, #4
 8000a26:	681b      	ldr	r3, [r3, #0]
 8000a28:	603b      	str	r3, [r7, #0]
 8000a2a:	697b      	ldr	r3, [r7, #20]
 8000a2c:	683a      	ldr	r2, [r7, #0]
 8000a2e:	609a      	str	r2, [r3, #8]
 8000a30:	683b      	ldr	r3, [r7, #0]
 8000a32:	689a      	ldr	r2, [r3, #8]
 8000a34:	697b      	ldr	r3, [r7, #20]
 8000a36:	60da      	str	r2, [r3, #12]
 8000a38:	683b      	ldr	r3, [r7, #0]
 8000a3a:	689b      	ldr	r3, [r3, #8]
 8000a3c:	697a      	ldr	r2, [r7, #20]
 8000a3e:	3204      	adds	r2, #4
 8000a40:	605a      	str	r2, [r3, #4]
 8000a42:	697b      	ldr	r3, [r7, #20]
 8000a44:	1d1a      	adds	r2, r3, #4
 8000a46:	683b      	ldr	r3, [r7, #0]
 8000a48:	609a      	str	r2, [r3, #8]
 8000a4a:	697b      	ldr	r3, [r7, #20]
 8000a4c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000a4e:	4613      	mov	r3, r2
 8000a50:	009b      	lsls	r3, r3, #2
 8000a52:	4413      	add	r3, r2
 8000a54:	009b      	lsls	r3, r3, #2
 8000a56:	4a2e      	ldr	r2, [pc, #184]	; (8000b10 <xTaskResumeAll+0x1c4>)
 8000a58:	441a      	add	r2, r3
 8000a5a:	697b      	ldr	r3, [r7, #20]
 8000a5c:	615a      	str	r2, [r3, #20]
 8000a5e:	697b      	ldr	r3, [r7, #20]
 8000a60:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000a62:	492b      	ldr	r1, [pc, #172]	; (8000b10 <xTaskResumeAll+0x1c4>)
 8000a64:	4613      	mov	r3, r2
 8000a66:	009b      	lsls	r3, r3, #2
 8000a68:	4413      	add	r3, r2
 8000a6a:	009b      	lsls	r3, r3, #2
 8000a6c:	440b      	add	r3, r1
 8000a6e:	681b      	ldr	r3, [r3, #0]
 8000a70:	1c59      	adds	r1, r3, #1
 8000a72:	4827      	ldr	r0, [pc, #156]	; (8000b10 <xTaskResumeAll+0x1c4>)
 8000a74:	4613      	mov	r3, r2
 8000a76:	009b      	lsls	r3, r3, #2
 8000a78:	4413      	add	r3, r2
 8000a7a:	009b      	lsls	r3, r3, #2
 8000a7c:	4403      	add	r3, r0
 8000a7e:	6019      	str	r1, [r3, #0]
 8000a80:	697b      	ldr	r3, [r7, #20]
 8000a82:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000a84:	4b23      	ldr	r3, [pc, #140]	; (8000b14 <xTaskResumeAll+0x1c8>)
 8000a86:	681b      	ldr	r3, [r3, #0]
 8000a88:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000a8a:	429a      	cmp	r2, r3
 8000a8c:	d302      	bcc.n	8000a94 <xTaskResumeAll+0x148>
 8000a8e:	4b22      	ldr	r3, [pc, #136]	; (8000b18 <xTaskResumeAll+0x1cc>)
 8000a90:	2201      	movs	r2, #1
 8000a92:	601a      	str	r2, [r3, #0]
 8000a94:	4b1c      	ldr	r3, [pc, #112]	; (8000b08 <xTaskResumeAll+0x1bc>)
 8000a96:	681b      	ldr	r3, [r3, #0]
 8000a98:	2b00      	cmp	r3, #0
 8000a9a:	f47f af70 	bne.w	800097e <xTaskResumeAll+0x32>
 8000a9e:	697b      	ldr	r3, [r7, #20]
 8000aa0:	2b00      	cmp	r3, #0
 8000aa2:	d001      	beq.n	8000aa8 <xTaskResumeAll+0x15c>
 8000aa4:	f000 fa20 	bl	8000ee8 <prvResetNextTaskUnblockTime>
 8000aa8:	4b1c      	ldr	r3, [pc, #112]	; (8000b1c <xTaskResumeAll+0x1d0>)
 8000aaa:	681b      	ldr	r3, [r3, #0]
 8000aac:	60fb      	str	r3, [r7, #12]
 8000aae:	68fb      	ldr	r3, [r7, #12]
 8000ab0:	2b00      	cmp	r3, #0
 8000ab2:	d010      	beq.n	8000ad6 <xTaskResumeAll+0x18a>
 8000ab4:	f000 f836 	bl	8000b24 <xTaskIncrementTick>
 8000ab8:	4603      	mov	r3, r0
 8000aba:	2b00      	cmp	r3, #0
 8000abc:	d002      	beq.n	8000ac4 <xTaskResumeAll+0x178>
 8000abe:	4b16      	ldr	r3, [pc, #88]	; (8000b18 <xTaskResumeAll+0x1cc>)
 8000ac0:	2201      	movs	r2, #1
 8000ac2:	601a      	str	r2, [r3, #0]
 8000ac4:	68fb      	ldr	r3, [r7, #12]
 8000ac6:	3b01      	subs	r3, #1
 8000ac8:	60fb      	str	r3, [r7, #12]
 8000aca:	68fb      	ldr	r3, [r7, #12]
 8000acc:	2b00      	cmp	r3, #0
 8000ace:	d1f1      	bne.n	8000ab4 <xTaskResumeAll+0x168>
 8000ad0:	4b12      	ldr	r3, [pc, #72]	; (8000b1c <xTaskResumeAll+0x1d0>)
 8000ad2:	2200      	movs	r2, #0
 8000ad4:	601a      	str	r2, [r3, #0]
 8000ad6:	4b10      	ldr	r3, [pc, #64]	; (8000b18 <xTaskResumeAll+0x1cc>)
 8000ad8:	681b      	ldr	r3, [r3, #0]
 8000ada:	2b00      	cmp	r3, #0
 8000adc:	d009      	beq.n	8000af2 <xTaskResumeAll+0x1a6>
 8000ade:	2301      	movs	r3, #1
 8000ae0:	613b      	str	r3, [r7, #16]
 8000ae2:	4b0f      	ldr	r3, [pc, #60]	; (8000b20 <xTaskResumeAll+0x1d4>)
 8000ae4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8000ae8:	601a      	str	r2, [r3, #0]
 8000aea:	f3bf 8f4f 	dsb	sy
 8000aee:	f3bf 8f6f 	isb	sy
 8000af2:	f000 fabd 	bl	8001070 <vPortExitCritical>
 8000af6:	693b      	ldr	r3, [r7, #16]
 8000af8:	4618      	mov	r0, r3
 8000afa:	3718      	adds	r7, #24
 8000afc:	46bd      	mov	sp, r7
 8000afe:	bd80      	pop	{r7, pc}
 8000b00:	2000016c 	.word	0x2000016c
 8000b04:	20000144 	.word	0x20000144
 8000b08:	20000104 	.word	0x20000104
 8000b0c:	2000014c 	.word	0x2000014c
 8000b10:	20000070 	.word	0x20000070
 8000b14:	2000006c 	.word	0x2000006c
 8000b18:	20000158 	.word	0x20000158
 8000b1c:	20000154 	.word	0x20000154
 8000b20:	e000ed04 	.word	0xe000ed04

08000b24 <xTaskIncrementTick>:
 8000b24:	b580      	push	{r7, lr}
 8000b26:	b088      	sub	sp, #32
 8000b28:	af00      	add	r7, sp, #0
 8000b2a:	2300      	movs	r3, #0
 8000b2c:	61fb      	str	r3, [r7, #28]
 8000b2e:	4b75      	ldr	r3, [pc, #468]	; (8000d04 <xTaskIncrementTick+0x1e0>)
 8000b30:	681b      	ldr	r3, [r3, #0]
 8000b32:	2b00      	cmp	r3, #0
 8000b34:	f040 80dc 	bne.w	8000cf0 <xTaskIncrementTick+0x1cc>
 8000b38:	4b73      	ldr	r3, [pc, #460]	; (8000d08 <xTaskIncrementTick+0x1e4>)
 8000b3a:	681b      	ldr	r3, [r3, #0]
 8000b3c:	3301      	adds	r3, #1
 8000b3e:	61bb      	str	r3, [r7, #24]
 8000b40:	4a71      	ldr	r2, [pc, #452]	; (8000d08 <xTaskIncrementTick+0x1e4>)
 8000b42:	69bb      	ldr	r3, [r7, #24]
 8000b44:	6013      	str	r3, [r2, #0]
 8000b46:	69bb      	ldr	r3, [r7, #24]
 8000b48:	2b00      	cmp	r3, #0
 8000b4a:	d110      	bne.n	8000b6e <xTaskIncrementTick+0x4a>
 8000b4c:	4b6f      	ldr	r3, [pc, #444]	; (8000d0c <xTaskIncrementTick+0x1e8>)
 8000b4e:	681b      	ldr	r3, [r3, #0]
 8000b50:	617b      	str	r3, [r7, #20]
 8000b52:	4b6f      	ldr	r3, [pc, #444]	; (8000d10 <xTaskIncrementTick+0x1ec>)
 8000b54:	681b      	ldr	r3, [r3, #0]
 8000b56:	4a6d      	ldr	r2, [pc, #436]	; (8000d0c <xTaskIncrementTick+0x1e8>)
 8000b58:	6013      	str	r3, [r2, #0]
 8000b5a:	4a6d      	ldr	r2, [pc, #436]	; (8000d10 <xTaskIncrementTick+0x1ec>)
 8000b5c:	697b      	ldr	r3, [r7, #20]
 8000b5e:	6013      	str	r3, [r2, #0]
 8000b60:	4b6c      	ldr	r3, [pc, #432]	; (8000d14 <xTaskIncrementTick+0x1f0>)
 8000b62:	681b      	ldr	r3, [r3, #0]
 8000b64:	3301      	adds	r3, #1
 8000b66:	4a6b      	ldr	r2, [pc, #428]	; (8000d14 <xTaskIncrementTick+0x1f0>)
 8000b68:	6013      	str	r3, [r2, #0]
 8000b6a:	f000 f9bd 	bl	8000ee8 <prvResetNextTaskUnblockTime>
 8000b6e:	4b6a      	ldr	r3, [pc, #424]	; (8000d18 <xTaskIncrementTick+0x1f4>)
 8000b70:	681b      	ldr	r3, [r3, #0]
 8000b72:	69ba      	ldr	r2, [r7, #24]
 8000b74:	429a      	cmp	r2, r3
 8000b76:	f0c0 80a6 	bcc.w	8000cc6 <xTaskIncrementTick+0x1a2>
 8000b7a:	4b64      	ldr	r3, [pc, #400]	; (8000d0c <xTaskIncrementTick+0x1e8>)
 8000b7c:	681b      	ldr	r3, [r3, #0]
 8000b7e:	681b      	ldr	r3, [r3, #0]
 8000b80:	2b00      	cmp	r3, #0
 8000b82:	d104      	bne.n	8000b8e <xTaskIncrementTick+0x6a>
 8000b84:	4b64      	ldr	r3, [pc, #400]	; (8000d18 <xTaskIncrementTick+0x1f4>)
 8000b86:	f04f 32ff 	mov.w	r2, #4294967295
 8000b8a:	601a      	str	r2, [r3, #0]
 8000b8c:	e09b      	b.n	8000cc6 <xTaskIncrementTick+0x1a2>
 8000b8e:	4b5f      	ldr	r3, [pc, #380]	; (8000d0c <xTaskIncrementTick+0x1e8>)
 8000b90:	681b      	ldr	r3, [r3, #0]
 8000b92:	68db      	ldr	r3, [r3, #12]
 8000b94:	68db      	ldr	r3, [r3, #12]
 8000b96:	613b      	str	r3, [r7, #16]
 8000b98:	693b      	ldr	r3, [r7, #16]
 8000b9a:	685b      	ldr	r3, [r3, #4]
 8000b9c:	60fb      	str	r3, [r7, #12]
 8000b9e:	69ba      	ldr	r2, [r7, #24]
 8000ba0:	68fb      	ldr	r3, [r7, #12]
 8000ba2:	429a      	cmp	r2, r3
 8000ba4:	d203      	bcs.n	8000bae <xTaskIncrementTick+0x8a>
 8000ba6:	4a5c      	ldr	r2, [pc, #368]	; (8000d18 <xTaskIncrementTick+0x1f4>)
 8000ba8:	68fb      	ldr	r3, [r7, #12]
 8000baa:	6013      	str	r3, [r2, #0]
 8000bac:	e08b      	b.n	8000cc6 <xTaskIncrementTick+0x1a2>
 8000bae:	693b      	ldr	r3, [r7, #16]
 8000bb0:	695b      	ldr	r3, [r3, #20]
 8000bb2:	60bb      	str	r3, [r7, #8]
 8000bb4:	693b      	ldr	r3, [r7, #16]
 8000bb6:	689b      	ldr	r3, [r3, #8]
 8000bb8:	693a      	ldr	r2, [r7, #16]
 8000bba:	68d2      	ldr	r2, [r2, #12]
 8000bbc:	609a      	str	r2, [r3, #8]
 8000bbe:	693b      	ldr	r3, [r7, #16]
 8000bc0:	68db      	ldr	r3, [r3, #12]
 8000bc2:	693a      	ldr	r2, [r7, #16]
 8000bc4:	6892      	ldr	r2, [r2, #8]
 8000bc6:	605a      	str	r2, [r3, #4]
 8000bc8:	68bb      	ldr	r3, [r7, #8]
 8000bca:	685a      	ldr	r2, [r3, #4]
 8000bcc:	693b      	ldr	r3, [r7, #16]
 8000bce:	3304      	adds	r3, #4
 8000bd0:	429a      	cmp	r2, r3
 8000bd2:	d103      	bne.n	8000bdc <xTaskIncrementTick+0xb8>
 8000bd4:	693b      	ldr	r3, [r7, #16]
 8000bd6:	68da      	ldr	r2, [r3, #12]
 8000bd8:	68bb      	ldr	r3, [r7, #8]
 8000bda:	605a      	str	r2, [r3, #4]
 8000bdc:	693b      	ldr	r3, [r7, #16]
 8000bde:	2200      	movs	r2, #0
 8000be0:	615a      	str	r2, [r3, #20]
 8000be2:	68bb      	ldr	r3, [r7, #8]
 8000be4:	681b      	ldr	r3, [r3, #0]
 8000be6:	1e5a      	subs	r2, r3, #1
 8000be8:	68bb      	ldr	r3, [r7, #8]
 8000bea:	601a      	str	r2, [r3, #0]
 8000bec:	693b      	ldr	r3, [r7, #16]
 8000bee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000bf0:	2b00      	cmp	r3, #0
 8000bf2:	d01e      	beq.n	8000c32 <xTaskIncrementTick+0x10e>
 8000bf4:	693b      	ldr	r3, [r7, #16]
 8000bf6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000bf8:	607b      	str	r3, [r7, #4]
 8000bfa:	693b      	ldr	r3, [r7, #16]
 8000bfc:	69db      	ldr	r3, [r3, #28]
 8000bfe:	693a      	ldr	r2, [r7, #16]
 8000c00:	6a12      	ldr	r2, [r2, #32]
 8000c02:	609a      	str	r2, [r3, #8]
 8000c04:	693b      	ldr	r3, [r7, #16]
 8000c06:	6a1b      	ldr	r3, [r3, #32]
 8000c08:	693a      	ldr	r2, [r7, #16]
 8000c0a:	69d2      	ldr	r2, [r2, #28]
 8000c0c:	605a      	str	r2, [r3, #4]
 8000c0e:	687b      	ldr	r3, [r7, #4]
 8000c10:	685a      	ldr	r2, [r3, #4]
 8000c12:	693b      	ldr	r3, [r7, #16]
 8000c14:	3318      	adds	r3, #24
 8000c16:	429a      	cmp	r2, r3
 8000c18:	d103      	bne.n	8000c22 <xTaskIncrementTick+0xfe>
 8000c1a:	693b      	ldr	r3, [r7, #16]
 8000c1c:	6a1a      	ldr	r2, [r3, #32]
 8000c1e:	687b      	ldr	r3, [r7, #4]
 8000c20:	605a      	str	r2, [r3, #4]
 8000c22:	693b      	ldr	r3, [r7, #16]
 8000c24:	2200      	movs	r2, #0
 8000c26:	629a      	str	r2, [r3, #40]	; 0x28
 8000c28:	687b      	ldr	r3, [r7, #4]
 8000c2a:	681b      	ldr	r3, [r3, #0]
 8000c2c:	1e5a      	subs	r2, r3, #1
 8000c2e:	687b      	ldr	r3, [r7, #4]
 8000c30:	601a      	str	r2, [r3, #0]
 8000c32:	693b      	ldr	r3, [r7, #16]
 8000c34:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000c36:	2201      	movs	r2, #1
 8000c38:	409a      	lsls	r2, r3
 8000c3a:	4b38      	ldr	r3, [pc, #224]	; (8000d1c <xTaskIncrementTick+0x1f8>)
 8000c3c:	681b      	ldr	r3, [r3, #0]
 8000c3e:	4313      	orrs	r3, r2
 8000c40:	4a36      	ldr	r2, [pc, #216]	; (8000d1c <xTaskIncrementTick+0x1f8>)
 8000c42:	6013      	str	r3, [r2, #0]
 8000c44:	693b      	ldr	r3, [r7, #16]
 8000c46:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000c48:	4935      	ldr	r1, [pc, #212]	; (8000d20 <xTaskIncrementTick+0x1fc>)
 8000c4a:	4613      	mov	r3, r2
 8000c4c:	009b      	lsls	r3, r3, #2
 8000c4e:	4413      	add	r3, r2
 8000c50:	009b      	lsls	r3, r3, #2
 8000c52:	440b      	add	r3, r1
 8000c54:	3304      	adds	r3, #4
 8000c56:	681b      	ldr	r3, [r3, #0]
 8000c58:	603b      	str	r3, [r7, #0]
 8000c5a:	693b      	ldr	r3, [r7, #16]
 8000c5c:	683a      	ldr	r2, [r7, #0]
 8000c5e:	609a      	str	r2, [r3, #8]
 8000c60:	683b      	ldr	r3, [r7, #0]
 8000c62:	689a      	ldr	r2, [r3, #8]
 8000c64:	693b      	ldr	r3, [r7, #16]
 8000c66:	60da      	str	r2, [r3, #12]
 8000c68:	683b      	ldr	r3, [r7, #0]
 8000c6a:	689b      	ldr	r3, [r3, #8]
 8000c6c:	693a      	ldr	r2, [r7, #16]
 8000c6e:	3204      	adds	r2, #4
 8000c70:	605a      	str	r2, [r3, #4]
 8000c72:	693b      	ldr	r3, [r7, #16]
 8000c74:	1d1a      	adds	r2, r3, #4
 8000c76:	683b      	ldr	r3, [r7, #0]
 8000c78:	609a      	str	r2, [r3, #8]
 8000c7a:	693b      	ldr	r3, [r7, #16]
 8000c7c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000c7e:	4613      	mov	r3, r2
 8000c80:	009b      	lsls	r3, r3, #2
 8000c82:	4413      	add	r3, r2
 8000c84:	009b      	lsls	r3, r3, #2
 8000c86:	4a26      	ldr	r2, [pc, #152]	; (8000d20 <xTaskIncrementTick+0x1fc>)
 8000c88:	441a      	add	r2, r3
 8000c8a:	693b      	ldr	r3, [r7, #16]
 8000c8c:	615a      	str	r2, [r3, #20]
 8000c8e:	693b      	ldr	r3, [r7, #16]
 8000c90:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000c92:	4923      	ldr	r1, [pc, #140]	; (8000d20 <xTaskIncrementTick+0x1fc>)
 8000c94:	4613      	mov	r3, r2
 8000c96:	009b      	lsls	r3, r3, #2
 8000c98:	4413      	add	r3, r2
 8000c9a:	009b      	lsls	r3, r3, #2
 8000c9c:	440b      	add	r3, r1
 8000c9e:	681b      	ldr	r3, [r3, #0]
 8000ca0:	1c59      	adds	r1, r3, #1
 8000ca2:	481f      	ldr	r0, [pc, #124]	; (8000d20 <xTaskIncrementTick+0x1fc>)
 8000ca4:	4613      	mov	r3, r2
 8000ca6:	009b      	lsls	r3, r3, #2
 8000ca8:	4413      	add	r3, r2
 8000caa:	009b      	lsls	r3, r3, #2
 8000cac:	4403      	add	r3, r0
 8000cae:	6019      	str	r1, [r3, #0]
 8000cb0:	693b      	ldr	r3, [r7, #16]
 8000cb2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000cb4:	4b1b      	ldr	r3, [pc, #108]	; (8000d24 <xTaskIncrementTick+0x200>)
 8000cb6:	681b      	ldr	r3, [r3, #0]
 8000cb8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000cba:	429a      	cmp	r2, r3
 8000cbc:	f67f af5d 	bls.w	8000b7a <xTaskIncrementTick+0x56>
 8000cc0:	2301      	movs	r3, #1
 8000cc2:	61fb      	str	r3, [r7, #28]
 8000cc4:	e759      	b.n	8000b7a <xTaskIncrementTick+0x56>
 8000cc6:	4b17      	ldr	r3, [pc, #92]	; (8000d24 <xTaskIncrementTick+0x200>)
 8000cc8:	681b      	ldr	r3, [r3, #0]
 8000cca:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000ccc:	4914      	ldr	r1, [pc, #80]	; (8000d20 <xTaskIncrementTick+0x1fc>)
 8000cce:	4613      	mov	r3, r2
 8000cd0:	009b      	lsls	r3, r3, #2
 8000cd2:	4413      	add	r3, r2
 8000cd4:	009b      	lsls	r3, r3, #2
 8000cd6:	440b      	add	r3, r1
 8000cd8:	681b      	ldr	r3, [r3, #0]
 8000cda:	2b01      	cmp	r3, #1
 8000cdc:	d901      	bls.n	8000ce2 <xTaskIncrementTick+0x1be>
 8000cde:	2301      	movs	r3, #1
 8000ce0:	61fb      	str	r3, [r7, #28]
 8000ce2:	4b11      	ldr	r3, [pc, #68]	; (8000d28 <xTaskIncrementTick+0x204>)
 8000ce4:	681b      	ldr	r3, [r3, #0]
 8000ce6:	2b00      	cmp	r3, #0
 8000ce8:	d007      	beq.n	8000cfa <xTaskIncrementTick+0x1d6>
 8000cea:	2301      	movs	r3, #1
 8000cec:	61fb      	str	r3, [r7, #28]
 8000cee:	e004      	b.n	8000cfa <xTaskIncrementTick+0x1d6>
 8000cf0:	4b0e      	ldr	r3, [pc, #56]	; (8000d2c <xTaskIncrementTick+0x208>)
 8000cf2:	681b      	ldr	r3, [r3, #0]
 8000cf4:	3301      	adds	r3, #1
 8000cf6:	4a0d      	ldr	r2, [pc, #52]	; (8000d2c <xTaskIncrementTick+0x208>)
 8000cf8:	6013      	str	r3, [r2, #0]
 8000cfa:	69fb      	ldr	r3, [r7, #28]
 8000cfc:	4618      	mov	r0, r3
 8000cfe:	3720      	adds	r7, #32
 8000d00:	46bd      	mov	sp, r7
 8000d02:	bd80      	pop	{r7, pc}
 8000d04:	2000016c 	.word	0x2000016c
 8000d08:	20000148 	.word	0x20000148
 8000d0c:	200000fc 	.word	0x200000fc
 8000d10:	20000100 	.word	0x20000100
 8000d14:	2000015c 	.word	0x2000015c
 8000d18:	20000164 	.word	0x20000164
 8000d1c:	2000014c 	.word	0x2000014c
 8000d20:	20000070 	.word	0x20000070
 8000d24:	2000006c 	.word	0x2000006c
 8000d28:	20000158 	.word	0x20000158
 8000d2c:	20000154 	.word	0x20000154

08000d30 <vTaskSwitchContext>:
 8000d30:	b480      	push	{r7}
 8000d32:	b085      	sub	sp, #20
 8000d34:	af00      	add	r7, sp, #0
 8000d36:	4b1c      	ldr	r3, [pc, #112]	; (8000da8 <vTaskSwitchContext+0x78>)
 8000d38:	681b      	ldr	r3, [r3, #0]
 8000d3a:	2b00      	cmp	r3, #0
 8000d3c:	d003      	beq.n	8000d46 <vTaskSwitchContext+0x16>
 8000d3e:	4b1b      	ldr	r3, [pc, #108]	; (8000dac <vTaskSwitchContext+0x7c>)
 8000d40:	2201      	movs	r2, #1
 8000d42:	601a      	str	r2, [r3, #0]
 8000d44:	e02a      	b.n	8000d9c <vTaskSwitchContext+0x6c>
 8000d46:	4b19      	ldr	r3, [pc, #100]	; (8000dac <vTaskSwitchContext+0x7c>)
 8000d48:	2200      	movs	r2, #0
 8000d4a:	601a      	str	r2, [r3, #0]
 8000d4c:	4b18      	ldr	r3, [pc, #96]	; (8000db0 <vTaskSwitchContext+0x80>)
 8000d4e:	681b      	ldr	r3, [r3, #0]
 8000d50:	607b      	str	r3, [r7, #4]
 8000d52:	687b      	ldr	r3, [r7, #4]
 8000d54:	fab3 f383 	clz	r3, r3
 8000d58:	70fb      	strb	r3, [r7, #3]
 8000d5a:	78fb      	ldrb	r3, [r7, #3]
 8000d5c:	f1c3 031f 	rsb	r3, r3, #31
 8000d60:	60fb      	str	r3, [r7, #12]
 8000d62:	68fa      	ldr	r2, [r7, #12]
 8000d64:	4613      	mov	r3, r2
 8000d66:	009b      	lsls	r3, r3, #2
 8000d68:	4413      	add	r3, r2
 8000d6a:	009b      	lsls	r3, r3, #2
 8000d6c:	4a11      	ldr	r2, [pc, #68]	; (8000db4 <vTaskSwitchContext+0x84>)
 8000d6e:	4413      	add	r3, r2
 8000d70:	60bb      	str	r3, [r7, #8]
 8000d72:	68bb      	ldr	r3, [r7, #8]
 8000d74:	685b      	ldr	r3, [r3, #4]
 8000d76:	685a      	ldr	r2, [r3, #4]
 8000d78:	68bb      	ldr	r3, [r7, #8]
 8000d7a:	605a      	str	r2, [r3, #4]
 8000d7c:	68bb      	ldr	r3, [r7, #8]
 8000d7e:	685a      	ldr	r2, [r3, #4]
 8000d80:	68bb      	ldr	r3, [r7, #8]
 8000d82:	3308      	adds	r3, #8
 8000d84:	429a      	cmp	r2, r3
 8000d86:	d104      	bne.n	8000d92 <vTaskSwitchContext+0x62>
 8000d88:	68bb      	ldr	r3, [r7, #8]
 8000d8a:	685b      	ldr	r3, [r3, #4]
 8000d8c:	685a      	ldr	r2, [r3, #4]
 8000d8e:	68bb      	ldr	r3, [r7, #8]
 8000d90:	605a      	str	r2, [r3, #4]
 8000d92:	68bb      	ldr	r3, [r7, #8]
 8000d94:	685b      	ldr	r3, [r3, #4]
 8000d96:	68db      	ldr	r3, [r3, #12]
 8000d98:	4a07      	ldr	r2, [pc, #28]	; (8000db8 <vTaskSwitchContext+0x88>)
 8000d9a:	6013      	str	r3, [r2, #0]
 8000d9c:	bf00      	nop
 8000d9e:	3714      	adds	r7, #20
 8000da0:	46bd      	mov	sp, r7
 8000da2:	bc80      	pop	{r7}
 8000da4:	4770      	bx	lr
 8000da6:	bf00      	nop
 8000da8:	2000016c 	.word	0x2000016c
 8000dac:	20000158 	.word	0x20000158
 8000db0:	2000014c 	.word	0x2000014c
 8000db4:	20000070 	.word	0x20000070
 8000db8:	2000006c 	.word	0x2000006c

08000dbc <prvIdleTask>:
 8000dbc:	b580      	push	{r7, lr}
 8000dbe:	b082      	sub	sp, #8
 8000dc0:	af00      	add	r7, sp, #0
 8000dc2:	6078      	str	r0, [r7, #4]
 8000dc4:	f000 f852 	bl	8000e6c <prvCheckTasksWaitingTermination>
 8000dc8:	4b06      	ldr	r3, [pc, #24]	; (8000de4 <prvIdleTask+0x28>)
 8000dca:	681b      	ldr	r3, [r3, #0]
 8000dcc:	2b01      	cmp	r3, #1
 8000dce:	d9f9      	bls.n	8000dc4 <prvIdleTask+0x8>
 8000dd0:	4b05      	ldr	r3, [pc, #20]	; (8000de8 <prvIdleTask+0x2c>)
 8000dd2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8000dd6:	601a      	str	r2, [r3, #0]
 8000dd8:	f3bf 8f4f 	dsb	sy
 8000ddc:	f3bf 8f6f 	isb	sy
 8000de0:	e7f0      	b.n	8000dc4 <prvIdleTask+0x8>
 8000de2:	bf00      	nop
 8000de4:	20000070 	.word	0x20000070
 8000de8:	e000ed04 	.word	0xe000ed04

08000dec <prvInitialiseTaskLists>:
 8000dec:	b580      	push	{r7, lr}
 8000dee:	b082      	sub	sp, #8
 8000df0:	af00      	add	r7, sp, #0
 8000df2:	2300      	movs	r3, #0
 8000df4:	607b      	str	r3, [r7, #4]
 8000df6:	e00c      	b.n	8000e12 <prvInitialiseTaskLists+0x26>
 8000df8:	687a      	ldr	r2, [r7, #4]
 8000dfa:	4613      	mov	r3, r2
 8000dfc:	009b      	lsls	r3, r3, #2
 8000dfe:	4413      	add	r3, r2
 8000e00:	009b      	lsls	r3, r3, #2
 8000e02:	4a12      	ldr	r2, [pc, #72]	; (8000e4c <prvInitialiseTaskLists+0x60>)
 8000e04:	4413      	add	r3, r2
 8000e06:	4618      	mov	r0, r3
 8000e08:	f7ff f9b2 	bl	8000170 <vListInitialise>
 8000e0c:	687b      	ldr	r3, [r7, #4]
 8000e0e:	3301      	adds	r3, #1
 8000e10:	607b      	str	r3, [r7, #4]
 8000e12:	687b      	ldr	r3, [r7, #4]
 8000e14:	2b04      	cmp	r3, #4
 8000e16:	d9ef      	bls.n	8000df8 <prvInitialiseTaskLists+0xc>
 8000e18:	480d      	ldr	r0, [pc, #52]	; (8000e50 <prvInitialiseTaskLists+0x64>)
 8000e1a:	f7ff f9a9 	bl	8000170 <vListInitialise>
 8000e1e:	480d      	ldr	r0, [pc, #52]	; (8000e54 <prvInitialiseTaskLists+0x68>)
 8000e20:	f7ff f9a6 	bl	8000170 <vListInitialise>
 8000e24:	480c      	ldr	r0, [pc, #48]	; (8000e58 <prvInitialiseTaskLists+0x6c>)
 8000e26:	f7ff f9a3 	bl	8000170 <vListInitialise>
 8000e2a:	480c      	ldr	r0, [pc, #48]	; (8000e5c <prvInitialiseTaskLists+0x70>)
 8000e2c:	f7ff f9a0 	bl	8000170 <vListInitialise>
 8000e30:	480b      	ldr	r0, [pc, #44]	; (8000e60 <prvInitialiseTaskLists+0x74>)
 8000e32:	f7ff f99d 	bl	8000170 <vListInitialise>
 8000e36:	4b0b      	ldr	r3, [pc, #44]	; (8000e64 <prvInitialiseTaskLists+0x78>)
 8000e38:	4a05      	ldr	r2, [pc, #20]	; (8000e50 <prvInitialiseTaskLists+0x64>)
 8000e3a:	601a      	str	r2, [r3, #0]
 8000e3c:	4b0a      	ldr	r3, [pc, #40]	; (8000e68 <prvInitialiseTaskLists+0x7c>)
 8000e3e:	4a05      	ldr	r2, [pc, #20]	; (8000e54 <prvInitialiseTaskLists+0x68>)
 8000e40:	601a      	str	r2, [r3, #0]
 8000e42:	bf00      	nop
 8000e44:	3708      	adds	r7, #8
 8000e46:	46bd      	mov	sp, r7
 8000e48:	bd80      	pop	{r7, pc}
 8000e4a:	bf00      	nop
 8000e4c:	20000070 	.word	0x20000070
 8000e50:	200000d4 	.word	0x200000d4
 8000e54:	200000e8 	.word	0x200000e8
 8000e58:	20000104 	.word	0x20000104
 8000e5c:	20000118 	.word	0x20000118
 8000e60:	20000130 	.word	0x20000130
 8000e64:	200000fc 	.word	0x200000fc
 8000e68:	20000100 	.word	0x20000100

08000e6c <prvCheckTasksWaitingTermination>:
 8000e6c:	b580      	push	{r7, lr}
 8000e6e:	b082      	sub	sp, #8
 8000e70:	af00      	add	r7, sp, #0
 8000e72:	e019      	b.n	8000ea8 <prvCheckTasksWaitingTermination+0x3c>
 8000e74:	f000 f8e2 	bl	800103c <vPortEnterCritical>
 8000e78:	4b10      	ldr	r3, [pc, #64]	; (8000ebc <prvCheckTasksWaitingTermination+0x50>)
 8000e7a:	68db      	ldr	r3, [r3, #12]
 8000e7c:	68db      	ldr	r3, [r3, #12]
 8000e7e:	607b      	str	r3, [r7, #4]
 8000e80:	687b      	ldr	r3, [r7, #4]
 8000e82:	3304      	adds	r3, #4
 8000e84:	4618      	mov	r0, r3
 8000e86:	f7ff f9c1 	bl	800020c <uxListRemove>
 8000e8a:	4b0d      	ldr	r3, [pc, #52]	; (8000ec0 <prvCheckTasksWaitingTermination+0x54>)
 8000e8c:	681b      	ldr	r3, [r3, #0]
 8000e8e:	3b01      	subs	r3, #1
 8000e90:	4a0b      	ldr	r2, [pc, #44]	; (8000ec0 <prvCheckTasksWaitingTermination+0x54>)
 8000e92:	6013      	str	r3, [r2, #0]
 8000e94:	4b0b      	ldr	r3, [pc, #44]	; (8000ec4 <prvCheckTasksWaitingTermination+0x58>)
 8000e96:	681b      	ldr	r3, [r3, #0]
 8000e98:	3b01      	subs	r3, #1
 8000e9a:	4a0a      	ldr	r2, [pc, #40]	; (8000ec4 <prvCheckTasksWaitingTermination+0x58>)
 8000e9c:	6013      	str	r3, [r2, #0]
 8000e9e:	f000 f8e7 	bl	8001070 <vPortExitCritical>
 8000ea2:	6878      	ldr	r0, [r7, #4]
 8000ea4:	f000 f810 	bl	8000ec8 <prvDeleteTCB>
 8000ea8:	4b06      	ldr	r3, [pc, #24]	; (8000ec4 <prvCheckTasksWaitingTermination+0x58>)
 8000eaa:	681b      	ldr	r3, [r3, #0]
 8000eac:	2b00      	cmp	r3, #0
 8000eae:	d1e1      	bne.n	8000e74 <prvCheckTasksWaitingTermination+0x8>
 8000eb0:	bf00      	nop
 8000eb2:	bf00      	nop
 8000eb4:	3708      	adds	r7, #8
 8000eb6:	46bd      	mov	sp, r7
 8000eb8:	bd80      	pop	{r7, pc}
 8000eba:	bf00      	nop
 8000ebc:	20000118 	.word	0x20000118
 8000ec0:	20000144 	.word	0x20000144
 8000ec4:	2000012c 	.word	0x2000012c

08000ec8 <prvDeleteTCB>:
 8000ec8:	b580      	push	{r7, lr}
 8000eca:	b082      	sub	sp, #8
 8000ecc:	af00      	add	r7, sp, #0
 8000ece:	6078      	str	r0, [r7, #4]
 8000ed0:	687b      	ldr	r3, [r7, #4]
 8000ed2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ed4:	4618      	mov	r0, r3
 8000ed6:	f000 f99d 	bl	8001214 <vPortFree>
 8000eda:	6878      	ldr	r0, [r7, #4]
 8000edc:	f000 f99a 	bl	8001214 <vPortFree>
 8000ee0:	bf00      	nop
 8000ee2:	3708      	adds	r7, #8
 8000ee4:	46bd      	mov	sp, r7
 8000ee6:	bd80      	pop	{r7, pc}

08000ee8 <prvResetNextTaskUnblockTime>:
 8000ee8:	b480      	push	{r7}
 8000eea:	af00      	add	r7, sp, #0
 8000eec:	4b09      	ldr	r3, [pc, #36]	; (8000f14 <prvResetNextTaskUnblockTime+0x2c>)
 8000eee:	681b      	ldr	r3, [r3, #0]
 8000ef0:	681b      	ldr	r3, [r3, #0]
 8000ef2:	2b00      	cmp	r3, #0
 8000ef4:	d104      	bne.n	8000f00 <prvResetNextTaskUnblockTime+0x18>
 8000ef6:	4b08      	ldr	r3, [pc, #32]	; (8000f18 <prvResetNextTaskUnblockTime+0x30>)
 8000ef8:	f04f 32ff 	mov.w	r2, #4294967295
 8000efc:	601a      	str	r2, [r3, #0]
 8000efe:	e005      	b.n	8000f0c <prvResetNextTaskUnblockTime+0x24>
 8000f00:	4b04      	ldr	r3, [pc, #16]	; (8000f14 <prvResetNextTaskUnblockTime+0x2c>)
 8000f02:	681b      	ldr	r3, [r3, #0]
 8000f04:	68db      	ldr	r3, [r3, #12]
 8000f06:	681b      	ldr	r3, [r3, #0]
 8000f08:	4a03      	ldr	r2, [pc, #12]	; (8000f18 <prvResetNextTaskUnblockTime+0x30>)
 8000f0a:	6013      	str	r3, [r2, #0]
 8000f0c:	bf00      	nop
 8000f0e:	46bd      	mov	sp, r7
 8000f10:	bc80      	pop	{r7}
 8000f12:	4770      	bx	lr
 8000f14:	200000fc 	.word	0x200000fc
 8000f18:	20000164 	.word	0x20000164

08000f1c <pxPortInitialiseStack>:
 8000f1c:	b480      	push	{r7}
 8000f1e:	b085      	sub	sp, #20
 8000f20:	af00      	add	r7, sp, #0
 8000f22:	60f8      	str	r0, [r7, #12]
 8000f24:	60b9      	str	r1, [r7, #8]
 8000f26:	607a      	str	r2, [r7, #4]
 8000f28:	68fb      	ldr	r3, [r7, #12]
 8000f2a:	3b04      	subs	r3, #4
 8000f2c:	60fb      	str	r3, [r7, #12]
 8000f2e:	68fb      	ldr	r3, [r7, #12]
 8000f30:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8000f34:	601a      	str	r2, [r3, #0]
 8000f36:	68fb      	ldr	r3, [r7, #12]
 8000f38:	3b04      	subs	r3, #4
 8000f3a:	60fb      	str	r3, [r7, #12]
 8000f3c:	68bb      	ldr	r3, [r7, #8]
 8000f3e:	f023 0201 	bic.w	r2, r3, #1
 8000f42:	68fb      	ldr	r3, [r7, #12]
 8000f44:	601a      	str	r2, [r3, #0]
 8000f46:	68fb      	ldr	r3, [r7, #12]
 8000f48:	3b04      	subs	r3, #4
 8000f4a:	60fb      	str	r3, [r7, #12]
 8000f4c:	4a08      	ldr	r2, [pc, #32]	; (8000f70 <pxPortInitialiseStack+0x54>)
 8000f4e:	68fb      	ldr	r3, [r7, #12]
 8000f50:	601a      	str	r2, [r3, #0]
 8000f52:	68fb      	ldr	r3, [r7, #12]
 8000f54:	3b14      	subs	r3, #20
 8000f56:	60fb      	str	r3, [r7, #12]
 8000f58:	687a      	ldr	r2, [r7, #4]
 8000f5a:	68fb      	ldr	r3, [r7, #12]
 8000f5c:	601a      	str	r2, [r3, #0]
 8000f5e:	68fb      	ldr	r3, [r7, #12]
 8000f60:	3b20      	subs	r3, #32
 8000f62:	60fb      	str	r3, [r7, #12]
 8000f64:	68fb      	ldr	r3, [r7, #12]
 8000f66:	4618      	mov	r0, r3
 8000f68:	3714      	adds	r7, #20
 8000f6a:	46bd      	mov	sp, r7
 8000f6c:	bc80      	pop	{r7}
 8000f6e:	4770      	bx	lr
 8000f70:	08000f75 	.word	0x08000f75

08000f74 <prvTaskExitError>:
 8000f74:	b480      	push	{r7}
 8000f76:	b083      	sub	sp, #12
 8000f78:	af00      	add	r7, sp, #0
 8000f7a:	2300      	movs	r3, #0
 8000f7c:	603b      	str	r3, [r7, #0]
 8000f7e:	f04f 03bf 	mov.w	r3, #191	; 0xbf
 8000f82:	f383 8811 	msr	BASEPRI, r3
 8000f86:	f3bf 8f6f 	isb	sy
 8000f8a:	f3bf 8f4f 	dsb	sy
 8000f8e:	607b      	str	r3, [r7, #4]
 8000f90:	bf00      	nop
 8000f92:	bf00      	nop
 8000f94:	683b      	ldr	r3, [r7, #0]
 8000f96:	2b00      	cmp	r3, #0
 8000f98:	d0fc      	beq.n	8000f94 <prvTaskExitError+0x20>
 8000f9a:	bf00      	nop
 8000f9c:	bf00      	nop
 8000f9e:	370c      	adds	r7, #12
 8000fa0:	46bd      	mov	sp, r7
 8000fa2:	bc80      	pop	{r7}
 8000fa4:	4770      	bx	lr
	...

08000fb0 <SVC_Handler>:
 8000fb0:	4b07      	ldr	r3, [pc, #28]	; (8000fd0 <pxCurrentTCBConst2>)
 8000fb2:	6819      	ldr	r1, [r3, #0]
 8000fb4:	6808      	ldr	r0, [r1, #0]
 8000fb6:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8000fba:	f380 8809 	msr	PSP, r0
 8000fbe:	f3bf 8f6f 	isb	sy
 8000fc2:	f04f 0000 	mov.w	r0, #0
 8000fc6:	f380 8811 	msr	BASEPRI, r0
 8000fca:	f04e 0e0d 	orr.w	lr, lr, #13
 8000fce:	4770      	bx	lr

08000fd0 <pxCurrentTCBConst2>:
 8000fd0:	2000006c 	.word	0x2000006c
 8000fd4:	bf00      	nop
 8000fd6:	bf00      	nop

08000fd8 <prvPortStartFirstTask>:
 8000fd8:	4806      	ldr	r0, [pc, #24]	; (8000ff4 <prvPortStartFirstTask+0x1c>)
 8000fda:	6800      	ldr	r0, [r0, #0]
 8000fdc:	6800      	ldr	r0, [r0, #0]
 8000fde:	f380 8808 	msr	MSP, r0
 8000fe2:	b662      	cpsie	i
 8000fe4:	b661      	cpsie	f
 8000fe6:	f3bf 8f4f 	dsb	sy
 8000fea:	f3bf 8f6f 	isb	sy
 8000fee:	df00      	svc	0
 8000ff0:	bf00      	nop
 8000ff2:	0000      	.short	0x0000
 8000ff4:	e000ed08 	.word	0xe000ed08
 8000ff8:	bf00      	nop
 8000ffa:	bf00      	nop

08000ffc <xPortStartScheduler>:
 8000ffc:	b580      	push	{r7, lr}
 8000ffe:	af00      	add	r7, sp, #0
 8001000:	4b0c      	ldr	r3, [pc, #48]	; (8001034 <xPortStartScheduler+0x38>)
 8001002:	681b      	ldr	r3, [r3, #0]
 8001004:	4a0b      	ldr	r2, [pc, #44]	; (8001034 <xPortStartScheduler+0x38>)
 8001006:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 800100a:	6013      	str	r3, [r2, #0]
 800100c:	4b09      	ldr	r3, [pc, #36]	; (8001034 <xPortStartScheduler+0x38>)
 800100e:	681b      	ldr	r3, [r3, #0]
 8001010:	4a08      	ldr	r2, [pc, #32]	; (8001034 <xPortStartScheduler+0x38>)
 8001012:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8001016:	6013      	str	r3, [r2, #0]
 8001018:	f000 f890 	bl	800113c <vPortSetupTimerInterrupt>
 800101c:	4b06      	ldr	r3, [pc, #24]	; (8001038 <xPortStartScheduler+0x3c>)
 800101e:	2200      	movs	r2, #0
 8001020:	601a      	str	r2, [r3, #0]
 8001022:	f7ff ffd9 	bl	8000fd8 <prvPortStartFirstTask>
 8001026:	f7ff fe83 	bl	8000d30 <vTaskSwitchContext>
 800102a:	f7ff ffa3 	bl	8000f74 <prvTaskExitError>
 800102e:	2300      	movs	r3, #0
 8001030:	4618      	mov	r0, r3
 8001032:	bd80      	pop	{r7, pc}
 8001034:	e000ed20 	.word	0xe000ed20
 8001038:	20000004 	.word	0x20000004

0800103c <vPortEnterCritical>:
 800103c:	b480      	push	{r7}
 800103e:	b083      	sub	sp, #12
 8001040:	af00      	add	r7, sp, #0
 8001042:	f04f 03bf 	mov.w	r3, #191	; 0xbf
 8001046:	f383 8811 	msr	BASEPRI, r3
 800104a:	f3bf 8f6f 	isb	sy
 800104e:	f3bf 8f4f 	dsb	sy
 8001052:	607b      	str	r3, [r7, #4]
 8001054:	bf00      	nop
 8001056:	4b05      	ldr	r3, [pc, #20]	; (800106c <vPortEnterCritical+0x30>)
 8001058:	681b      	ldr	r3, [r3, #0]
 800105a:	3301      	adds	r3, #1
 800105c:	4a03      	ldr	r2, [pc, #12]	; (800106c <vPortEnterCritical+0x30>)
 800105e:	6013      	str	r3, [r2, #0]
 8001060:	bf00      	nop
 8001062:	370c      	adds	r7, #12
 8001064:	46bd      	mov	sp, r7
 8001066:	bc80      	pop	{r7}
 8001068:	4770      	bx	lr
 800106a:	bf00      	nop
 800106c:	20000004 	.word	0x20000004

08001070 <vPortExitCritical>:
 8001070:	b480      	push	{r7}
 8001072:	b083      	sub	sp, #12
 8001074:	af00      	add	r7, sp, #0
 8001076:	4b0a      	ldr	r3, [pc, #40]	; (80010a0 <vPortExitCritical+0x30>)
 8001078:	681b      	ldr	r3, [r3, #0]
 800107a:	3b01      	subs	r3, #1
 800107c:	4a08      	ldr	r2, [pc, #32]	; (80010a0 <vPortExitCritical+0x30>)
 800107e:	6013      	str	r3, [r2, #0]
 8001080:	4b07      	ldr	r3, [pc, #28]	; (80010a0 <vPortExitCritical+0x30>)
 8001082:	681b      	ldr	r3, [r3, #0]
 8001084:	2b00      	cmp	r3, #0
 8001086:	d105      	bne.n	8001094 <vPortExitCritical+0x24>
 8001088:	2300      	movs	r3, #0
 800108a:	607b      	str	r3, [r7, #4]
 800108c:	687b      	ldr	r3, [r7, #4]
 800108e:	f383 8811 	msr	BASEPRI, r3
 8001092:	bf00      	nop
 8001094:	bf00      	nop
 8001096:	370c      	adds	r7, #12
 8001098:	46bd      	mov	sp, r7
 800109a:	bc80      	pop	{r7}
 800109c:	4770      	bx	lr
 800109e:	bf00      	nop
 80010a0:	20000004 	.word	0x20000004
	...

080010b0 <PendSV_Handler>:
 80010b0:	f3ef 8009 	mrs	r0, PSP
 80010b4:	f3bf 8f6f 	isb	sy
 80010b8:	4b0d      	ldr	r3, [pc, #52]	; (80010f0 <pxCurrentTCBConst>)
 80010ba:	681a      	ldr	r2, [r3, #0]
 80010bc:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 80010c0:	6010      	str	r0, [r2, #0]
 80010c2:	e92d 4008 	stmdb	sp!, {r3, lr}
 80010c6:	f04f 00bf 	mov.w	r0, #191	; 0xbf
 80010ca:	f380 8811 	msr	BASEPRI, r0
 80010ce:	f7ff fe2f 	bl	8000d30 <vTaskSwitchContext>
 80010d2:	f04f 0000 	mov.w	r0, #0
 80010d6:	f380 8811 	msr	BASEPRI, r0
 80010da:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80010de:	6819      	ldr	r1, [r3, #0]
 80010e0:	6808      	ldr	r0, [r1, #0]
 80010e2:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 80010e6:	f380 8809 	msr	PSP, r0
 80010ea:	f3bf 8f6f 	isb	sy
 80010ee:	4770      	bx	lr

080010f0 <pxCurrentTCBConst>:
 80010f0:	2000006c 	.word	0x2000006c
 80010f4:	bf00      	nop
 80010f6:	bf00      	nop

080010f8 <SysTick_Handler>:
 80010f8:	b580      	push	{r7, lr}
 80010fa:	b082      	sub	sp, #8
 80010fc:	af00      	add	r7, sp, #0
 80010fe:	f04f 03bf 	mov.w	r3, #191	; 0xbf
 8001102:	f383 8811 	msr	BASEPRI, r3
 8001106:	f3bf 8f6f 	isb	sy
 800110a:	f3bf 8f4f 	dsb	sy
 800110e:	607b      	str	r3, [r7, #4]
 8001110:	bf00      	nop
 8001112:	f7ff fd07 	bl	8000b24 <xTaskIncrementTick>
 8001116:	4603      	mov	r3, r0
 8001118:	2b00      	cmp	r3, #0
 800111a:	d003      	beq.n	8001124 <SysTick_Handler+0x2c>
 800111c:	4b06      	ldr	r3, [pc, #24]	; (8001138 <SysTick_Handler+0x40>)
 800111e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8001122:	601a      	str	r2, [r3, #0]
 8001124:	2300      	movs	r3, #0
 8001126:	603b      	str	r3, [r7, #0]
 8001128:	683b      	ldr	r3, [r7, #0]
 800112a:	f383 8811 	msr	BASEPRI, r3
 800112e:	bf00      	nop
 8001130:	bf00      	nop
 8001132:	3708      	adds	r7, #8
 8001134:	46bd      	mov	sp, r7
 8001136:	bd80      	pop	{r7, pc}
 8001138:	e000ed04 	.word	0xe000ed04

0800113c <vPortSetupTimerInterrupt>:
 800113c:	b480      	push	{r7}
 800113e:	af00      	add	r7, sp, #0
 8001140:	4b08      	ldr	r3, [pc, #32]	; (8001164 <vPortSetupTimerInterrupt+0x28>)
 8001142:	2200      	movs	r2, #0
 8001144:	601a      	str	r2, [r3, #0]
 8001146:	4b08      	ldr	r3, [pc, #32]	; (8001168 <vPortSetupTimerInterrupt+0x2c>)
 8001148:	2200      	movs	r2, #0
 800114a:	601a      	str	r2, [r3, #0]
 800114c:	4b07      	ldr	r3, [pc, #28]	; (800116c <vPortSetupTimerInterrupt+0x30>)
 800114e:	f646 525f 	movw	r2, #27999	; 0x6d5f
 8001152:	601a      	str	r2, [r3, #0]
 8001154:	4b03      	ldr	r3, [pc, #12]	; (8001164 <vPortSetupTimerInterrupt+0x28>)
 8001156:	2207      	movs	r2, #7
 8001158:	601a      	str	r2, [r3, #0]
 800115a:	bf00      	nop
 800115c:	46bd      	mov	sp, r7
 800115e:	bc80      	pop	{r7}
 8001160:	4770      	bx	lr
 8001162:	bf00      	nop
 8001164:	e000e010 	.word	0xe000e010
 8001168:	e000e018 	.word	0xe000e018
 800116c:	e000e014 	.word	0xe000e014

08001170 <pvPortMalloc>:
 8001170:	b580      	push	{r7, lr}
 8001172:	b084      	sub	sp, #16
 8001174:	af00      	add	r7, sp, #0
 8001176:	6078      	str	r0, [r7, #4]
 8001178:	2300      	movs	r3, #0
 800117a:	60fb      	str	r3, [r7, #12]
 800117c:	687b      	ldr	r3, [r7, #4]
 800117e:	f003 0307 	and.w	r3, r3, #7
 8001182:	2b00      	cmp	r3, #0
 8001184:	d00e      	beq.n	80011a4 <pvPortMalloc+0x34>
 8001186:	687b      	ldr	r3, [r7, #4]
 8001188:	f023 0307 	bic.w	r3, r3, #7
 800118c:	3308      	adds	r3, #8
 800118e:	687a      	ldr	r2, [r7, #4]
 8001190:	429a      	cmp	r2, r3
 8001192:	d205      	bcs.n	80011a0 <pvPortMalloc+0x30>
 8001194:	687b      	ldr	r3, [r7, #4]
 8001196:	f023 0307 	bic.w	r3, r3, #7
 800119a:	3308      	adds	r3, #8
 800119c:	607b      	str	r3, [r7, #4]
 800119e:	e001      	b.n	80011a4 <pvPortMalloc+0x34>
 80011a0:	2300      	movs	r3, #0
 80011a2:	607b      	str	r3, [r7, #4]
 80011a4:	f7ff fbc4 	bl	8000930 <vTaskSuspendAll>
 80011a8:	4b17      	ldr	r3, [pc, #92]	; (8001208 <pvPortMalloc+0x98>)
 80011aa:	681b      	ldr	r3, [r3, #0]
 80011ac:	2b00      	cmp	r3, #0
 80011ae:	d105      	bne.n	80011bc <pvPortMalloc+0x4c>
 80011b0:	4b16      	ldr	r3, [pc, #88]	; (800120c <pvPortMalloc+0x9c>)
 80011b2:	f023 0307 	bic.w	r3, r3, #7
 80011b6:	461a      	mov	r2, r3
 80011b8:	4b13      	ldr	r3, [pc, #76]	; (8001208 <pvPortMalloc+0x98>)
 80011ba:	601a      	str	r2, [r3, #0]
 80011bc:	687b      	ldr	r3, [r7, #4]
 80011be:	2b00      	cmp	r3, #0
 80011c0:	d01b      	beq.n	80011fa <pvPortMalloc+0x8a>
 80011c2:	4b13      	ldr	r3, [pc, #76]	; (8001210 <pvPortMalloc+0xa0>)
 80011c4:	681a      	ldr	r2, [r3, #0]
 80011c6:	687b      	ldr	r3, [r7, #4]
 80011c8:	4413      	add	r3, r2
 80011ca:	f643 6277 	movw	r2, #15991	; 0x3e77
 80011ce:	4293      	cmp	r3, r2
 80011d0:	d813      	bhi.n	80011fa <pvPortMalloc+0x8a>
 80011d2:	4b0f      	ldr	r3, [pc, #60]	; (8001210 <pvPortMalloc+0xa0>)
 80011d4:	681a      	ldr	r2, [r3, #0]
 80011d6:	687b      	ldr	r3, [r7, #4]
 80011d8:	441a      	add	r2, r3
 80011da:	4b0d      	ldr	r3, [pc, #52]	; (8001210 <pvPortMalloc+0xa0>)
 80011dc:	681b      	ldr	r3, [r3, #0]
 80011de:	429a      	cmp	r2, r3
 80011e0:	d90b      	bls.n	80011fa <pvPortMalloc+0x8a>
 80011e2:	4b09      	ldr	r3, [pc, #36]	; (8001208 <pvPortMalloc+0x98>)
 80011e4:	681a      	ldr	r2, [r3, #0]
 80011e6:	4b0a      	ldr	r3, [pc, #40]	; (8001210 <pvPortMalloc+0xa0>)
 80011e8:	681b      	ldr	r3, [r3, #0]
 80011ea:	4413      	add	r3, r2
 80011ec:	60fb      	str	r3, [r7, #12]
 80011ee:	4b08      	ldr	r3, [pc, #32]	; (8001210 <pvPortMalloc+0xa0>)
 80011f0:	681a      	ldr	r2, [r3, #0]
 80011f2:	687b      	ldr	r3, [r7, #4]
 80011f4:	4413      	add	r3, r2
 80011f6:	4a06      	ldr	r2, [pc, #24]	; (8001210 <pvPortMalloc+0xa0>)
 80011f8:	6013      	str	r3, [r2, #0]
 80011fa:	f7ff fba7 	bl	800094c <xTaskResumeAll>
 80011fe:	68fb      	ldr	r3, [r7, #12]
 8001200:	4618      	mov	r0, r3
 8001202:	3710      	adds	r7, #16
 8001204:	46bd      	mov	sp, r7
 8001206:	bd80      	pop	{r7, pc}
 8001208:	20003ff4 	.word	0x20003ff4
 800120c:	20000177 	.word	0x20000177
 8001210:	20003ff0 	.word	0x20003ff0

08001214 <vPortFree>:
 8001214:	b480      	push	{r7}
 8001216:	b083      	sub	sp, #12
 8001218:	af00      	add	r7, sp, #0
 800121a:	6078      	str	r0, [r7, #4]
 800121c:	bf00      	nop
 800121e:	370c      	adds	r7, #12
 8001220:	46bd      	mov	sp, r7
 8001222:	bc80      	pop	{r7}
 8001224:	4770      	bx	lr
	...

08001228 <DMS_init>:
 */

#include "DMS.h"


void DMS_init(){
 8001228:	b580      	push	{r7, lr}
 800122a:	b082      	sub	sp, #8
 800122c:	af00      	add	r7, sp, #0
	PIN_config PINx={TOUCH1,INPUT_FI,0};
 800122e:	4b12      	ldr	r3, [pc, #72]	; (8001278 <DMS_init+0x50>)
 8001230:	681b      	ldr	r3, [r3, #0]
 8001232:	607b      	str	r3, [r7, #4]
	MCAL_GPIO_init(DMS_PORT, &PINx);
 8001234:	1d3b      	adds	r3, r7, #4
 8001236:	4619      	mov	r1, r3
 8001238:	4810      	ldr	r0, [pc, #64]	; (800127c <DMS_init+0x54>)
 800123a:	f001 fd87 	bl	8002d4c <MCAL_GPIO_init>
	 PINx=(PIN_config){TOUCH2,INPUT_FI,0};
 800123e:	4b10      	ldr	r3, [pc, #64]	; (8001280 <DMS_init+0x58>)
 8001240:	681b      	ldr	r3, [r3, #0]
 8001242:	607b      	str	r3, [r7, #4]
	MCAL_GPIO_init(DMS_PORT, &PINx);
 8001244:	1d3b      	adds	r3, r7, #4
 8001246:	4619      	mov	r1, r3
 8001248:	480c      	ldr	r0, [pc, #48]	; (800127c <DMS_init+0x54>)
 800124a:	f001 fd7f 	bl	8002d4c <MCAL_GPIO_init>
	 PINx=(PIN_config){TOUCH3,INPUT_FI,0};
 800124e:	4b0d      	ldr	r3, [pc, #52]	; (8001284 <DMS_init+0x5c>)
 8001250:	681b      	ldr	r3, [r3, #0]
 8001252:	607b      	str	r3, [r7, #4]
	MCAL_GPIO_init(DMS_PORT, &PINx);
 8001254:	1d3b      	adds	r3, r7, #4
 8001256:	4619      	mov	r1, r3
 8001258:	4808      	ldr	r0, [pc, #32]	; (800127c <DMS_init+0x54>)
 800125a:	f001 fd77 	bl	8002d4c <MCAL_GPIO_init>
	 PINx=(PIN_config){TOUCH4,INPUT_FI,0};
 800125e:	4b0a      	ldr	r3, [pc, #40]	; (8001288 <DMS_init+0x60>)
 8001260:	681b      	ldr	r3, [r3, #0]
 8001262:	607b      	str	r3, [r7, #4]
	MCAL_GPIO_init(DMS_PORT, &PINx);
 8001264:	1d3b      	adds	r3, r7, #4
 8001266:	4619      	mov	r1, r3
 8001268:	4804      	ldr	r0, [pc, #16]	; (800127c <DMS_init+0x54>)
 800126a:	f001 fd6f 	bl	8002d4c <MCAL_GPIO_init>
}
 800126e:	bf00      	nop
 8001270:	3708      	adds	r7, #8
 8001272:	46bd      	mov	sp, r7
 8001274:	bd80      	pop	{r7, pc}
 8001276:	bf00      	nop
 8001278:	080056d4 	.word	0x080056d4
 800127c:	40010800 	.word	0x40010800
 8001280:	080056d8 	.word	0x080056d8
 8001284:	080056dc 	.word	0x080056dc
 8001288:	080056e0 	.word	0x080056e0

0800128c <DMS_read>:


uint8_t DMS_read(){
 800128c:	b580      	push	{r7, lr}
 800128e:	af00      	add	r7, sp, #0
	if((MCAL_Read_PIN(DMS_PORT, TOUCH1)) || (MCAL_Read_PIN(DMS_PORT, TOUCH2)) ||(MCAL_Read_PIN(DMS_PORT, TOUCH3)) || (MCAL_Read_PIN(DMS_PORT, TOUCH4))){
 8001290:	2101      	movs	r1, #1
 8001292:	4810      	ldr	r0, [pc, #64]	; (80012d4 <DMS_read+0x48>)
 8001294:	f001 fe6c 	bl	8002f70 <MCAL_Read_PIN>
 8001298:	4603      	mov	r3, r0
 800129a:	2b00      	cmp	r3, #0
 800129c:	d114      	bne.n	80012c8 <DMS_read+0x3c>
 800129e:	210c      	movs	r1, #12
 80012a0:	480c      	ldr	r0, [pc, #48]	; (80012d4 <DMS_read+0x48>)
 80012a2:	f001 fe65 	bl	8002f70 <MCAL_Read_PIN>
 80012a6:	4603      	mov	r3, r0
 80012a8:	2b00      	cmp	r3, #0
 80012aa:	d10d      	bne.n	80012c8 <DMS_read+0x3c>
 80012ac:	210b      	movs	r1, #11
 80012ae:	4809      	ldr	r0, [pc, #36]	; (80012d4 <DMS_read+0x48>)
 80012b0:	f001 fe5e 	bl	8002f70 <MCAL_Read_PIN>
 80012b4:	4603      	mov	r3, r0
 80012b6:	2b00      	cmp	r3, #0
 80012b8:	d106      	bne.n	80012c8 <DMS_read+0x3c>
 80012ba:	2108      	movs	r1, #8
 80012bc:	4805      	ldr	r0, [pc, #20]	; (80012d4 <DMS_read+0x48>)
 80012be:	f001 fe57 	bl	8002f70 <MCAL_Read_PIN>
 80012c2:	4603      	mov	r3, r0
 80012c4:	2b00      	cmp	r3, #0
 80012c6:	d001      	beq.n	80012cc <DMS_read+0x40>
		return 1;
 80012c8:	2301      	movs	r3, #1
 80012ca:	e000      	b.n	80012ce <DMS_read+0x42>
		//		_TIM1_delay_ms(30); //depouncing delay
//		if((MCAL_Read_PIN(DMS_PORT, TOUCH1)) || (MCAL_Read_PIN(DMS_PORT, TOUCH2)) ||(MCAL_Read_PIN(DMS_PORT, TOUCH3)) || (MCAL_Read_PIN(DMS_PORT, TOUCH4))){
//				return 1;
//		}
	}
	return 0;
 80012cc:	2300      	movs	r3, #0
}
 80012ce:	4618      	mov	r0, r3
 80012d0:	bd80      	pop	{r7, pc}
 80012d2:	bf00      	nop
 80012d4:	40010800 	.word	0x40010800

080012d8 <LUNA_CallBack>:
#include "USART_Driver.h"
uint16_t LUNA_dis=0;
uint16_t LUNA_AMP=0;
uint16_t LUNA_TEMP=0;
uint8_t LUNA_CheckSum=0;
void LUNA_CallBack(){
 80012d8:	b580      	push	{r7, lr}
 80012da:	af00      	add	r7, sp, #0
	static uint8_t x=0;


		if(x==0){
 80012dc:	4b5e      	ldr	r3, [pc, #376]	; (8001458 <LUNA_CallBack+0x180>)
 80012de:	781b      	ldrb	r3, [r3, #0]
 80012e0:	2b00      	cmp	r3, #0
 80012e2:	d10d      	bne.n	8001300 <LUNA_CallBack+0x28>
			if(MCAL_USART_ReciveData(LUNA_UART_INSTANT)==0x59){
 80012e4:	485d      	ldr	r0, [pc, #372]	; (800145c <LUNA_CallBack+0x184>)
 80012e6:	f003 f85b 	bl	80043a0 <MCAL_USART_ReciveData>
 80012ea:	4603      	mov	r3, r0
 80012ec:	2b59      	cmp	r3, #89	; 0x59
 80012ee:	f040 80b1 	bne.w	8001454 <LUNA_CallBack+0x17c>
				x++;
 80012f2:	4b59      	ldr	r3, [pc, #356]	; (8001458 <LUNA_CallBack+0x180>)
 80012f4:	781b      	ldrb	r3, [r3, #0]
 80012f6:	3301      	adds	r3, #1
 80012f8:	b2da      	uxtb	r2, r3
 80012fa:	4b57      	ldr	r3, [pc, #348]	; (8001458 <LUNA_CallBack+0x180>)
 80012fc:	701a      	strb	r2, [r3, #0]
		}




}
 80012fe:	e0a9      	b.n	8001454 <LUNA_CallBack+0x17c>
		}else if(x==1){
 8001300:	4b55      	ldr	r3, [pc, #340]	; (8001458 <LUNA_CallBack+0x180>)
 8001302:	781b      	ldrb	r3, [r3, #0]
 8001304:	2b01      	cmp	r3, #1
 8001306:	d10d      	bne.n	8001324 <LUNA_CallBack+0x4c>
			if(MCAL_USART_ReciveData(LUNA_UART_INSTANT)==0x59)
 8001308:	4854      	ldr	r0, [pc, #336]	; (800145c <LUNA_CallBack+0x184>)
 800130a:	f003 f849 	bl	80043a0 <MCAL_USART_ReciveData>
 800130e:	4603      	mov	r3, r0
 8001310:	2b59      	cmp	r3, #89	; 0x59
 8001312:	f040 809f 	bne.w	8001454 <LUNA_CallBack+0x17c>
				x++;
 8001316:	4b50      	ldr	r3, [pc, #320]	; (8001458 <LUNA_CallBack+0x180>)
 8001318:	781b      	ldrb	r3, [r3, #0]
 800131a:	3301      	adds	r3, #1
 800131c:	b2da      	uxtb	r2, r3
 800131e:	4b4e      	ldr	r3, [pc, #312]	; (8001458 <LUNA_CallBack+0x180>)
 8001320:	701a      	strb	r2, [r3, #0]
}
 8001322:	e097      	b.n	8001454 <LUNA_CallBack+0x17c>
		}else if(x==2){
 8001324:	4b4c      	ldr	r3, [pc, #304]	; (8001458 <LUNA_CallBack+0x180>)
 8001326:	781b      	ldrb	r3, [r3, #0]
 8001328:	2b02      	cmp	r3, #2
 800132a:	d110      	bne.n	800134e <LUNA_CallBack+0x76>
			x++;
 800132c:	4b4a      	ldr	r3, [pc, #296]	; (8001458 <LUNA_CallBack+0x180>)
 800132e:	781b      	ldrb	r3, [r3, #0]
 8001330:	3301      	adds	r3, #1
 8001332:	b2da      	uxtb	r2, r3
 8001334:	4b48      	ldr	r3, [pc, #288]	; (8001458 <LUNA_CallBack+0x180>)
 8001336:	701a      	strb	r2, [r3, #0]
			LUNA_dis=0;
 8001338:	4b49      	ldr	r3, [pc, #292]	; (8001460 <LUNA_CallBack+0x188>)
 800133a:	2200      	movs	r2, #0
 800133c:	801a      	strh	r2, [r3, #0]
			LUNA_dis=MCAL_USART_ReciveData(LUNA_UART_INSTANT);
 800133e:	4847      	ldr	r0, [pc, #284]	; (800145c <LUNA_CallBack+0x184>)
 8001340:	f003 f82e 	bl	80043a0 <MCAL_USART_ReciveData>
 8001344:	4603      	mov	r3, r0
 8001346:	461a      	mov	r2, r3
 8001348:	4b45      	ldr	r3, [pc, #276]	; (8001460 <LUNA_CallBack+0x188>)
 800134a:	801a      	strh	r2, [r3, #0]
}
 800134c:	e082      	b.n	8001454 <LUNA_CallBack+0x17c>
		}else if(x==3){
 800134e:	4b42      	ldr	r3, [pc, #264]	; (8001458 <LUNA_CallBack+0x180>)
 8001350:	781b      	ldrb	r3, [r3, #0]
 8001352:	2b03      	cmp	r3, #3
 8001354:	d114      	bne.n	8001380 <LUNA_CallBack+0xa8>
			x++;
 8001356:	4b40      	ldr	r3, [pc, #256]	; (8001458 <LUNA_CallBack+0x180>)
 8001358:	781b      	ldrb	r3, [r3, #0]
 800135a:	3301      	adds	r3, #1
 800135c:	b2da      	uxtb	r2, r3
 800135e:	4b3e      	ldr	r3, [pc, #248]	; (8001458 <LUNA_CallBack+0x180>)
 8001360:	701a      	strb	r2, [r3, #0]
			LUNA_dis=((LUNA_dis) |(MCAL_USART_ReciveData(LUNA_UART_INSTANT)<<8));
 8001362:	483e      	ldr	r0, [pc, #248]	; (800145c <LUNA_CallBack+0x184>)
 8001364:	f003 f81c 	bl	80043a0 <MCAL_USART_ReciveData>
 8001368:	4603      	mov	r3, r0
 800136a:	021b      	lsls	r3, r3, #8
 800136c:	b21a      	sxth	r2, r3
 800136e:	4b3c      	ldr	r3, [pc, #240]	; (8001460 <LUNA_CallBack+0x188>)
 8001370:	881b      	ldrh	r3, [r3, #0]
 8001372:	b21b      	sxth	r3, r3
 8001374:	4313      	orrs	r3, r2
 8001376:	b21b      	sxth	r3, r3
 8001378:	b29a      	uxth	r2, r3
 800137a:	4b39      	ldr	r3, [pc, #228]	; (8001460 <LUNA_CallBack+0x188>)
 800137c:	801a      	strh	r2, [r3, #0]
}
 800137e:	e069      	b.n	8001454 <LUNA_CallBack+0x17c>
		}else if(x==4){
 8001380:	4b35      	ldr	r3, [pc, #212]	; (8001458 <LUNA_CallBack+0x180>)
 8001382:	781b      	ldrb	r3, [r3, #0]
 8001384:	2b04      	cmp	r3, #4
 8001386:	d110      	bne.n	80013aa <LUNA_CallBack+0xd2>
			x++;
 8001388:	4b33      	ldr	r3, [pc, #204]	; (8001458 <LUNA_CallBack+0x180>)
 800138a:	781b      	ldrb	r3, [r3, #0]
 800138c:	3301      	adds	r3, #1
 800138e:	b2da      	uxtb	r2, r3
 8001390:	4b31      	ldr	r3, [pc, #196]	; (8001458 <LUNA_CallBack+0x180>)
 8001392:	701a      	strb	r2, [r3, #0]
			LUNA_AMP=0;
 8001394:	4b33      	ldr	r3, [pc, #204]	; (8001464 <LUNA_CallBack+0x18c>)
 8001396:	2200      	movs	r2, #0
 8001398:	801a      	strh	r2, [r3, #0]
			LUNA_AMP=MCAL_USART_ReciveData(LUNA_UART_INSTANT);
 800139a:	4830      	ldr	r0, [pc, #192]	; (800145c <LUNA_CallBack+0x184>)
 800139c:	f003 f800 	bl	80043a0 <MCAL_USART_ReciveData>
 80013a0:	4603      	mov	r3, r0
 80013a2:	461a      	mov	r2, r3
 80013a4:	4b2f      	ldr	r3, [pc, #188]	; (8001464 <LUNA_CallBack+0x18c>)
 80013a6:	801a      	strh	r2, [r3, #0]
}
 80013a8:	e054      	b.n	8001454 <LUNA_CallBack+0x17c>
		}else if(x==5){
 80013aa:	4b2b      	ldr	r3, [pc, #172]	; (8001458 <LUNA_CallBack+0x180>)
 80013ac:	781b      	ldrb	r3, [r3, #0]
 80013ae:	2b05      	cmp	r3, #5
 80013b0:	d114      	bne.n	80013dc <LUNA_CallBack+0x104>
			x++;
 80013b2:	4b29      	ldr	r3, [pc, #164]	; (8001458 <LUNA_CallBack+0x180>)
 80013b4:	781b      	ldrb	r3, [r3, #0]
 80013b6:	3301      	adds	r3, #1
 80013b8:	b2da      	uxtb	r2, r3
 80013ba:	4b27      	ldr	r3, [pc, #156]	; (8001458 <LUNA_CallBack+0x180>)
 80013bc:	701a      	strb	r2, [r3, #0]
			LUNA_AMP=((LUNA_AMP) |(MCAL_USART_ReciveData(LUNA_UART_INSTANT)<<8));
 80013be:	4827      	ldr	r0, [pc, #156]	; (800145c <LUNA_CallBack+0x184>)
 80013c0:	f002 ffee 	bl	80043a0 <MCAL_USART_ReciveData>
 80013c4:	4603      	mov	r3, r0
 80013c6:	021b      	lsls	r3, r3, #8
 80013c8:	b21a      	sxth	r2, r3
 80013ca:	4b26      	ldr	r3, [pc, #152]	; (8001464 <LUNA_CallBack+0x18c>)
 80013cc:	881b      	ldrh	r3, [r3, #0]
 80013ce:	b21b      	sxth	r3, r3
 80013d0:	4313      	orrs	r3, r2
 80013d2:	b21b      	sxth	r3, r3
 80013d4:	b29a      	uxth	r2, r3
 80013d6:	4b23      	ldr	r3, [pc, #140]	; (8001464 <LUNA_CallBack+0x18c>)
 80013d8:	801a      	strh	r2, [r3, #0]
}
 80013da:	e03b      	b.n	8001454 <LUNA_CallBack+0x17c>
		}else if(x==6){
 80013dc:	4b1e      	ldr	r3, [pc, #120]	; (8001458 <LUNA_CallBack+0x180>)
 80013de:	781b      	ldrb	r3, [r3, #0]
 80013e0:	2b06      	cmp	r3, #6
 80013e2:	d110      	bne.n	8001406 <LUNA_CallBack+0x12e>
			x++;
 80013e4:	4b1c      	ldr	r3, [pc, #112]	; (8001458 <LUNA_CallBack+0x180>)
 80013e6:	781b      	ldrb	r3, [r3, #0]
 80013e8:	3301      	adds	r3, #1
 80013ea:	b2da      	uxtb	r2, r3
 80013ec:	4b1a      	ldr	r3, [pc, #104]	; (8001458 <LUNA_CallBack+0x180>)
 80013ee:	701a      	strb	r2, [r3, #0]
			LUNA_TEMP=0;
 80013f0:	4b1d      	ldr	r3, [pc, #116]	; (8001468 <LUNA_CallBack+0x190>)
 80013f2:	2200      	movs	r2, #0
 80013f4:	801a      	strh	r2, [r3, #0]
			LUNA_TEMP=MCAL_USART_ReciveData(LUNA_UART_INSTANT);
 80013f6:	4819      	ldr	r0, [pc, #100]	; (800145c <LUNA_CallBack+0x184>)
 80013f8:	f002 ffd2 	bl	80043a0 <MCAL_USART_ReciveData>
 80013fc:	4603      	mov	r3, r0
 80013fe:	461a      	mov	r2, r3
 8001400:	4b19      	ldr	r3, [pc, #100]	; (8001468 <LUNA_CallBack+0x190>)
 8001402:	801a      	strh	r2, [r3, #0]
}
 8001404:	e026      	b.n	8001454 <LUNA_CallBack+0x17c>
		}else if(x==7){
 8001406:	4b14      	ldr	r3, [pc, #80]	; (8001458 <LUNA_CallBack+0x180>)
 8001408:	781b      	ldrb	r3, [r3, #0]
 800140a:	2b07      	cmp	r3, #7
 800140c:	d114      	bne.n	8001438 <LUNA_CallBack+0x160>
			x++;
 800140e:	4b12      	ldr	r3, [pc, #72]	; (8001458 <LUNA_CallBack+0x180>)
 8001410:	781b      	ldrb	r3, [r3, #0]
 8001412:	3301      	adds	r3, #1
 8001414:	b2da      	uxtb	r2, r3
 8001416:	4b10      	ldr	r3, [pc, #64]	; (8001458 <LUNA_CallBack+0x180>)
 8001418:	701a      	strb	r2, [r3, #0]
			LUNA_TEMP=((LUNA_TEMP) |(MCAL_USART_ReciveData(LUNA_UART_INSTANT)<<8));
 800141a:	4810      	ldr	r0, [pc, #64]	; (800145c <LUNA_CallBack+0x184>)
 800141c:	f002 ffc0 	bl	80043a0 <MCAL_USART_ReciveData>
 8001420:	4603      	mov	r3, r0
 8001422:	021b      	lsls	r3, r3, #8
 8001424:	b21a      	sxth	r2, r3
 8001426:	4b10      	ldr	r3, [pc, #64]	; (8001468 <LUNA_CallBack+0x190>)
 8001428:	881b      	ldrh	r3, [r3, #0]
 800142a:	b21b      	sxth	r3, r3
 800142c:	4313      	orrs	r3, r2
 800142e:	b21b      	sxth	r3, r3
 8001430:	b29a      	uxth	r2, r3
 8001432:	4b0d      	ldr	r3, [pc, #52]	; (8001468 <LUNA_CallBack+0x190>)
 8001434:	801a      	strh	r2, [r3, #0]
}
 8001436:	e00d      	b.n	8001454 <LUNA_CallBack+0x17c>
		}else if(x==8){
 8001438:	4b07      	ldr	r3, [pc, #28]	; (8001458 <LUNA_CallBack+0x180>)
 800143a:	781b      	ldrb	r3, [r3, #0]
 800143c:	2b08      	cmp	r3, #8
 800143e:	d109      	bne.n	8001454 <LUNA_CallBack+0x17c>
			LUNA_CheckSum=MCAL_USART_ReciveData(LUNA_UART_INSTANT);
 8001440:	4806      	ldr	r0, [pc, #24]	; (800145c <LUNA_CallBack+0x184>)
 8001442:	f002 ffad 	bl	80043a0 <MCAL_USART_ReciveData>
 8001446:	4603      	mov	r3, r0
 8001448:	b2da      	uxtb	r2, r3
 800144a:	4b08      	ldr	r3, [pc, #32]	; (800146c <LUNA_CallBack+0x194>)
 800144c:	701a      	strb	r2, [r3, #0]
			x=0;
 800144e:	4b02      	ldr	r3, [pc, #8]	; (8001458 <LUNA_CallBack+0x180>)
 8001450:	2200      	movs	r2, #0
 8001452:	701a      	strb	r2, [r3, #0]
}
 8001454:	bf00      	nop
 8001456:	bd80      	pop	{r7, pc}
 8001458:	20003fff 	.word	0x20003fff
 800145c:	40004800 	.word	0x40004800
 8001460:	20003ff8 	.word	0x20003ff8
 8001464:	20003ffa 	.word	0x20003ffa
 8001468:	20003ffc 	.word	0x20003ffc
 800146c:	20003ffe 	.word	0x20003ffe

08001470 <LUNA_INIT>:
	NVIC_ISER1 |=(1<<(USART1_IRQ-32));

}

void LUNA_INIT(LUNA_MODES mode,OUTPUT_FORMAT format)
{
 8001470:	b590      	push	{r4, r7, lr}
 8001472:	b087      	sub	sp, #28
 8001474:	af00      	add	r7, sp, #0
 8001476:	4603      	mov	r3, r0
 8001478:	460a      	mov	r2, r1
 800147a:	71fb      	strb	r3, [r7, #7]
 800147c:	4613      	mov	r3, r2
 800147e:	71bb      	strb	r3, [r7, #6]
	/*bude raete 9600*/
	USART_Config_t PIN ={115200,EGHIT_BITS,Parity_DISABLE,Interrupt,Disabled,Asynchronous,ONE_STOP_BIT,LUNA_CallBack};
 8001480:	4b8d      	ldr	r3, [pc, #564]	; (80016b8 <LUNA_INIT+0x248>)
 8001482:	f107 0408 	add.w	r4, r7, #8
 8001486:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001488:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	MCAL_USART_init(LUNA_UART_INSTANT, &PIN);
 800148c:	f107 0308 	add.w	r3, r7, #8
 8001490:	4619      	mov	r1, r3
 8001492:	488a      	ldr	r0, [pc, #552]	; (80016bc <LUNA_INIT+0x24c>)
 8001494:	f002 fddc 	bl	8004050 <MCAL_USART_init>
	//	LUNA_Disable();
	MCAL_USART_SendData(LUNA_UART_INSTANT,0x5A);	MCAL_USART_SendData(LUNA_UART_INSTANT,0x08);	MCAL_USART_SendData(LUNA_UART_INSTANT,0x06);	MCAL_USART_SendData(LUNA_UART_INSTANT,0x00);	MCAL_USART_SendData(LUNA_UART_INSTANT,0xC2);	MCAL_USART_SendData(LUNA_UART_INSTANT,0x01);	MCAL_USART_SendData(LUNA_UART_INSTANT,0x00); MCAL_USART_SendData(LUNA_UART_INSTANT,0x00);
 8001498:	215a      	movs	r1, #90	; 0x5a
 800149a:	4888      	ldr	r0, [pc, #544]	; (80016bc <LUNA_INIT+0x24c>)
 800149c:	f002 ff40 	bl	8004320 <MCAL_USART_SendData>
 80014a0:	2108      	movs	r1, #8
 80014a2:	4886      	ldr	r0, [pc, #536]	; (80016bc <LUNA_INIT+0x24c>)
 80014a4:	f002 ff3c 	bl	8004320 <MCAL_USART_SendData>
 80014a8:	2106      	movs	r1, #6
 80014aa:	4884      	ldr	r0, [pc, #528]	; (80016bc <LUNA_INIT+0x24c>)
 80014ac:	f002 ff38 	bl	8004320 <MCAL_USART_SendData>
 80014b0:	2100      	movs	r1, #0
 80014b2:	4882      	ldr	r0, [pc, #520]	; (80016bc <LUNA_INIT+0x24c>)
 80014b4:	f002 ff34 	bl	8004320 <MCAL_USART_SendData>
 80014b8:	21c2      	movs	r1, #194	; 0xc2
 80014ba:	4880      	ldr	r0, [pc, #512]	; (80016bc <LUNA_INIT+0x24c>)
 80014bc:	f002 ff30 	bl	8004320 <MCAL_USART_SendData>
 80014c0:	2101      	movs	r1, #1
 80014c2:	487e      	ldr	r0, [pc, #504]	; (80016bc <LUNA_INIT+0x24c>)
 80014c4:	f002 ff2c 	bl	8004320 <MCAL_USART_SendData>
 80014c8:	2100      	movs	r1, #0
 80014ca:	487c      	ldr	r0, [pc, #496]	; (80016bc <LUNA_INIT+0x24c>)
 80014cc:	f002 ff28 	bl	8004320 <MCAL_USART_SendData>
 80014d0:	2100      	movs	r1, #0
 80014d2:	487a      	ldr	r0, [pc, #488]	; (80016bc <LUNA_INIT+0x24c>)
 80014d4:	f002 ff24 	bl	8004320 <MCAL_USART_SendData>
	switch (mode){
 80014d8:	79fb      	ldrb	r3, [r7, #7]
 80014da:	2b01      	cmp	r3, #1
 80014dc:	d01c      	beq.n	8001518 <LUNA_INIT+0xa8>
 80014de:	2b02      	cmp	r3, #2
 80014e0:	d043      	beq.n	800156a <LUNA_INIT+0xfa>
 80014e2:	2b00      	cmp	r3, #0
 80014e4:	d152      	bne.n	800158c <LUNA_INIT+0x11c>
	case CONTIOUS_RANGING_MODE:
		MCAL_USART_SendData(LUNA_UART_INSTANT,0x5A);	MCAL_USART_SendData(LUNA_UART_INSTANT,0x06);	MCAL_USART_SendData(LUNA_UART_INSTANT,0x03);	MCAL_USART_SendData(LUNA_UART_INSTANT,0x64);	MCAL_USART_SendData(LUNA_UART_INSTANT,0x00);	MCAL_USART_SendData(LUNA_UART_INSTANT,0x00);
 80014e6:	215a      	movs	r1, #90	; 0x5a
 80014e8:	4874      	ldr	r0, [pc, #464]	; (80016bc <LUNA_INIT+0x24c>)
 80014ea:	f002 ff19 	bl	8004320 <MCAL_USART_SendData>
 80014ee:	2106      	movs	r1, #6
 80014f0:	4872      	ldr	r0, [pc, #456]	; (80016bc <LUNA_INIT+0x24c>)
 80014f2:	f002 ff15 	bl	8004320 <MCAL_USART_SendData>
 80014f6:	2103      	movs	r1, #3
 80014f8:	4870      	ldr	r0, [pc, #448]	; (80016bc <LUNA_INIT+0x24c>)
 80014fa:	f002 ff11 	bl	8004320 <MCAL_USART_SendData>
 80014fe:	2164      	movs	r1, #100	; 0x64
 8001500:	486e      	ldr	r0, [pc, #440]	; (80016bc <LUNA_INIT+0x24c>)
 8001502:	f002 ff0d 	bl	8004320 <MCAL_USART_SendData>
 8001506:	2100      	movs	r1, #0
 8001508:	486c      	ldr	r0, [pc, #432]	; (80016bc <LUNA_INIT+0x24c>)
 800150a:	f002 ff09 	bl	8004320 <MCAL_USART_SendData>
 800150e:	2100      	movs	r1, #0
 8001510:	486a      	ldr	r0, [pc, #424]	; (80016bc <LUNA_INIT+0x24c>)
 8001512:	f002 ff05 	bl	8004320 <MCAL_USART_SendData>
		break;
 8001516:	e039      	b.n	800158c <LUNA_INIT+0x11c>
	case TRIGER_MODE :
		/*frequancy ==0*/
		MCAL_USART_SendData(LUNA_UART_INSTANT,0x5A);	MCAL_USART_SendData(LUNA_UART_INSTANT,0x06);	MCAL_USART_SendData(LUNA_UART_INSTANT,0x03);	MCAL_USART_SendData(LUNA_UART_INSTANT,0x00); MCAL_USART_SendData(LUNA_UART_INSTANT,0x00);	MCAL_USART_SendData(LUNA_UART_INSTANT,0x00);
 8001518:	215a      	movs	r1, #90	; 0x5a
 800151a:	4868      	ldr	r0, [pc, #416]	; (80016bc <LUNA_INIT+0x24c>)
 800151c:	f002 ff00 	bl	8004320 <MCAL_USART_SendData>
 8001520:	2106      	movs	r1, #6
 8001522:	4866      	ldr	r0, [pc, #408]	; (80016bc <LUNA_INIT+0x24c>)
 8001524:	f002 fefc 	bl	8004320 <MCAL_USART_SendData>
 8001528:	2103      	movs	r1, #3
 800152a:	4864      	ldr	r0, [pc, #400]	; (80016bc <LUNA_INIT+0x24c>)
 800152c:	f002 fef8 	bl	8004320 <MCAL_USART_SendData>
 8001530:	2100      	movs	r1, #0
 8001532:	4862      	ldr	r0, [pc, #392]	; (80016bc <LUNA_INIT+0x24c>)
 8001534:	f002 fef4 	bl	8004320 <MCAL_USART_SendData>
 8001538:	2100      	movs	r1, #0
 800153a:	4860      	ldr	r0, [pc, #384]	; (80016bc <LUNA_INIT+0x24c>)
 800153c:	f002 fef0 	bl	8004320 <MCAL_USART_SendData>
 8001540:	2100      	movs	r1, #0
 8001542:	485e      	ldr	r0, [pc, #376]	; (80016bc <LUNA_INIT+0x24c>)
 8001544:	f002 feec 	bl	8004320 <MCAL_USART_SendData>
		/*triger mode*/
		MCAL_USART_SendData(LUNA_UART_INSTANT,0x5A);  MCAL_USART_SendData(LUNA_UART_INSTANT,0x04);  MCAL_USART_SendData(LUNA_UART_INSTANT,0x04);  MCAL_USART_SendData(LUNA_UART_INSTANT,0x00);
 8001548:	215a      	movs	r1, #90	; 0x5a
 800154a:	485c      	ldr	r0, [pc, #368]	; (80016bc <LUNA_INIT+0x24c>)
 800154c:	f002 fee8 	bl	8004320 <MCAL_USART_SendData>
 8001550:	2104      	movs	r1, #4
 8001552:	485a      	ldr	r0, [pc, #360]	; (80016bc <LUNA_INIT+0x24c>)
 8001554:	f002 fee4 	bl	8004320 <MCAL_USART_SendData>
 8001558:	2104      	movs	r1, #4
 800155a:	4858      	ldr	r0, [pc, #352]	; (80016bc <LUNA_INIT+0x24c>)
 800155c:	f002 fee0 	bl	8004320 <MCAL_USART_SendData>
 8001560:	2100      	movs	r1, #0
 8001562:	4856      	ldr	r0, [pc, #344]	; (80016bc <LUNA_INIT+0x24c>)
 8001564:	f002 fedc 	bl	8004320 <MCAL_USART_SendData>
		break;
 8001568:	e010      	b.n	800158c <LUNA_INIT+0x11c>
	case ON_OFF_MODE :
		MCAL_USART_SendData(LUNA_UART_INSTANT,0x5A);  MCAL_USART_SendData(LUNA_UART_INSTANT,0x04);  MCAL_USART_SendData(LUNA_UART_INSTANT,0x3B);  MCAL_USART_SendData(LUNA_UART_INSTANT,0x00);
 800156a:	215a      	movs	r1, #90	; 0x5a
 800156c:	4853      	ldr	r0, [pc, #332]	; (80016bc <LUNA_INIT+0x24c>)
 800156e:	f002 fed7 	bl	8004320 <MCAL_USART_SendData>
 8001572:	2104      	movs	r1, #4
 8001574:	4851      	ldr	r0, [pc, #324]	; (80016bc <LUNA_INIT+0x24c>)
 8001576:	f002 fed3 	bl	8004320 <MCAL_USART_SendData>
 800157a:	213b      	movs	r1, #59	; 0x3b
 800157c:	484f      	ldr	r0, [pc, #316]	; (80016bc <LUNA_INIT+0x24c>)
 800157e:	f002 fecf 	bl	8004320 <MCAL_USART_SendData>
 8001582:	2100      	movs	r1, #0
 8001584:	484d      	ldr	r0, [pc, #308]	; (80016bc <LUNA_INIT+0x24c>)
 8001586:	f002 fecb 	bl	8004320 <MCAL_USART_SendData>
		break;
 800158a:	bf00      	nop
	}
	switch (format)
 800158c:	79bb      	ldrb	r3, [r7, #6]
 800158e:	2b05      	cmp	r3, #5
 8001590:	f200 808e 	bhi.w	80016b0 <LUNA_INIT+0x240>
 8001594:	a201      	add	r2, pc, #4	; (adr r2, 800159c <LUNA_INIT+0x12c>)
 8001596:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800159a:	bf00      	nop
 800159c:	080015b5 	.word	0x080015b5
 80015a0:	080015df 	.word	0x080015df
 80015a4:	08001609 	.word	0x08001609
 80015a8:	08001633 	.word	0x08001633
 80015ac:	0800165d 	.word	0x0800165d
 80015b0:	08001687 	.word	0x08001687
	{
	case BYTE_9_CM:
		MCAL_USART_SendData(LUNA_UART_INSTANT,0x5A);  MCAL_USART_SendData(LUNA_UART_INSTANT,0x05);   MCAL_USART_SendData(LUNA_UART_INSTANT,0x05);  MCAL_USART_SendData(LUNA_UART_INSTANT,0x01);   MCAL_USART_SendData(LUNA_UART_INSTANT,0x00);
 80015b4:	215a      	movs	r1, #90	; 0x5a
 80015b6:	4841      	ldr	r0, [pc, #260]	; (80016bc <LUNA_INIT+0x24c>)
 80015b8:	f002 feb2 	bl	8004320 <MCAL_USART_SendData>
 80015bc:	2105      	movs	r1, #5
 80015be:	483f      	ldr	r0, [pc, #252]	; (80016bc <LUNA_INIT+0x24c>)
 80015c0:	f002 feae 	bl	8004320 <MCAL_USART_SendData>
 80015c4:	2105      	movs	r1, #5
 80015c6:	483d      	ldr	r0, [pc, #244]	; (80016bc <LUNA_INIT+0x24c>)
 80015c8:	f002 feaa 	bl	8004320 <MCAL_USART_SendData>
 80015cc:	2101      	movs	r1, #1
 80015ce:	483b      	ldr	r0, [pc, #236]	; (80016bc <LUNA_INIT+0x24c>)
 80015d0:	f002 fea6 	bl	8004320 <MCAL_USART_SendData>
 80015d4:	2100      	movs	r1, #0
 80015d6:	4839      	ldr	r0, [pc, #228]	; (80016bc <LUNA_INIT+0x24c>)
 80015d8:	f002 fea2 	bl	8004320 <MCAL_USART_SendData>
		break;
 80015dc:	e068      	b.n	80016b0 <LUNA_INIT+0x240>
	case PLX :
		MCAL_USART_SendData(LUNA_UART_INSTANT,0x5A);  MCAL_USART_SendData(LUNA_UART_INSTANT,0x05);   MCAL_USART_SendData(LUNA_UART_INSTANT,0x05);  MCAL_USART_SendData(LUNA_UART_INSTANT,0x02);   MCAL_USART_SendData(LUNA_UART_INSTANT,0x00);
 80015de:	215a      	movs	r1, #90	; 0x5a
 80015e0:	4836      	ldr	r0, [pc, #216]	; (80016bc <LUNA_INIT+0x24c>)
 80015e2:	f002 fe9d 	bl	8004320 <MCAL_USART_SendData>
 80015e6:	2105      	movs	r1, #5
 80015e8:	4834      	ldr	r0, [pc, #208]	; (80016bc <LUNA_INIT+0x24c>)
 80015ea:	f002 fe99 	bl	8004320 <MCAL_USART_SendData>
 80015ee:	2105      	movs	r1, #5
 80015f0:	4832      	ldr	r0, [pc, #200]	; (80016bc <LUNA_INIT+0x24c>)
 80015f2:	f002 fe95 	bl	8004320 <MCAL_USART_SendData>
 80015f6:	2102      	movs	r1, #2
 80015f8:	4830      	ldr	r0, [pc, #192]	; (80016bc <LUNA_INIT+0x24c>)
 80015fa:	f002 fe91 	bl	8004320 <MCAL_USART_SendData>
 80015fe:	2100      	movs	r1, #0
 8001600:	482e      	ldr	r0, [pc, #184]	; (80016bc <LUNA_INIT+0x24c>)
 8001602:	f002 fe8d 	bl	8004320 <MCAL_USART_SendData>
		break;
 8001606:	e053      	b.n	80016b0 <LUNA_INIT+0x240>
	case BYTE_9_MM :
		MCAL_USART_SendData(LUNA_UART_INSTANT,0x5A);  MCAL_USART_SendData(LUNA_UART_INSTANT,0x05);   MCAL_USART_SendData(LUNA_UART_INSTANT,0x05);  MCAL_USART_SendData(LUNA_UART_INSTANT,0x06);   MCAL_USART_SendData(LUNA_UART_INSTANT,0x00);
 8001608:	215a      	movs	r1, #90	; 0x5a
 800160a:	482c      	ldr	r0, [pc, #176]	; (80016bc <LUNA_INIT+0x24c>)
 800160c:	f002 fe88 	bl	8004320 <MCAL_USART_SendData>
 8001610:	2105      	movs	r1, #5
 8001612:	482a      	ldr	r0, [pc, #168]	; (80016bc <LUNA_INIT+0x24c>)
 8001614:	f002 fe84 	bl	8004320 <MCAL_USART_SendData>
 8001618:	2105      	movs	r1, #5
 800161a:	4828      	ldr	r0, [pc, #160]	; (80016bc <LUNA_INIT+0x24c>)
 800161c:	f002 fe80 	bl	8004320 <MCAL_USART_SendData>
 8001620:	2106      	movs	r1, #6
 8001622:	4826      	ldr	r0, [pc, #152]	; (80016bc <LUNA_INIT+0x24c>)
 8001624:	f002 fe7c 	bl	8004320 <MCAL_USART_SendData>
 8001628:	2100      	movs	r1, #0
 800162a:	4824      	ldr	r0, [pc, #144]	; (80016bc <LUNA_INIT+0x24c>)
 800162c:	f002 fe78 	bl	8004320 <MCAL_USART_SendData>
		break;
 8001630:	e03e      	b.n	80016b0 <LUNA_INIT+0x240>
	case BYTE_32:
		MCAL_USART_SendData(LUNA_UART_INSTANT,0x5A);  MCAL_USART_SendData(LUNA_UART_INSTANT,0x05);   MCAL_USART_SendData(LUNA_UART_INSTANT,0x05);  MCAL_USART_SendData(LUNA_UART_INSTANT,0x07);   MCAL_USART_SendData(LUNA_UART_INSTANT,0x00);
 8001632:	215a      	movs	r1, #90	; 0x5a
 8001634:	4821      	ldr	r0, [pc, #132]	; (80016bc <LUNA_INIT+0x24c>)
 8001636:	f002 fe73 	bl	8004320 <MCAL_USART_SendData>
 800163a:	2105      	movs	r1, #5
 800163c:	481f      	ldr	r0, [pc, #124]	; (80016bc <LUNA_INIT+0x24c>)
 800163e:	f002 fe6f 	bl	8004320 <MCAL_USART_SendData>
 8001642:	2105      	movs	r1, #5
 8001644:	481d      	ldr	r0, [pc, #116]	; (80016bc <LUNA_INIT+0x24c>)
 8001646:	f002 fe6b 	bl	8004320 <MCAL_USART_SendData>
 800164a:	2107      	movs	r1, #7
 800164c:	481b      	ldr	r0, [pc, #108]	; (80016bc <LUNA_INIT+0x24c>)
 800164e:	f002 fe67 	bl	8004320 <MCAL_USART_SendData>
 8001652:	2100      	movs	r1, #0
 8001654:	4819      	ldr	r0, [pc, #100]	; (80016bc <LUNA_INIT+0x24c>)
 8001656:	f002 fe63 	bl	8004320 <MCAL_USART_SendData>
		break;
 800165a:	e029      	b.n	80016b0 <LUNA_INIT+0x240>
	case ID_0 :
		MCAL_USART_SendData(LUNA_UART_INSTANT,0x5A);  MCAL_USART_SendData(LUNA_UART_INSTANT,0x05);   MCAL_USART_SendData(LUNA_UART_INSTANT,0x05);  MCAL_USART_SendData(LUNA_UART_INSTANT,0x08);   MCAL_USART_SendData(LUNA_UART_INSTANT,0x00);
 800165c:	215a      	movs	r1, #90	; 0x5a
 800165e:	4817      	ldr	r0, [pc, #92]	; (80016bc <LUNA_INIT+0x24c>)
 8001660:	f002 fe5e 	bl	8004320 <MCAL_USART_SendData>
 8001664:	2105      	movs	r1, #5
 8001666:	4815      	ldr	r0, [pc, #84]	; (80016bc <LUNA_INIT+0x24c>)
 8001668:	f002 fe5a 	bl	8004320 <MCAL_USART_SendData>
 800166c:	2105      	movs	r1, #5
 800166e:	4813      	ldr	r0, [pc, #76]	; (80016bc <LUNA_INIT+0x24c>)
 8001670:	f002 fe56 	bl	8004320 <MCAL_USART_SendData>
 8001674:	2108      	movs	r1, #8
 8001676:	4811      	ldr	r0, [pc, #68]	; (80016bc <LUNA_INIT+0x24c>)
 8001678:	f002 fe52 	bl	8004320 <MCAL_USART_SendData>
 800167c:	2100      	movs	r1, #0
 800167e:	480f      	ldr	r0, [pc, #60]	; (80016bc <LUNA_INIT+0x24c>)
 8001680:	f002 fe4e 	bl	8004320 <MCAL_USART_SendData>
		break;
 8001684:	e014      	b.n	80016b0 <LUNA_INIT+0x240>
	case BYTE_8_CM :
		MCAL_USART_SendData(LUNA_UART_INSTANT,0x5A);  MCAL_USART_SendData(LUNA_UART_INSTANT,0x05);   MCAL_USART_SendData(LUNA_UART_INSTANT,0x05);  MCAL_USART_SendData(LUNA_UART_INSTANT,0x09);   MCAL_USART_SendData(LUNA_UART_INSTANT,0x00);
 8001686:	215a      	movs	r1, #90	; 0x5a
 8001688:	480c      	ldr	r0, [pc, #48]	; (80016bc <LUNA_INIT+0x24c>)
 800168a:	f002 fe49 	bl	8004320 <MCAL_USART_SendData>
 800168e:	2105      	movs	r1, #5
 8001690:	480a      	ldr	r0, [pc, #40]	; (80016bc <LUNA_INIT+0x24c>)
 8001692:	f002 fe45 	bl	8004320 <MCAL_USART_SendData>
 8001696:	2105      	movs	r1, #5
 8001698:	4808      	ldr	r0, [pc, #32]	; (80016bc <LUNA_INIT+0x24c>)
 800169a:	f002 fe41 	bl	8004320 <MCAL_USART_SendData>
 800169e:	2109      	movs	r1, #9
 80016a0:	4806      	ldr	r0, [pc, #24]	; (80016bc <LUNA_INIT+0x24c>)
 80016a2:	f002 fe3d 	bl	8004320 <MCAL_USART_SendData>
 80016a6:	2100      	movs	r1, #0
 80016a8:	4804      	ldr	r0, [pc, #16]	; (80016bc <LUNA_INIT+0x24c>)
 80016aa:	f002 fe39 	bl	8004320 <MCAL_USART_SendData>
		break;
 80016ae:	bf00      	nop
	}
}
 80016b0:	bf00      	nop
 80016b2:	371c      	adds	r7, #28
 80016b4:	46bd      	mov	sp, r7
 80016b6:	bd90      	pop	{r4, r7, pc}
 80016b8:	080056e4 	.word	0x080056e4
 80016bc:	40004800 	.word	0x40004800

080016c0 <TFT_init>:
 * @param [in] - void
 * @param [out] - Void
 * @retval -
 * Note-
 */
void TFT_init(RGB_fromat RGB){
 80016c0:	b580      	push	{r7, lr}
 80016c2:	b08c      	sub	sp, #48	; 0x30
 80016c4:	af04      	add	r7, sp, #16
 80016c6:	4603      	mov	r3, r0
 80016c8:	71fb      	strb	r3, [r7, #7]

	/**************init the moudles used*************/
	SPI_Config_t TFT_Config={enabled,Master,SPI_8_BITS,MSB,SW,F_CPU_2,idle_0,first_clock};
 80016ca:	f107 0310 	add.w	r3, r7, #16
 80016ce:	2200      	movs	r2, #0
 80016d0:	601a      	str	r2, [r3, #0]
 80016d2:	605a      	str	r2, [r3, #4]
 80016d4:	609a      	str	r2, [r3, #8]
 80016d6:	60da      	str	r2, [r3, #12]
 80016d8:	2301      	movs	r3, #1
 80016da:	743b      	strb	r3, [r7, #16]
 80016dc:	2301      	movs	r3, #1
 80016de:	747b      	strb	r3, [r7, #17]
	PIN_config PINx={TFT_RESET_PIN,OUTPUT_PP,SPEED_10};
 80016e0:	4b34      	ldr	r3, [pc, #208]	; (80017b4 <TFT_init+0xf4>)
 80016e2:	681b      	ldr	r3, [r3, #0]
 80016e4:	60fb      	str	r3, [r7, #12]
	MCAL_SPI_init(TFT_SPI_inistant, &TFT_Config);
 80016e6:	f107 0310 	add.w	r3, r7, #16
 80016ea:	4619      	mov	r1, r3
 80016ec:	4832      	ldr	r0, [pc, #200]	; (80017b8 <TFT_init+0xf8>)
 80016ee:	f002 f92f 	bl	8003950 <MCAL_SPI_init>
	MCAL_GPIO_init(TFT_PORT, &PINx);
 80016f2:	f107 030c 	add.w	r3, r7, #12
 80016f6:	4619      	mov	r1, r3
 80016f8:	4830      	ldr	r0, [pc, #192]	; (80017bc <TFT_init+0xfc>)
 80016fa:	f001 fb27 	bl	8002d4c <MCAL_GPIO_init>
	PINx.PIN_number =TFT_A0_PIN;
 80016fe:	2303      	movs	r3, #3
 8001700:	81bb      	strh	r3, [r7, #12]
	MCAL_GPIO_init(TFT_PORT, &PINx);
 8001702:	f107 030c 	add.w	r3, r7, #12
 8001706:	4619      	mov	r1, r3
 8001708:	482c      	ldr	r0, [pc, #176]	; (80017bc <TFT_init+0xfc>)
 800170a:	f001 fb1f 	bl	8002d4c <MCAL_GPIO_init>
	/**************Start the init*************/
	MCAL_write_PIN(TFT_PORT, TFT_CS_PIN, LOGIC_HIGH);
 800170e:	2201      	movs	r2, #1
 8001710:	2104      	movs	r1, #4
 8001712:	482a      	ldr	r0, [pc, #168]	; (80017bc <TFT_init+0xfc>)
 8001714:	f001 fc04 	bl	8002f20 <MCAL_write_PIN>
	MCAL_write_PIN(TFT_PORT, TFT_RESET_PIN, LOGIC_LOW);
 8001718:	2200      	movs	r2, #0
 800171a:	2102      	movs	r1, #2
 800171c:	4827      	ldr	r0, [pc, #156]	; (80017bc <TFT_init+0xfc>)
 800171e:	f001 fbff 	bl	8002f20 <MCAL_write_PIN>
	_TIM1_delay_ms( 120);
 8001722:	2078      	movs	r0, #120	; 0x78
 8001724:	f002 fc7c 	bl	8004020 <_TIM1_delay_ms>
	MCAL_write_PIN(TFT_PORT, TFT_RESET_PIN, LOGIC_HIGH);
 8001728:	2201      	movs	r2, #1
 800172a:	2102      	movs	r1, #2
 800172c:	4823      	ldr	r0, [pc, #140]	; (80017bc <TFT_init+0xfc>)
 800172e:	f001 fbf7 	bl	8002f20 <MCAL_write_PIN>
	_TIM1_delay_ms( 120);
 8001732:	2078      	movs	r0, #120	; 0x78
 8001734:	f002 fc74 	bl	8004020 <_TIM1_delay_ms>

	TFT_send_command(0x01);
 8001738:	2001      	movs	r0, #1
 800173a:	f000 f91d 	bl	8001978 <TFT_send_command>
	_TIM1_delay_ms( 120);
 800173e:	2078      	movs	r0, #120	; 0x78
 8001740:	f002 fc6e 	bl	8004020 <_TIM1_delay_ms>

	TFT_send_command(TFT_Sleep_Out_MODE);
 8001744:	2011      	movs	r0, #17
 8001746:	f000 f917 	bl	8001978 <TFT_send_command>
	_TIM1_delay_ms( 110);
 800174a:	206e      	movs	r0, #110	; 0x6e
 800174c:	f002 fc68 	bl	8004020 <_TIM1_delay_ms>

	TFT_send_command(TFT_Pixel_Format_MODE); // Interface Pixel Format
 8001750:	203a      	movs	r0, #58	; 0x3a
 8001752:	f000 f911 	bl	8001978 <TFT_send_command>
	TFT_send_data(RGB); //18 bit
 8001756:	79fb      	ldrb	r3, [r7, #7]
 8001758:	4618      	mov	r0, r3
 800175a:	f000 f92f 	bl	80019bc <TFT_send_data>
	_TIM1_delay_ms( 120);
 800175e:	2078      	movs	r0, #120	; 0x78
 8001760:	f002 fc5e 	bl	8004020 <_TIM1_delay_ms>

	//		TFT_send_command(0x23); // Interface Pixel Format
	TFT_send_command(0x36);
 8001764:	2036      	movs	r0, #54	; 0x36
 8001766:	f000 f907 	bl	8001978 <TFT_send_command>
	_TIM1_delay_ms( 120);
 800176a:	2078      	movs	r0, #120	; 0x78
 800176c:	f002 fc58 	bl	8004020 <_TIM1_delay_ms>

	//	TFT_send_data(0b00011000 );
	TFT_send_data(0b10000000 );
 8001770:	2080      	movs	r0, #128	; 0x80
 8001772:	f000 f923 	bl	80019bc <TFT_send_data>

	_TIM1_delay_ms( 120);
 8001776:	2078      	movs	r0, #120	; 0x78
 8001778:	f002 fc52 	bl	8004020 <_TIM1_delay_ms>

	/////////////////////
	TFT_send_command(0xB4);
 800177c:	20b4      	movs	r0, #180	; 0xb4
 800177e:	f000 f8fb 	bl	8001978 <TFT_send_command>
	//	_TIM1_delay_ms( 120);

	TFT_send_data(0 );
 8001782:	2000      	movs	r0, #0
 8001784:	f000 f91a 	bl	80019bc <TFT_send_data>
	/////////////////////////
	TFT_send_command(TFT_Display_On_MODE);
 8001788:	2029      	movs	r0, #41	; 0x29
 800178a:	f000 f8f5 	bl	8001978 <TFT_send_command>
	_TIM1_delay_ms( 120);
 800178e:	2078      	movs	r0, #120	; 0x78
 8001790:	f002 fc46 	bl	8004020 <_TIM1_delay_ms>





	TFT_SET_BACKGROUND(0,159,0,127,0xff,0xff,0xff);
 8001794:	23ff      	movs	r3, #255	; 0xff
 8001796:	9302      	str	r3, [sp, #8]
 8001798:	23ff      	movs	r3, #255	; 0xff
 800179a:	9301      	str	r3, [sp, #4]
 800179c:	23ff      	movs	r3, #255	; 0xff
 800179e:	9300      	str	r3, [sp, #0]
 80017a0:	237f      	movs	r3, #127	; 0x7f
 80017a2:	2200      	movs	r2, #0
 80017a4:	219f      	movs	r1, #159	; 0x9f
 80017a6:	2000      	movs	r0, #0
 80017a8:	f000 f8a3 	bl	80018f2 <TFT_SET_BACKGROUND>



}
 80017ac:	bf00      	nop
 80017ae:	3720      	adds	r7, #32
 80017b0:	46bd      	mov	sp, r7
 80017b2:	bd80      	pop	{r7, pc}
 80017b4:	080056f4 	.word	0x080056f4
 80017b8:	40013000 	.word	0x40013000
 80017bc:	40010800 	.word	0x40010800

080017c0 <TFT_SET_LOCATION>:
void TFT_SET_LOCATION(uint16_t x1,uint16_t x2,uint16_t y1,uint16_t y2){
 80017c0:	b590      	push	{r4, r7, lr}
 80017c2:	b083      	sub	sp, #12
 80017c4:	af00      	add	r7, sp, #0
 80017c6:	4604      	mov	r4, r0
 80017c8:	4608      	mov	r0, r1
 80017ca:	4611      	mov	r1, r2
 80017cc:	461a      	mov	r2, r3
 80017ce:	4623      	mov	r3, r4
 80017d0:	80fb      	strh	r3, [r7, #6]
 80017d2:	4603      	mov	r3, r0
 80017d4:	80bb      	strh	r3, [r7, #4]
 80017d6:	460b      	mov	r3, r1
 80017d8:	807b      	strh	r3, [r7, #2]
 80017da:	4613      	mov	r3, r2
 80017dc:	803b      	strh	r3, [r7, #0]
	/***********************************/
	TFT_send_command(TFT_SET_Column_MODE);
 80017de:	202a      	movs	r0, #42	; 0x2a
 80017e0:	f000 f8ca 	bl	8001978 <TFT_send_command>
	TFT_send_data((y1>>8));
 80017e4:	887b      	ldrh	r3, [r7, #2]
 80017e6:	0a1b      	lsrs	r3, r3, #8
 80017e8:	b29b      	uxth	r3, r3
 80017ea:	b2db      	uxtb	r3, r3
 80017ec:	4618      	mov	r0, r3
 80017ee:	f000 f8e5 	bl	80019bc <TFT_send_data>
	TFT_send_data(((uint8_t)y1));
 80017f2:	887b      	ldrh	r3, [r7, #2]
 80017f4:	b2db      	uxtb	r3, r3
 80017f6:	4618      	mov	r0, r3
 80017f8:	f000 f8e0 	bl	80019bc <TFT_send_data>


	TFT_send_data((y2>>8));
 80017fc:	883b      	ldrh	r3, [r7, #0]
 80017fe:	0a1b      	lsrs	r3, r3, #8
 8001800:	b29b      	uxth	r3, r3
 8001802:	b2db      	uxtb	r3, r3
 8001804:	4618      	mov	r0, r3
 8001806:	f000 f8d9 	bl	80019bc <TFT_send_data>
	TFT_send_data(((uint8_t)y2));
 800180a:	883b      	ldrh	r3, [r7, #0]
 800180c:	b2db      	uxtb	r3, r3
 800180e:	4618      	mov	r0, r3
 8001810:	f000 f8d4 	bl	80019bc <TFT_send_data>
	/***********************************/
	TFT_send_command(TFT_SET_Row_MODE);
 8001814:	202b      	movs	r0, #43	; 0x2b
 8001816:	f000 f8af 	bl	8001978 <TFT_send_command>
	TFT_send_data((x1>>8));
 800181a:	88fb      	ldrh	r3, [r7, #6]
 800181c:	0a1b      	lsrs	r3, r3, #8
 800181e:	b29b      	uxth	r3, r3
 8001820:	b2db      	uxtb	r3, r3
 8001822:	4618      	mov	r0, r3
 8001824:	f000 f8ca 	bl	80019bc <TFT_send_data>
	TFT_send_data(((uint8_t)x1));
 8001828:	88fb      	ldrh	r3, [r7, #6]
 800182a:	b2db      	uxtb	r3, r3
 800182c:	4618      	mov	r0, r3
 800182e:	f000 f8c5 	bl	80019bc <TFT_send_data>


	TFT_send_data((x2>>8));
 8001832:	88bb      	ldrh	r3, [r7, #4]
 8001834:	0a1b      	lsrs	r3, r3, #8
 8001836:	b29b      	uxth	r3, r3
 8001838:	b2db      	uxtb	r3, r3
 800183a:	4618      	mov	r0, r3
 800183c:	f000 f8be 	bl	80019bc <TFT_send_data>
	TFT_send_data(((uint8_t)x2));
 8001840:	88bb      	ldrh	r3, [r7, #4]
 8001842:	b2db      	uxtb	r3, r3
 8001844:	4618      	mov	r0, r3
 8001846:	f000 f8b9 	bl	80019bc <TFT_send_data>
}
 800184a:	bf00      	nop
 800184c:	370c      	adds	r7, #12
 800184e:	46bd      	mov	sp, r7
 8001850:	bd90      	pop	{r4, r7, pc}

08001852 <TFT_SEND_Image>:

void TFT_SEND_Image(uint16_t x1,uint16_t x2,uint16_t y1,uint16_t y2,uint16_t* image){
 8001852:	b590      	push	{r4, r7, lr}
 8001854:	b087      	sub	sp, #28
 8001856:	af00      	add	r7, sp, #0
 8001858:	4604      	mov	r4, r0
 800185a:	4608      	mov	r0, r1
 800185c:	4611      	mov	r1, r2
 800185e:	461a      	mov	r2, r3
 8001860:	4623      	mov	r3, r4
 8001862:	80fb      	strh	r3, [r7, #6]
 8001864:	4603      	mov	r3, r0
 8001866:	80bb      	strh	r3, [r7, #4]
 8001868:	460b      	mov	r3, r1
 800186a:	807b      	strh	r3, [r7, #2]
 800186c:	4613      	mov	r3, r2
 800186e:	803b      	strh	r3, [r7, #0]
	uint32_t image_size=(((x2)-x1)*((y2)-y1));
 8001870:	88ba      	ldrh	r2, [r7, #4]
 8001872:	88fb      	ldrh	r3, [r7, #6]
 8001874:	1ad3      	subs	r3, r2, r3
 8001876:	8839      	ldrh	r1, [r7, #0]
 8001878:	887a      	ldrh	r2, [r7, #2]
 800187a:	1a8a      	subs	r2, r1, r2
 800187c:	fb02 f303 	mul.w	r3, r2, r3
 8001880:	613b      	str	r3, [r7, #16]
	uint8_t r=0,g=0,b=0;
 8001882:	2300      	movs	r3, #0
 8001884:	73fb      	strb	r3, [r7, #15]
 8001886:	2300      	movs	r3, #0
 8001888:	73bb      	strb	r3, [r7, #14]
 800188a:	2300      	movs	r3, #0
 800188c:	737b      	strb	r3, [r7, #13]

	TFT_SET_LOCATION(x1,(x2-1),y1,(y2-1));
 800188e:	88bb      	ldrh	r3, [r7, #4]
 8001890:	3b01      	subs	r3, #1
 8001892:	b299      	uxth	r1, r3
 8001894:	883b      	ldrh	r3, [r7, #0]
 8001896:	3b01      	subs	r3, #1
 8001898:	b29b      	uxth	r3, r3
 800189a:	887a      	ldrh	r2, [r7, #2]
 800189c:	88f8      	ldrh	r0, [r7, #6]
 800189e:	f7ff ff8f 	bl	80017c0 <TFT_SET_LOCATION>
	TFT_send_command(TFT_Memory_Write_MODE);
 80018a2:	202c      	movs	r0, #44	; 0x2c
 80018a4:	f000 f868 	bl	8001978 <TFT_send_command>
	for(uint32_t i=0;i<image_size;i++){
 80018a8:	2300      	movs	r3, #0
 80018aa:	617b      	str	r3, [r7, #20]
 80018ac:	e016      	b.n	80018dc <TFT_SEND_Image+0x8a>
		//		b = (b * 255) / 31;
		//
		//		TFT_send_data(r);
		//		TFT_send_data(g);
		//		TFT_send_data(b);
		TFT_send_data(((image[i])>>8));
 80018ae:	697b      	ldr	r3, [r7, #20]
 80018b0:	005b      	lsls	r3, r3, #1
 80018b2:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80018b4:	4413      	add	r3, r2
 80018b6:	881b      	ldrh	r3, [r3, #0]
 80018b8:	0a1b      	lsrs	r3, r3, #8
 80018ba:	b29b      	uxth	r3, r3
 80018bc:	b2db      	uxtb	r3, r3
 80018be:	4618      	mov	r0, r3
 80018c0:	f000 f87c 	bl	80019bc <TFT_send_data>
		TFT_send_data(image[i]);
 80018c4:	697b      	ldr	r3, [r7, #20]
 80018c6:	005b      	lsls	r3, r3, #1
 80018c8:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80018ca:	4413      	add	r3, r2
 80018cc:	881b      	ldrh	r3, [r3, #0]
 80018ce:	b2db      	uxtb	r3, r3
 80018d0:	4618      	mov	r0, r3
 80018d2:	f000 f873 	bl	80019bc <TFT_send_data>
	for(uint32_t i=0;i<image_size;i++){
 80018d6:	697b      	ldr	r3, [r7, #20]
 80018d8:	3301      	adds	r3, #1
 80018da:	617b      	str	r3, [r7, #20]
 80018dc:	697a      	ldr	r2, [r7, #20]
 80018de:	693b      	ldr	r3, [r7, #16]
 80018e0:	429a      	cmp	r2, r3
 80018e2:	d3e4      	bcc.n	80018ae <TFT_SEND_Image+0x5c>
	}
	TFT_send_command(0x00);
 80018e4:	2000      	movs	r0, #0
 80018e6:	f000 f847 	bl	8001978 <TFT_send_command>


}
 80018ea:	bf00      	nop
 80018ec:	371c      	adds	r7, #28
 80018ee:	46bd      	mov	sp, r7
 80018f0:	bd90      	pop	{r4, r7, pc}

080018f2 <TFT_SET_BACKGROUND>:
void TFT_SET_BACKGROUND(uint16_t x1,uint16_t x2,uint16_t y1,uint16_t y2,uint8_t r,uint8_t g,uint8_t b){
 80018f2:	b590      	push	{r4, r7, lr}
 80018f4:	b085      	sub	sp, #20
 80018f6:	af00      	add	r7, sp, #0
 80018f8:	4604      	mov	r4, r0
 80018fa:	4608      	mov	r0, r1
 80018fc:	4611      	mov	r1, r2
 80018fe:	461a      	mov	r2, r3
 8001900:	4623      	mov	r3, r4
 8001902:	80fb      	strh	r3, [r7, #6]
 8001904:	4603      	mov	r3, r0
 8001906:	80bb      	strh	r3, [r7, #4]
 8001908:	460b      	mov	r3, r1
 800190a:	807b      	strh	r3, [r7, #2]
 800190c:	4613      	mov	r3, r2
 800190e:	803b      	strh	r3, [r7, #0]
	uint32_t image_size=(((x2+1)-x1)*((y2+1)-y1));
 8001910:	88bb      	ldrh	r3, [r7, #4]
 8001912:	1c5a      	adds	r2, r3, #1
 8001914:	88fb      	ldrh	r3, [r7, #6]
 8001916:	1ad3      	subs	r3, r2, r3
 8001918:	883a      	ldrh	r2, [r7, #0]
 800191a:	1c51      	adds	r1, r2, #1
 800191c:	887a      	ldrh	r2, [r7, #2]
 800191e:	1a8a      	subs	r2, r1, r2
 8001920:	fb02 f303 	mul.w	r3, r2, r3
 8001924:	60bb      	str	r3, [r7, #8]
	TFT_SET_LOCATION(x1,x2,y1,y2);
 8001926:	883b      	ldrh	r3, [r7, #0]
 8001928:	887a      	ldrh	r2, [r7, #2]
 800192a:	88b9      	ldrh	r1, [r7, #4]
 800192c:	88f8      	ldrh	r0, [r7, #6]
 800192e:	f7ff ff47 	bl	80017c0 <TFT_SET_LOCATION>
	TFT_send_command(TFT_Memory_Write_MODE);
 8001932:	202c      	movs	r0, #44	; 0x2c
 8001934:	f000 f820 	bl	8001978 <TFT_send_command>
	for(uint32_t i=0;i<image_size;i++){
 8001938:	2300      	movs	r3, #0
 800193a:	60fb      	str	r3, [r7, #12]
 800193c:	e011      	b.n	8001962 <TFT_SET_BACKGROUND+0x70>
		TFT_send_data(r);
 800193e:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001942:	4618      	mov	r0, r3
 8001944:	f000 f83a 	bl	80019bc <TFT_send_data>
		TFT_send_data(g);
 8001948:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 800194c:	4618      	mov	r0, r3
 800194e:	f000 f835 	bl	80019bc <TFT_send_data>
		TFT_send_data(b);
 8001952:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8001956:	4618      	mov	r0, r3
 8001958:	f000 f830 	bl	80019bc <TFT_send_data>
	for(uint32_t i=0;i<image_size;i++){
 800195c:	68fb      	ldr	r3, [r7, #12]
 800195e:	3301      	adds	r3, #1
 8001960:	60fb      	str	r3, [r7, #12]
 8001962:	68fa      	ldr	r2, [r7, #12]
 8001964:	68bb      	ldr	r3, [r7, #8]
 8001966:	429a      	cmp	r2, r3
 8001968:	d3e9      	bcc.n	800193e <TFT_SET_BACKGROUND+0x4c>
	}
	TFT_send_command(0x00);
 800196a:	2000      	movs	r0, #0
 800196c:	f000 f804 	bl	8001978 <TFT_send_command>


}
 8001970:	bf00      	nop
 8001972:	3714      	adds	r7, #20
 8001974:	46bd      	mov	sp, r7
 8001976:	bd90      	pop	{r4, r7, pc}

08001978 <TFT_send_command>:

		break;
	}
}
void TFT_send_command(uint8_t command)
{
 8001978:	b580      	push	{r7, lr}
 800197a:	b082      	sub	sp, #8
 800197c:	af00      	add	r7, sp, #0
 800197e:	4603      	mov	r3, r0
 8001980:	71fb      	strb	r3, [r7, #7]
	MCAL_write_PIN(TFT_PORT, TFT_CS_PIN, LOGIC_LOW); // MAKE CS LOW TO START COMMUCATION USING SPI
 8001982:	2200      	movs	r2, #0
 8001984:	2104      	movs	r1, #4
 8001986:	480b      	ldr	r0, [pc, #44]	; (80019b4 <TFT_send_command+0x3c>)
 8001988:	f001 faca 	bl	8002f20 <MCAL_write_PIN>


	MCAL_write_PIN(TFT_PORT, TFT_A0_PIN, LOGIC_LOW);
 800198c:	2200      	movs	r2, #0
 800198e:	2103      	movs	r1, #3
 8001990:	4808      	ldr	r0, [pc, #32]	; (80019b4 <TFT_send_command+0x3c>)
 8001992:	f001 fac5 	bl	8002f20 <MCAL_write_PIN>

	MCAL_SPI_SendData(TFT_SPI_inistant, command);
 8001996:	79fb      	ldrb	r3, [r7, #7]
 8001998:	4619      	mov	r1, r3
 800199a:	4807      	ldr	r0, [pc, #28]	; (80019b8 <TFT_send_command+0x40>)
 800199c:	f002 f898 	bl	8003ad0 <MCAL_SPI_SendData>


	MCAL_write_PIN(TFT_PORT, TFT_CS_PIN, LOGIC_HIGH);
 80019a0:	2201      	movs	r2, #1
 80019a2:	2104      	movs	r1, #4
 80019a4:	4803      	ldr	r0, [pc, #12]	; (80019b4 <TFT_send_command+0x3c>)
 80019a6:	f001 fabb 	bl	8002f20 <MCAL_write_PIN>

}
 80019aa:	bf00      	nop
 80019ac:	3708      	adds	r7, #8
 80019ae:	46bd      	mov	sp, r7
 80019b0:	bd80      	pop	{r7, pc}
 80019b2:	bf00      	nop
 80019b4:	40010800 	.word	0x40010800
 80019b8:	40013000 	.word	0x40013000

080019bc <TFT_send_data>:


void TFT_send_data(uint8_t data){
 80019bc:	b580      	push	{r7, lr}
 80019be:	b082      	sub	sp, #8
 80019c0:	af00      	add	r7, sp, #0
 80019c2:	4603      	mov	r3, r0
 80019c4:	71fb      	strb	r3, [r7, #7]

	MCAL_write_PIN(TFT_PORT, TFT_CS_PIN, LOGIC_LOW); // MAKE CS LOW TO START COMMUCATION USING SPI
 80019c6:	2200      	movs	r2, #0
 80019c8:	2104      	movs	r1, #4
 80019ca:	480b      	ldr	r0, [pc, #44]	; (80019f8 <TFT_send_data+0x3c>)
 80019cc:	f001 faa8 	bl	8002f20 <MCAL_write_PIN>


	MCAL_write_PIN(TFT_PORT, TFT_A0_PIN, LOGIC_HIGH);
 80019d0:	2201      	movs	r2, #1
 80019d2:	2103      	movs	r1, #3
 80019d4:	4808      	ldr	r0, [pc, #32]	; (80019f8 <TFT_send_data+0x3c>)
 80019d6:	f001 faa3 	bl	8002f20 <MCAL_write_PIN>

	MCAL_SPI_SendData(TFT_SPI_inistant, data);
 80019da:	79fb      	ldrb	r3, [r7, #7]
 80019dc:	4619      	mov	r1, r3
 80019de:	4807      	ldr	r0, [pc, #28]	; (80019fc <TFT_send_data+0x40>)
 80019e0:	f002 f876 	bl	8003ad0 <MCAL_SPI_SendData>


	MCAL_write_PIN(TFT_PORT, TFT_CS_PIN, LOGIC_HIGH);
 80019e4:	2201      	movs	r2, #1
 80019e6:	2104      	movs	r1, #4
 80019e8:	4803      	ldr	r0, [pc, #12]	; (80019f8 <TFT_send_data+0x3c>)
 80019ea:	f001 fa99 	bl	8002f20 <MCAL_write_PIN>


}
 80019ee:	bf00      	nop
 80019f0:	3708      	adds	r7, #8
 80019f2:	46bd      	mov	sp, r7
 80019f4:	bd80      	pop	{r7, pc}
 80019f6:	bf00      	nop
 80019f8:	40010800 	.word	0x40010800
 80019fc:	40013000 	.word	0x40013000

08001a00 <TFT_SPEED_ICON_Print>:

void TFT_SPEED_ICON_Print(){
 8001a00:	b580      	push	{r7, lr}
 8001a02:	b084      	sub	sp, #16
 8001a04:	af04      	add	r7, sp, #16
	TFT_SEND_Image(130, 159, 46, 81, SPEED);
 8001a06:	4b0b      	ldr	r3, [pc, #44]	; (8001a34 <TFT_SPEED_ICON_Print+0x34>)
 8001a08:	9300      	str	r3, [sp, #0]
 8001a0a:	2351      	movs	r3, #81	; 0x51
 8001a0c:	222e      	movs	r2, #46	; 0x2e
 8001a0e:	219f      	movs	r1, #159	; 0x9f
 8001a10:	2082      	movs	r0, #130	; 0x82
 8001a12:	f7ff ff1e 	bl	8001852 <TFT_SEND_Image>
	TFT_SET_BACKGROUND(130,136,46,81,0xff,0xff,0xff);
 8001a16:	23ff      	movs	r3, #255	; 0xff
 8001a18:	9302      	str	r3, [sp, #8]
 8001a1a:	23ff      	movs	r3, #255	; 0xff
 8001a1c:	9301      	str	r3, [sp, #4]
 8001a1e:	23ff      	movs	r3, #255	; 0xff
 8001a20:	9300      	str	r3, [sp, #0]
 8001a22:	2351      	movs	r3, #81	; 0x51
 8001a24:	222e      	movs	r2, #46	; 0x2e
 8001a26:	2188      	movs	r1, #136	; 0x88
 8001a28:	2082      	movs	r0, #130	; 0x82
 8001a2a:	f7ff ff62 	bl	80018f2 <TFT_SET_BACKGROUND>

}
 8001a2e:	bf00      	nop
 8001a30:	46bd      	mov	sp, r7
 8001a32:	bd80      	pop	{r7, pc}
 8001a34:	0801b248 	.word	0x0801b248

08001a38 <TFT_Welcome_ICON_Print>:
void TFT_Welcome_ICON_Print(){
 8001a38:	b580      	push	{r7, lr}
 8001a3a:	b084      	sub	sp, #16
 8001a3c:	af04      	add	r7, sp, #16
	TFT_SET_BACKGROUND(0,159,0,127,0,0,0);
 8001a3e:	2300      	movs	r3, #0
 8001a40:	9302      	str	r3, [sp, #8]
 8001a42:	2300      	movs	r3, #0
 8001a44:	9301      	str	r3, [sp, #4]
 8001a46:	2300      	movs	r3, #0
 8001a48:	9300      	str	r3, [sp, #0]
 8001a4a:	237f      	movs	r3, #127	; 0x7f
 8001a4c:	2200      	movs	r2, #0
 8001a4e:	219f      	movs	r1, #159	; 0x9f
 8001a50:	2000      	movs	r0, #0
 8001a52:	f7ff ff4e 	bl	80018f2 <TFT_SET_BACKGROUND>
	TFT_SEND_Image(42, 117, 26, 101, Welcome);
 8001a56:	4b0d      	ldr	r3, [pc, #52]	; (8001a8c <TFT_Welcome_ICON_Print+0x54>)
 8001a58:	9300      	str	r3, [sp, #0]
 8001a5a:	2365      	movs	r3, #101	; 0x65
 8001a5c:	221a      	movs	r2, #26
 8001a5e:	2175      	movs	r1, #117	; 0x75
 8001a60:	202a      	movs	r0, #42	; 0x2a
 8001a62:	f7ff fef6 	bl	8001852 <TFT_SEND_Image>
	_TIM1_delay_ms(500);
 8001a66:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8001a6a:	f002 fad9 	bl	8004020 <_TIM1_delay_ms>
	TFT_SET_BACKGROUND(0,159,0,127,0xff,0xff,0xff);
 8001a6e:	23ff      	movs	r3, #255	; 0xff
 8001a70:	9302      	str	r3, [sp, #8]
 8001a72:	23ff      	movs	r3, #255	; 0xff
 8001a74:	9301      	str	r3, [sp, #4]
 8001a76:	23ff      	movs	r3, #255	; 0xff
 8001a78:	9300      	str	r3, [sp, #0]
 8001a7a:	237f      	movs	r3, #127	; 0x7f
 8001a7c:	2200      	movs	r2, #0
 8001a7e:	219f      	movs	r1, #159	; 0x9f
 8001a80:	2000      	movs	r0, #0
 8001a82:	f7ff ff36 	bl	80018f2 <TFT_SET_BACKGROUND>

}
 8001a86:	bf00      	nop
 8001a88:	46bd      	mov	sp, r7
 8001a8a:	bd80      	pop	{r7, pc}
 8001a8c:	0801c6d8 	.word	0x0801c6d8

08001a90 <TFT_KM_H_ICON_Print>:
void TFT_KM_H_ICON_Print(){
 8001a90:	b580      	push	{r7, lr}
 8001a92:	b082      	sub	sp, #8
 8001a94:	af02      	add	r7, sp, #8
	TFT_SEND_Image(75, 102, 49, 79, KM_H);
 8001a96:	4b05      	ldr	r3, [pc, #20]	; (8001aac <TFT_KM_H_ICON_Print+0x1c>)
 8001a98:	9300      	str	r3, [sp, #0]
 8001a9a:	234f      	movs	r3, #79	; 0x4f
 8001a9c:	2231      	movs	r2, #49	; 0x31
 8001a9e:	2166      	movs	r1, #102	; 0x66
 8001aa0:	204b      	movs	r0, #75	; 0x4b
 8001aa2:	f7ff fed6 	bl	8001852 <TFT_SEND_Image>

}
 8001aa6:	bf00      	nop
 8001aa8:	46bd      	mov	sp, r7
 8001aaa:	bd80      	pop	{r7, pc}
 8001aac:	0801ab40 	.word	0x0801ab40

08001ab0 <TFT_cruise_control_ICON_Print>:
void TFT_cruise_control_ICON_Print(uint8_t on_off){
 8001ab0:	b580      	push	{r7, lr}
 8001ab2:	b086      	sub	sp, #24
 8001ab4:	af04      	add	r7, sp, #16
 8001ab6:	4603      	mov	r3, r0
 8001ab8:	71fb      	strb	r3, [r7, #7]
	if(on_off){
 8001aba:	79fb      	ldrb	r3, [r7, #7]
 8001abc:	2b00      	cmp	r3, #0
 8001abe:	d008      	beq.n	8001ad2 <TFT_cruise_control_ICON_Print+0x22>
		TFT_SEND_Image(0, 26, 0, 26, image_data_cruisecontrol);
 8001ac0:	4b0c      	ldr	r3, [pc, #48]	; (8001af4 <TFT_cruise_control_ICON_Print+0x44>)
 8001ac2:	9300      	str	r3, [sp, #0]
 8001ac4:	231a      	movs	r3, #26
 8001ac6:	2200      	movs	r2, #0
 8001ac8:	211a      	movs	r1, #26
 8001aca:	2000      	movs	r0, #0
 8001acc:	f7ff fec1 	bl	8001852 <TFT_SEND_Image>
	}else{
		TFT_SET_BACKGROUND(0, 26, 0, 26,0xff,0xff,0xff);

	}

}
 8001ad0:	e00b      	b.n	8001aea <TFT_cruise_control_ICON_Print+0x3a>
		TFT_SET_BACKGROUND(0, 26, 0, 26,0xff,0xff,0xff);
 8001ad2:	23ff      	movs	r3, #255	; 0xff
 8001ad4:	9302      	str	r3, [sp, #8]
 8001ad6:	23ff      	movs	r3, #255	; 0xff
 8001ad8:	9301      	str	r3, [sp, #4]
 8001ada:	23ff      	movs	r3, #255	; 0xff
 8001adc:	9300      	str	r3, [sp, #0]
 8001ade:	231a      	movs	r3, #26
 8001ae0:	2200      	movs	r2, #0
 8001ae2:	211a      	movs	r1, #26
 8001ae4:	2000      	movs	r0, #0
 8001ae6:	f7ff ff04 	bl	80018f2 <TFT_SET_BACKGROUND>
}
 8001aea:	bf00      	nop
 8001aec:	3708      	adds	r7, #8
 8001aee:	46bd      	mov	sp, r7
 8001af0:	bd80      	pop	{r7, pc}
 8001af2:	bf00      	nop
 8001af4:	0801bbdc 	.word	0x0801bbdc

08001af8 <TFT_HOD_ICON_Print>:
void TFT_HOD_ICON_Print(uint8_t on_off){
 8001af8:	b580      	push	{r7, lr}
 8001afa:	b086      	sub	sp, #24
 8001afc:	af04      	add	r7, sp, #16
 8001afe:	4603      	mov	r3, r0
 8001b00:	71fb      	strb	r3, [r7, #7]
	if(on_off){
 8001b02:	79fb      	ldrb	r3, [r7, #7]
 8001b04:	2b00      	cmp	r3, #0
 8001b06:	d008      	beq.n	8001b1a <TFT_HOD_ICON_Print+0x22>
		TFT_SEND_Image(0, 27, 101, 128, image_data_hod);
 8001b08:	4b0c      	ldr	r3, [pc, #48]	; (8001b3c <TFT_HOD_ICON_Print+0x44>)
 8001b0a:	9300      	str	r3, [sp, #0]
 8001b0c:	2380      	movs	r3, #128	; 0x80
 8001b0e:	2265      	movs	r2, #101	; 0x65
 8001b10:	211b      	movs	r1, #27
 8001b12:	2000      	movs	r0, #0
 8001b14:	f7ff fe9d 	bl	8001852 <TFT_SEND_Image>
	}else{
		TFT_SET_BACKGROUND(0, 27, 101, 128,0xff,0xff,0xff);

	}

}
 8001b18:	e00b      	b.n	8001b32 <TFT_HOD_ICON_Print+0x3a>
		TFT_SET_BACKGROUND(0, 27, 101, 128,0xff,0xff,0xff);
 8001b1a:	23ff      	movs	r3, #255	; 0xff
 8001b1c:	9302      	str	r3, [sp, #8]
 8001b1e:	23ff      	movs	r3, #255	; 0xff
 8001b20:	9301      	str	r3, [sp, #4]
 8001b22:	23ff      	movs	r3, #255	; 0xff
 8001b24:	9300      	str	r3, [sp, #0]
 8001b26:	2380      	movs	r3, #128	; 0x80
 8001b28:	2265      	movs	r2, #101	; 0x65
 8001b2a:	211b      	movs	r1, #27
 8001b2c:	2000      	movs	r0, #0
 8001b2e:	f7ff fee0 	bl	80018f2 <TFT_SET_BACKGROUND>
}
 8001b32:	bf00      	nop
 8001b34:	3708      	adds	r7, #8
 8001b36:	46bd      	mov	sp, r7
 8001b38:	bd80      	pop	{r7, pc}
 8001b3a:	bf00      	nop
 8001b3c:	0801c124 	.word	0x0801c124

08001b40 <TFT_send_TSR_image>:
uint8_t TFT_send_TSR_image(uint8_t image_flag){
 8001b40:	b580      	push	{r7, lr}
 8001b42:	b084      	sub	sp, #16
 8001b44:	af02      	add	r7, sp, #8
 8001b46:	4603      	mov	r3, r0
 8001b48:	71fb      	strb	r3, [r7, #7]


	//	TFT_SET_BACKGROUND(0x008C,0x0153,0x006E,0x00D1,0xff,0xff,0xff);
	switch(image_flag){
 8001b4a:	79fb      	ldrb	r3, [r7, #7]
 8001b4c:	2b19      	cmp	r3, #25
 8001b4e:	d873      	bhi.n	8001c38 <TFT_send_TSR_image+0xf8>
 8001b50:	a201      	add	r2, pc, #4	; (adr r2, 8001b58 <TFT_send_TSR_image+0x18>)
 8001b52:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001b56:	bf00      	nop
 8001b58:	08001bfd 	.word	0x08001bfd
 8001b5c:	08001c39 	.word	0x08001c39
 8001b60:	08001c39 	.word	0x08001c39
 8001b64:	08001c39 	.word	0x08001c39
 8001b68:	08001c39 	.word	0x08001c39
 8001b6c:	08001c39 	.word	0x08001c39
 8001b70:	08001c39 	.word	0x08001c39
 8001b74:	08001c25 	.word	0x08001c25
 8001b78:	08001be9 	.word	0x08001be9
 8001b7c:	08001bc1 	.word	0x08001bc1
 8001b80:	08001c39 	.word	0x08001c39
 8001b84:	08001c39 	.word	0x08001c39
 8001b88:	08001c39 	.word	0x08001c39
 8001b8c:	08001c39 	.word	0x08001c39
 8001b90:	08001c39 	.word	0x08001c39
 8001b94:	08001c39 	.word	0x08001c39
 8001b98:	08001bd5 	.word	0x08001bd5
 8001b9c:	08001c39 	.word	0x08001c39
 8001ba0:	08001c39 	.word	0x08001c39
 8001ba4:	08001c39 	.word	0x08001c39
 8001ba8:	08001c39 	.word	0x08001c39
 8001bac:	08001c39 	.word	0x08001c39
 8001bb0:	08001c39 	.word	0x08001c39
 8001bb4:	08001c39 	.word	0x08001c39
 8001bb8:	08001c39 	.word	0x08001c39
 8001bbc:	08001c11 	.word	0x08001c11
	case (_100_KM_SIGN_FLAG):

			TFT_SEND_Image(0, 75, 26, 101, _100_KM_SIGN);
 8001bc0:	4b24      	ldr	r3, [pc, #144]	; (8001c54 <TFT_send_TSR_image+0x114>)
 8001bc2:	9300      	str	r3, [sp, #0]
 8001bc4:	2365      	movs	r3, #101	; 0x65
 8001bc6:	221a      	movs	r2, #26
 8001bc8:	214b      	movs	r1, #75	; 0x4b
 8001bca:	2000      	movs	r0, #0
 8001bcc:	f7ff fe41 	bl	8001852 <TFT_SEND_Image>

	return 0;
 8001bd0:	2300      	movs	r3, #0
 8001bd2:	e03a      	b.n	8001c4a <TFT_send_TSR_image+0x10a>
	break;

	case _120_KM_SIGN_FLAG:
		TFT_SEND_Image(0, 75, 26, 101, _120_KM_SIGN);
 8001bd4:	4b20      	ldr	r3, [pc, #128]	; (8001c58 <TFT_send_TSR_image+0x118>)
 8001bd6:	9300      	str	r3, [sp, #0]
 8001bd8:	2365      	movs	r3, #101	; 0x65
 8001bda:	221a      	movs	r2, #26
 8001bdc:	214b      	movs	r1, #75	; 0x4b
 8001bde:	2000      	movs	r0, #0
 8001be0:	f7ff fe37 	bl	8001852 <TFT_SEND_Image>


		return 0;
 8001be4:	2300      	movs	r3, #0
 8001be6:	e030      	b.n	8001c4a <TFT_send_TSR_image+0x10a>
		break;


		break;
	case NO_WAITING_SIGN_FLAG:
		TFT_SEND_Image(0, 75, 26, 101, NO_WAITING_SIGN);
 8001be8:	4b1c      	ldr	r3, [pc, #112]	; (8001c5c <TFT_send_TSR_image+0x11c>)
 8001bea:	9300      	str	r3, [sp, #0]
 8001bec:	2365      	movs	r3, #101	; 0x65
 8001bee:	221a      	movs	r2, #26
 8001bf0:	214b      	movs	r1, #75	; 0x4b
 8001bf2:	2000      	movs	r0, #0
 8001bf4:	f7ff fe2d 	bl	8001852 <TFT_SEND_Image>

		return 0;
 8001bf8:	2300      	movs	r3, #0
 8001bfa:	e026      	b.n	8001c4a <TFT_send_TSR_image+0x10a>
		break;
	case _PARKING_SIGN_FLAG:
		TFT_SEND_Image(0, 70, 26, 101, _Parking_SIGN);
 8001bfc:	4b18      	ldr	r3, [pc, #96]	; (8001c60 <TFT_send_TSR_image+0x120>)
 8001bfe:	9300      	str	r3, [sp, #0]
 8001c00:	2365      	movs	r3, #101	; 0x65
 8001c02:	221a      	movs	r2, #26
 8001c04:	2146      	movs	r1, #70	; 0x46
 8001c06:	2000      	movs	r0, #0
 8001c08:	f7ff fe23 	bl	8001852 <TFT_SEND_Image>

		return 0;
 8001c0c:	2300      	movs	r3, #0
 8001c0e:	e01c      	b.n	8001c4a <TFT_send_TSR_image+0x10a>
		break;
	case STOP_SIGN_FLAG:
		TFT_SEND_Image(0, 73, 26, 101, _STOP_SIGN);
 8001c10:	4b14      	ldr	r3, [pc, #80]	; (8001c64 <TFT_send_TSR_image+0x124>)
 8001c12:	9300      	str	r3, [sp, #0]
 8001c14:	2365      	movs	r3, #101	; 0x65
 8001c16:	221a      	movs	r2, #26
 8001c18:	2149      	movs	r1, #73	; 0x49
 8001c1a:	2000      	movs	r0, #0
 8001c1c:	f7ff fe19 	bl	8001852 <TFT_SEND_Image>

		return 0;
 8001c20:	2300      	movs	r3, #0
 8001c22:	e012      	b.n	8001c4a <TFT_send_TSR_image+0x10a>
		break;
	case NO_PARKING_SIGN_FLAG:
		TFT_SEND_Image(0, 73, 26, 101, NO_Parking_SIGN);
 8001c24:	4b10      	ldr	r3, [pc, #64]	; (8001c68 <TFT_send_TSR_image+0x128>)
 8001c26:	9300      	str	r3, [sp, #0]
 8001c28:	2365      	movs	r3, #101	; 0x65
 8001c2a:	221a      	movs	r2, #26
 8001c2c:	2149      	movs	r1, #73	; 0x49
 8001c2e:	2000      	movs	r0, #0
 8001c30:	f7ff fe0f 	bl	8001852 <TFT_SEND_Image>

		return 0;
 8001c34:	2300      	movs	r3, #0
 8001c36:	e008      	b.n	8001c4a <TFT_send_TSR_image+0x10a>
		break;
	default:
		TFT_SEND_Image(0, 75, 26, 101, _NO_SIGN);
 8001c38:	4b0c      	ldr	r3, [pc, #48]	; (8001c6c <TFT_send_TSR_image+0x12c>)
 8001c3a:	9300      	str	r3, [sp, #0]
 8001c3c:	2365      	movs	r3, #101	; 0x65
 8001c3e:	221a      	movs	r2, #26
 8001c40:	214b      	movs	r1, #75	; 0x4b
 8001c42:	2000      	movs	r0, #0
 8001c44:	f7ff fe05 	bl	8001852 <TFT_SEND_Image>

		return 1;
 8001c48:	2301      	movs	r3, #1





}
 8001c4a:	4618      	mov	r0, r3
 8001c4c:	3708      	adds	r7, #8
 8001c4e:	46bd      	mov	sp, r7
 8001c50:	bd80      	pop	{r7, pc}
 8001c52:	bf00      	nop
 8001c54:	0801600c 	.word	0x0801600c
 8001c58:	08013418 	.word	0x08013418
 8001c5c:	08005854 	.word	0x08005854
 8001c60:	0800b03c 	.word	0x0800b03c
 8001c64:	08008448 	.word	0x08008448
 8001c68:	0800dc30 	.word	0x0800dc30
 8001c6c:	08010824 	.word	0x08010824

08001c70 <TFT_send_ACC_image>:

void TFT_send_ACC_image(uint8_t NUMBER){
 8001c70:	b580      	push	{r7, lr}
 8001c72:	b086      	sub	sp, #24
 8001c74:	af04      	add	r7, sp, #16
 8001c76:	4603      	mov	r3, r0
 8001c78:	71fb      	strb	r3, [r7, #7]
	static uint8_t clear_times=0;
	if(NUMBER<100){
 8001c7a:	79fb      	ldrb	r3, [r7, #7]
 8001c7c:	2b63      	cmp	r3, #99	; 0x63
 8001c7e:	d848      	bhi.n	8001d12 <TFT_send_ACC_image+0xa2>
		if(clear_times==0){
 8001c80:	4b4e      	ldr	r3, [pc, #312]	; (8001dbc <TFT_send_ACC_image+0x14c>)
 8001c82:	781b      	ldrb	r3, [r3, #0]
 8001c84:	2b00      	cmp	r3, #0
 8001c86:	d111      	bne.n	8001cac <TFT_send_ACC_image+0x3c>
			TFT_SET_BACKGROUND(105,125,34,94,0xff,0xff,0xff);
 8001c88:	23ff      	movs	r3, #255	; 0xff
 8001c8a:	9302      	str	r3, [sp, #8]
 8001c8c:	23ff      	movs	r3, #255	; 0xff
 8001c8e:	9301      	str	r3, [sp, #4]
 8001c90:	23ff      	movs	r3, #255	; 0xff
 8001c92:	9300      	str	r3, [sp, #0]
 8001c94:	235e      	movs	r3, #94	; 0x5e
 8001c96:	2222      	movs	r2, #34	; 0x22
 8001c98:	217d      	movs	r1, #125	; 0x7d
 8001c9a:	2069      	movs	r0, #105	; 0x69
 8001c9c:	f7ff fe29 	bl	80018f2 <TFT_SET_BACKGROUND>
			clear_times++;
 8001ca0:	4b46      	ldr	r3, [pc, #280]	; (8001dbc <TFT_send_ACC_image+0x14c>)
 8001ca2:	781b      	ldrb	r3, [r3, #0]
 8001ca4:	3301      	adds	r3, #1
 8001ca6:	b2da      	uxtb	r2, r3
 8001ca8:	4b44      	ldr	r3, [pc, #272]	; (8001dbc <TFT_send_ACC_image+0x14c>)
 8001caa:	701a      	strb	r2, [r3, #0]
		}
		TFT_SEND_Image(105, 125, 64, 84, numbers_ptr[(NUMBER%10)]); //digit 1
 8001cac:	79fa      	ldrb	r2, [r7, #7]
 8001cae:	4b44      	ldr	r3, [pc, #272]	; (8001dc0 <TFT_send_ACC_image+0x150>)
 8001cb0:	fba3 1302 	umull	r1, r3, r3, r2
 8001cb4:	08d9      	lsrs	r1, r3, #3
 8001cb6:	460b      	mov	r3, r1
 8001cb8:	009b      	lsls	r3, r3, #2
 8001cba:	440b      	add	r3, r1
 8001cbc:	005b      	lsls	r3, r3, #1
 8001cbe:	1ad3      	subs	r3, r2, r3
 8001cc0:	b2db      	uxtb	r3, r3
 8001cc2:	461a      	mov	r2, r3
 8001cc4:	4b3f      	ldr	r3, [pc, #252]	; (8001dc4 <TFT_send_ACC_image+0x154>)
 8001cc6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001cca:	9300      	str	r3, [sp, #0]
 8001ccc:	2354      	movs	r3, #84	; 0x54
 8001cce:	2240      	movs	r2, #64	; 0x40
 8001cd0:	217d      	movs	r1, #125	; 0x7d
 8001cd2:	2069      	movs	r0, #105	; 0x69
 8001cd4:	f7ff fdbd 	bl	8001852 <TFT_SEND_Image>
		NUMBER/=10;
 8001cd8:	79fb      	ldrb	r3, [r7, #7]
 8001cda:	4a39      	ldr	r2, [pc, #228]	; (8001dc0 <TFT_send_ACC_image+0x150>)
 8001cdc:	fba2 2303 	umull	r2, r3, r2, r3
 8001ce0:	08db      	lsrs	r3, r3, #3
 8001ce2:	71fb      	strb	r3, [r7, #7]
		TFT_SEND_Image(105, 125, 44, 64, numbers_ptr[(NUMBER%10)]); //digit 2
 8001ce4:	79fa      	ldrb	r2, [r7, #7]
 8001ce6:	4b36      	ldr	r3, [pc, #216]	; (8001dc0 <TFT_send_ACC_image+0x150>)
 8001ce8:	fba3 1302 	umull	r1, r3, r3, r2
 8001cec:	08d9      	lsrs	r1, r3, #3
 8001cee:	460b      	mov	r3, r1
 8001cf0:	009b      	lsls	r3, r3, #2
 8001cf2:	440b      	add	r3, r1
 8001cf4:	005b      	lsls	r3, r3, #1
 8001cf6:	1ad3      	subs	r3, r2, r3
 8001cf8:	b2db      	uxtb	r3, r3
 8001cfa:	461a      	mov	r2, r3
 8001cfc:	4b31      	ldr	r3, [pc, #196]	; (8001dc4 <TFT_send_ACC_image+0x154>)
 8001cfe:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001d02:	9300      	str	r3, [sp, #0]
 8001d04:	2340      	movs	r3, #64	; 0x40
 8001d06:	222c      	movs	r2, #44	; 0x2c
 8001d08:	217d      	movs	r1, #125	; 0x7d
 8001d0a:	2069      	movs	r0, #105	; 0x69
 8001d0c:	f7ff fda1 	bl	8001852 <TFT_SEND_Image>
		TFT_SEND_Image(105, 125, 34, 54, numbers_ptr[(NUMBER%10)]); //digit 3
	}



}
 8001d10:	e050      	b.n	8001db4 <TFT_send_ACC_image+0x144>
		clear_times=0;
 8001d12:	4b2a      	ldr	r3, [pc, #168]	; (8001dbc <TFT_send_ACC_image+0x14c>)
 8001d14:	2200      	movs	r2, #0
 8001d16:	701a      	strb	r2, [r3, #0]
		TFT_SEND_Image(105, 125, 74, 94, numbers_ptr[(NUMBER%10)]); //digit 1
 8001d18:	79fa      	ldrb	r2, [r7, #7]
 8001d1a:	4b29      	ldr	r3, [pc, #164]	; (8001dc0 <TFT_send_ACC_image+0x150>)
 8001d1c:	fba3 1302 	umull	r1, r3, r3, r2
 8001d20:	08d9      	lsrs	r1, r3, #3
 8001d22:	460b      	mov	r3, r1
 8001d24:	009b      	lsls	r3, r3, #2
 8001d26:	440b      	add	r3, r1
 8001d28:	005b      	lsls	r3, r3, #1
 8001d2a:	1ad3      	subs	r3, r2, r3
 8001d2c:	b2db      	uxtb	r3, r3
 8001d2e:	461a      	mov	r2, r3
 8001d30:	4b24      	ldr	r3, [pc, #144]	; (8001dc4 <TFT_send_ACC_image+0x154>)
 8001d32:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001d36:	9300      	str	r3, [sp, #0]
 8001d38:	235e      	movs	r3, #94	; 0x5e
 8001d3a:	224a      	movs	r2, #74	; 0x4a
 8001d3c:	217d      	movs	r1, #125	; 0x7d
 8001d3e:	2069      	movs	r0, #105	; 0x69
 8001d40:	f7ff fd87 	bl	8001852 <TFT_SEND_Image>
		NUMBER/=10;
 8001d44:	79fb      	ldrb	r3, [r7, #7]
 8001d46:	4a1e      	ldr	r2, [pc, #120]	; (8001dc0 <TFT_send_ACC_image+0x150>)
 8001d48:	fba2 2303 	umull	r2, r3, r2, r3
 8001d4c:	08db      	lsrs	r3, r3, #3
 8001d4e:	71fb      	strb	r3, [r7, #7]
		TFT_SEND_Image(105, 125, 54, 74, numbers_ptr[(NUMBER%10)]); //digit 2
 8001d50:	79fa      	ldrb	r2, [r7, #7]
 8001d52:	4b1b      	ldr	r3, [pc, #108]	; (8001dc0 <TFT_send_ACC_image+0x150>)
 8001d54:	fba3 1302 	umull	r1, r3, r3, r2
 8001d58:	08d9      	lsrs	r1, r3, #3
 8001d5a:	460b      	mov	r3, r1
 8001d5c:	009b      	lsls	r3, r3, #2
 8001d5e:	440b      	add	r3, r1
 8001d60:	005b      	lsls	r3, r3, #1
 8001d62:	1ad3      	subs	r3, r2, r3
 8001d64:	b2db      	uxtb	r3, r3
 8001d66:	461a      	mov	r2, r3
 8001d68:	4b16      	ldr	r3, [pc, #88]	; (8001dc4 <TFT_send_ACC_image+0x154>)
 8001d6a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001d6e:	9300      	str	r3, [sp, #0]
 8001d70:	234a      	movs	r3, #74	; 0x4a
 8001d72:	2236      	movs	r2, #54	; 0x36
 8001d74:	217d      	movs	r1, #125	; 0x7d
 8001d76:	2069      	movs	r0, #105	; 0x69
 8001d78:	f7ff fd6b 	bl	8001852 <TFT_SEND_Image>
		NUMBER/=10;
 8001d7c:	79fb      	ldrb	r3, [r7, #7]
 8001d7e:	4a10      	ldr	r2, [pc, #64]	; (8001dc0 <TFT_send_ACC_image+0x150>)
 8001d80:	fba2 2303 	umull	r2, r3, r2, r3
 8001d84:	08db      	lsrs	r3, r3, #3
 8001d86:	71fb      	strb	r3, [r7, #7]
		TFT_SEND_Image(105, 125, 34, 54, numbers_ptr[(NUMBER%10)]); //digit 3
 8001d88:	79fa      	ldrb	r2, [r7, #7]
 8001d8a:	4b0d      	ldr	r3, [pc, #52]	; (8001dc0 <TFT_send_ACC_image+0x150>)
 8001d8c:	fba3 1302 	umull	r1, r3, r3, r2
 8001d90:	08d9      	lsrs	r1, r3, #3
 8001d92:	460b      	mov	r3, r1
 8001d94:	009b      	lsls	r3, r3, #2
 8001d96:	440b      	add	r3, r1
 8001d98:	005b      	lsls	r3, r3, #1
 8001d9a:	1ad3      	subs	r3, r2, r3
 8001d9c:	b2db      	uxtb	r3, r3
 8001d9e:	461a      	mov	r2, r3
 8001da0:	4b08      	ldr	r3, [pc, #32]	; (8001dc4 <TFT_send_ACC_image+0x154>)
 8001da2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001da6:	9300      	str	r3, [sp, #0]
 8001da8:	2336      	movs	r3, #54	; 0x36
 8001daa:	2222      	movs	r2, #34	; 0x22
 8001dac:	217d      	movs	r1, #125	; 0x7d
 8001dae:	2069      	movs	r0, #105	; 0x69
 8001db0:	f7ff fd4f 	bl	8001852 <TFT_SEND_Image>
}
 8001db4:	bf00      	nop
 8001db6:	3708      	adds	r7, #8
 8001db8:	46bd      	mov	sp, r7
 8001dba:	bd80      	pop	{r7, pc}
 8001dbc:	20004000 	.word	0x20004000
 8001dc0:	cccccccd 	.word	0xcccccccd
 8001dc4:	20000008 	.word	0x20000008

08001dc8 <ADC_ERROR_HANDLER>:
 8001dc8:	b480      	push	{r7}
 8001dca:	af00      	add	r7, sp, #0
 8001dcc:	e7fe      	b.n	8001dcc <ADC_ERROR_HANDLER+0x4>
	...

08001dd0 <ADC_GPIO_CONFIG>:
 8001dd0:	b580      	push	{r7, lr}
 8001dd2:	b090      	sub	sp, #64	; 0x40
 8001dd4:	af00      	add	r7, sp, #0
 8001dd6:	4603      	mov	r3, r0
 8001dd8:	71fb      	strb	r3, [r7, #7]
 8001dda:	2300      	movs	r3, #0
 8001ddc:	87bb      	strh	r3, [r7, #60]	; 0x3c
 8001dde:	2300      	movs	r3, #0
 8001de0:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e
 8001de4:	2300      	movs	r3, #0
 8001de6:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 8001dea:	79fb      	ldrb	r3, [r7, #7]
 8001dec:	2b0f      	cmp	r3, #15
 8001dee:	f200 80d7 	bhi.w	8001fa0 <ADC_GPIO_CONFIG+0x1d0>
 8001df2:	a201      	add	r2, pc, #4	; (adr r2, 8001df8 <ADC_GPIO_CONFIG+0x28>)
 8001df4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001df8:	08001e39 	.word	0x08001e39
 8001dfc:	08001e57 	.word	0x08001e57
 8001e00:	08001e75 	.word	0x08001e75
 8001e04:	08001e93 	.word	0x08001e93
 8001e08:	08001eb1 	.word	0x08001eb1
 8001e0c:	08001ecf 	.word	0x08001ecf
 8001e10:	08001eed 	.word	0x08001eed
 8001e14:	08001f0b 	.word	0x08001f0b
 8001e18:	08001f29 	.word	0x08001f29
 8001e1c:	08001f47 	.word	0x08001f47
 8001e20:	08001fa1 	.word	0x08001fa1
 8001e24:	08001fa1 	.word	0x08001fa1
 8001e28:	08001fa1 	.word	0x08001fa1
 8001e2c:	08001fa1 	.word	0x08001fa1
 8001e30:	08001f65 	.word	0x08001f65
 8001e34:	08001f83 	.word	0x08001f83
 8001e38:	2300      	movs	r3, #0
 8001e3a:	87bb      	strh	r3, [r7, #60]	; 0x3c
 8001e3c:	2300      	movs	r3, #0
 8001e3e:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e
 8001e42:	2300      	movs	r3, #0
 8001e44:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 8001e48:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8001e4c:	4619      	mov	r1, r3
 8001e4e:	4858      	ldr	r0, [pc, #352]	; (8001fb0 <ADC_GPIO_CONFIG+0x1e0>)
 8001e50:	f000 ff7c 	bl	8002d4c <MCAL_GPIO_init>
 8001e54:	e0a7      	b.n	8001fa6 <ADC_GPIO_CONFIG+0x1d6>
 8001e56:	2301      	movs	r3, #1
 8001e58:	87bb      	strh	r3, [r7, #60]	; 0x3c
 8001e5a:	2300      	movs	r3, #0
 8001e5c:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e
 8001e60:	2300      	movs	r3, #0
 8001e62:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 8001e66:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8001e6a:	4619      	mov	r1, r3
 8001e6c:	4850      	ldr	r0, [pc, #320]	; (8001fb0 <ADC_GPIO_CONFIG+0x1e0>)
 8001e6e:	f000 ff6d 	bl	8002d4c <MCAL_GPIO_init>
 8001e72:	e098      	b.n	8001fa6 <ADC_GPIO_CONFIG+0x1d6>
 8001e74:	2302      	movs	r3, #2
 8001e76:	87bb      	strh	r3, [r7, #60]	; 0x3c
 8001e78:	2300      	movs	r3, #0
 8001e7a:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e
 8001e7e:	2300      	movs	r3, #0
 8001e80:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 8001e84:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8001e88:	4619      	mov	r1, r3
 8001e8a:	4849      	ldr	r0, [pc, #292]	; (8001fb0 <ADC_GPIO_CONFIG+0x1e0>)
 8001e8c:	f000 ff5e 	bl	8002d4c <MCAL_GPIO_init>
 8001e90:	e089      	b.n	8001fa6 <ADC_GPIO_CONFIG+0x1d6>
 8001e92:	2303      	movs	r3, #3
 8001e94:	87bb      	strh	r3, [r7, #60]	; 0x3c
 8001e96:	2300      	movs	r3, #0
 8001e98:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e
 8001e9c:	2300      	movs	r3, #0
 8001e9e:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 8001ea2:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8001ea6:	4619      	mov	r1, r3
 8001ea8:	4841      	ldr	r0, [pc, #260]	; (8001fb0 <ADC_GPIO_CONFIG+0x1e0>)
 8001eaa:	f000 ff4f 	bl	8002d4c <MCAL_GPIO_init>
 8001eae:	e07a      	b.n	8001fa6 <ADC_GPIO_CONFIG+0x1d6>
 8001eb0:	2304      	movs	r3, #4
 8001eb2:	87bb      	strh	r3, [r7, #60]	; 0x3c
 8001eb4:	2300      	movs	r3, #0
 8001eb6:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e
 8001eba:	2300      	movs	r3, #0
 8001ebc:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 8001ec0:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8001ec4:	4619      	mov	r1, r3
 8001ec6:	483a      	ldr	r0, [pc, #232]	; (8001fb0 <ADC_GPIO_CONFIG+0x1e0>)
 8001ec8:	f000 ff40 	bl	8002d4c <MCAL_GPIO_init>
 8001ecc:	e06b      	b.n	8001fa6 <ADC_GPIO_CONFIG+0x1d6>
 8001ece:	2305      	movs	r3, #5
 8001ed0:	87bb      	strh	r3, [r7, #60]	; 0x3c
 8001ed2:	2300      	movs	r3, #0
 8001ed4:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e
 8001ed8:	2300      	movs	r3, #0
 8001eda:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 8001ede:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8001ee2:	4619      	mov	r1, r3
 8001ee4:	4832      	ldr	r0, [pc, #200]	; (8001fb0 <ADC_GPIO_CONFIG+0x1e0>)
 8001ee6:	f000 ff31 	bl	8002d4c <MCAL_GPIO_init>
 8001eea:	e05c      	b.n	8001fa6 <ADC_GPIO_CONFIG+0x1d6>
 8001eec:	2306      	movs	r3, #6
 8001eee:	87bb      	strh	r3, [r7, #60]	; 0x3c
 8001ef0:	2300      	movs	r3, #0
 8001ef2:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e
 8001ef6:	2300      	movs	r3, #0
 8001ef8:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 8001efc:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8001f00:	4619      	mov	r1, r3
 8001f02:	482b      	ldr	r0, [pc, #172]	; (8001fb0 <ADC_GPIO_CONFIG+0x1e0>)
 8001f04:	f000 ff22 	bl	8002d4c <MCAL_GPIO_init>
 8001f08:	e04d      	b.n	8001fa6 <ADC_GPIO_CONFIG+0x1d6>
 8001f0a:	2307      	movs	r3, #7
 8001f0c:	87bb      	strh	r3, [r7, #60]	; 0x3c
 8001f0e:	2300      	movs	r3, #0
 8001f10:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e
 8001f14:	2300      	movs	r3, #0
 8001f16:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 8001f1a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8001f1e:	4619      	mov	r1, r3
 8001f20:	4823      	ldr	r0, [pc, #140]	; (8001fb0 <ADC_GPIO_CONFIG+0x1e0>)
 8001f22:	f000 ff13 	bl	8002d4c <MCAL_GPIO_init>
 8001f26:	e03e      	b.n	8001fa6 <ADC_GPIO_CONFIG+0x1d6>
 8001f28:	2300      	movs	r3, #0
 8001f2a:	87bb      	strh	r3, [r7, #60]	; 0x3c
 8001f2c:	2300      	movs	r3, #0
 8001f2e:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e
 8001f32:	2300      	movs	r3, #0
 8001f34:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 8001f38:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8001f3c:	4619      	mov	r1, r3
 8001f3e:	481d      	ldr	r0, [pc, #116]	; (8001fb4 <ADC_GPIO_CONFIG+0x1e4>)
 8001f40:	f000 ff04 	bl	8002d4c <MCAL_GPIO_init>
 8001f44:	e02f      	b.n	8001fa6 <ADC_GPIO_CONFIG+0x1d6>
 8001f46:	2301      	movs	r3, #1
 8001f48:	87bb      	strh	r3, [r7, #60]	; 0x3c
 8001f4a:	2300      	movs	r3, #0
 8001f4c:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e
 8001f50:	2300      	movs	r3, #0
 8001f52:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 8001f56:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8001f5a:	4619      	mov	r1, r3
 8001f5c:	4815      	ldr	r0, [pc, #84]	; (8001fb4 <ADC_GPIO_CONFIG+0x1e4>)
 8001f5e:	f000 fef5 	bl	8002d4c <MCAL_GPIO_init>
 8001f62:	e020      	b.n	8001fa6 <ADC_GPIO_CONFIG+0x1d6>
 8001f64:	2304      	movs	r3, #4
 8001f66:	87bb      	strh	r3, [r7, #60]	; 0x3c
 8001f68:	2300      	movs	r3, #0
 8001f6a:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e
 8001f6e:	2300      	movs	r3, #0
 8001f70:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 8001f74:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8001f78:	4619      	mov	r1, r3
 8001f7a:	480f      	ldr	r0, [pc, #60]	; (8001fb8 <ADC_GPIO_CONFIG+0x1e8>)
 8001f7c:	f000 fee6 	bl	8002d4c <MCAL_GPIO_init>
 8001f80:	e011      	b.n	8001fa6 <ADC_GPIO_CONFIG+0x1d6>
 8001f82:	2305      	movs	r3, #5
 8001f84:	87bb      	strh	r3, [r7, #60]	; 0x3c
 8001f86:	2300      	movs	r3, #0
 8001f88:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e
 8001f8c:	2300      	movs	r3, #0
 8001f8e:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 8001f92:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8001f96:	4619      	mov	r1, r3
 8001f98:	4807      	ldr	r0, [pc, #28]	; (8001fb8 <ADC_GPIO_CONFIG+0x1e8>)
 8001f9a:	f000 fed7 	bl	8002d4c <MCAL_GPIO_init>
 8001f9e:	e002      	b.n	8001fa6 <ADC_GPIO_CONFIG+0x1d6>
 8001fa0:	f7ff ff12 	bl	8001dc8 <ADC_ERROR_HANDLER>
 8001fa4:	bf00      	nop
 8001fa6:	bf00      	nop
 8001fa8:	3740      	adds	r7, #64	; 0x40
 8001faa:	46bd      	mov	sp, r7
 8001fac:	bd80      	pop	{r7, pc}
 8001fae:	bf00      	nop
 8001fb0:	40010800 	.word	0x40010800
 8001fb4:	40010c00 	.word	0x40010c00
 8001fb8:	40011000 	.word	0x40011000

08001fbc <ADC_init>:
 8001fbc:	b580      	push	{r7, lr}
 8001fbe:	b082      	sub	sp, #8
 8001fc0:	af00      	add	r7, sp, #0
 8001fc2:	6078      	str	r0, [r7, #4]
 8001fc4:	6039      	str	r1, [r7, #0]
 8001fc6:	683b      	ldr	r3, [r7, #0]
 8001fc8:	781b      	ldrb	r3, [r3, #0]
 8001fca:	2b09      	cmp	r3, #9
 8001fcc:	d905      	bls.n	8001fda <ADC_init+0x1e>
 8001fce:	683b      	ldr	r3, [r7, #0]
 8001fd0:	781b      	ldrb	r3, [r3, #0]
 8001fd2:	2b0d      	cmp	r3, #13
 8001fd4:	d801      	bhi.n	8001fda <ADC_init+0x1e>
 8001fd6:	2301      	movs	r3, #1
 8001fd8:	e177      	b.n	80022ca <ADC_init+0x30e>
 8001fda:	687b      	ldr	r3, [r7, #4]
 8001fdc:	4a9a      	ldr	r2, [pc, #616]	; (8002248 <ADC_init+0x28c>)
 8001fde:	4293      	cmp	r3, r2
 8001fe0:	d113      	bne.n	800200a <ADC_init+0x4e>
 8001fe2:	683b      	ldr	r3, [r7, #0]
 8001fe4:	781b      	ldrb	r3, [r3, #0]
 8001fe6:	4619      	mov	r1, r3
 8001fe8:	4a98      	ldr	r2, [pc, #608]	; (800224c <ADC_init+0x290>)
 8001fea:	460b      	mov	r3, r1
 8001fec:	005b      	lsls	r3, r3, #1
 8001fee:	440b      	add	r3, r1
 8001ff0:	009b      	lsls	r3, r3, #2
 8001ff2:	4413      	add	r3, r2
 8001ff4:	683a      	ldr	r2, [r7, #0]
 8001ff6:	ca07      	ldmia	r2, {r0, r1, r2}
 8001ff8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8001ffc:	4b94      	ldr	r3, [pc, #592]	; (8002250 <ADC_init+0x294>)
 8001ffe:	699b      	ldr	r3, [r3, #24]
 8002000:	4a93      	ldr	r2, [pc, #588]	; (8002250 <ADC_init+0x294>)
 8002002:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002006:	6193      	str	r3, [r2, #24]
 8002008:	e013      	b.n	8002032 <ADC_init+0x76>
 800200a:	683b      	ldr	r3, [r7, #0]
 800200c:	781b      	ldrb	r3, [r3, #0]
 800200e:	4619      	mov	r1, r3
 8002010:	4a8e      	ldr	r2, [pc, #568]	; (800224c <ADC_init+0x290>)
 8002012:	460b      	mov	r3, r1
 8002014:	005b      	lsls	r3, r3, #1
 8002016:	440b      	add	r3, r1
 8002018:	009b      	lsls	r3, r3, #2
 800201a:	4413      	add	r3, r2
 800201c:	33c0      	adds	r3, #192	; 0xc0
 800201e:	683a      	ldr	r2, [r7, #0]
 8002020:	ca07      	ldmia	r2, {r0, r1, r2}
 8002022:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002026:	4b8a      	ldr	r3, [pc, #552]	; (8002250 <ADC_init+0x294>)
 8002028:	699b      	ldr	r3, [r3, #24]
 800202a:	4a89      	ldr	r2, [pc, #548]	; (8002250 <ADC_init+0x294>)
 800202c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8002030:	6193      	str	r3, [r2, #24]
 8002032:	683b      	ldr	r3, [r7, #0]
 8002034:	781b      	ldrb	r3, [r3, #0]
 8002036:	4618      	mov	r0, r3
 8002038:	f7ff feca 	bl	8001dd0 <ADC_GPIO_CONFIG>
 800203c:	687a      	ldr	r2, [r7, #4]
 800203e:	6893      	ldr	r3, [r2, #8]
 8002040:	f043 0301 	orr.w	r3, r3, #1
 8002044:	6093      	str	r3, [r2, #8]
 8002046:	200a      	movs	r0, #10
 8002048:	f001 ffbe 	bl	8003fc8 <_TIM1_delay_us>
 800204c:	687a      	ldr	r2, [r7, #4]
 800204e:	6893      	ldr	r3, [r2, #8]
 8002050:	f043 0301 	orr.w	r3, r3, #1
 8002054:	6093      	str	r3, [r2, #8]
 8002056:	f001 fc67 	bl	8003928 <MCAL_GET_PCLCK2>
 800205a:	4603      	mov	r3, r0
 800205c:	4a7d      	ldr	r2, [pc, #500]	; (8002254 <ADC_init+0x298>)
 800205e:	fba2 2303 	umull	r2, r3, r2, r3
 8002062:	0c9b      	lsrs	r3, r3, #18
 8002064:	2b1c      	cmp	r3, #28
 8002066:	d014      	beq.n	8002092 <ADC_init+0xd6>
 8002068:	2b1c      	cmp	r3, #28
 800206a:	d819      	bhi.n	80020a0 <ADC_init+0xe4>
 800206c:	2b08      	cmp	r3, #8
 800206e:	d002      	beq.n	8002076 <ADC_init+0xba>
 8002070:	2b10      	cmp	r3, #16
 8002072:	d007      	beq.n	8002084 <ADC_init+0xc8>
 8002074:	e014      	b.n	80020a0 <ADC_init+0xe4>
 8002076:	4b76      	ldr	r3, [pc, #472]	; (8002250 <ADC_init+0x294>)
 8002078:	685b      	ldr	r3, [r3, #4]
 800207a:	4a75      	ldr	r2, [pc, #468]	; (8002250 <ADC_init+0x294>)
 800207c:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8002080:	6053      	str	r3, [r2, #4]
 8002082:	e014      	b.n	80020ae <ADC_init+0xf2>
 8002084:	4b72      	ldr	r3, [pc, #456]	; (8002250 <ADC_init+0x294>)
 8002086:	685b      	ldr	r3, [r3, #4]
 8002088:	4a71      	ldr	r2, [pc, #452]	; (8002250 <ADC_init+0x294>)
 800208a:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 800208e:	6053      	str	r3, [r2, #4]
 8002090:	e00d      	b.n	80020ae <ADC_init+0xf2>
 8002092:	4b6f      	ldr	r3, [pc, #444]	; (8002250 <ADC_init+0x294>)
 8002094:	685b      	ldr	r3, [r3, #4]
 8002096:	4a6e      	ldr	r2, [pc, #440]	; (8002250 <ADC_init+0x294>)
 8002098:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 800209c:	6053      	str	r3, [r2, #4]
 800209e:	e006      	b.n	80020ae <ADC_init+0xf2>
 80020a0:	4b6b      	ldr	r3, [pc, #428]	; (8002250 <ADC_init+0x294>)
 80020a2:	685b      	ldr	r3, [r3, #4]
 80020a4:	4a6a      	ldr	r2, [pc, #424]	; (8002250 <ADC_init+0x294>)
 80020a6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80020aa:	6053      	str	r3, [r2, #4]
 80020ac:	bf00      	nop
 80020ae:	687a      	ldr	r2, [r7, #4]
 80020b0:	6893      	ldr	r3, [r2, #8]
 80020b2:	f043 0304 	orr.w	r3, r3, #4
 80020b6:	6093      	str	r3, [r2, #8]
 80020b8:	687a      	ldr	r2, [r7, #4]
 80020ba:	6893      	ldr	r3, [r2, #8]
 80020bc:	f36f 23cb 	bfc	r3, #11, #1
 80020c0:	6093      	str	r3, [r2, #8]
 80020c2:	683b      	ldr	r3, [r7, #0]
 80020c4:	781b      	ldrb	r3, [r3, #0]
 80020c6:	2b0f      	cmp	r3, #15
 80020c8:	f200 80a8 	bhi.w	800221c <ADC_init+0x260>
 80020cc:	a201      	add	r2, pc, #4	; (adr r2, 80020d4 <ADC_init+0x118>)
 80020ce:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80020d2:	bf00      	nop
 80020d4:	08002115 	.word	0x08002115
 80020d8:	0800212b 	.word	0x0800212b
 80020dc:	08002141 	.word	0x08002141
 80020e0:	08002157 	.word	0x08002157
 80020e4:	0800216d 	.word	0x0800216d
 80020e8:	08002183 	.word	0x08002183
 80020ec:	08002199 	.word	0x08002199
 80020f0:	080021af 	.word	0x080021af
 80020f4:	080021c5 	.word	0x080021c5
 80020f8:	080021db 	.word	0x080021db
 80020fc:	0800221d 	.word	0x0800221d
 8002100:	0800221d 	.word	0x0800221d
 8002104:	0800221d 	.word	0x0800221d
 8002108:	0800221d 	.word	0x0800221d
 800210c:	080021f1 	.word	0x080021f1
 8002110:	08002207 	.word	0x08002207
 8002114:	683b      	ldr	r3, [r7, #0]
 8002116:	789b      	ldrb	r3, [r3, #2]
 8002118:	f003 0307 	and.w	r3, r3, #7
 800211c:	b2d9      	uxtb	r1, r3
 800211e:	687a      	ldr	r2, [r7, #4]
 8002120:	6913      	ldr	r3, [r2, #16]
 8002122:	f361 0302 	bfi	r3, r1, #0, #3
 8002126:	6113      	str	r3, [r2, #16]
 8002128:	e07b      	b.n	8002222 <ADC_init+0x266>
 800212a:	683b      	ldr	r3, [r7, #0]
 800212c:	789b      	ldrb	r3, [r3, #2]
 800212e:	f003 0307 	and.w	r3, r3, #7
 8002132:	b2d9      	uxtb	r1, r3
 8002134:	687a      	ldr	r2, [r7, #4]
 8002136:	6913      	ldr	r3, [r2, #16]
 8002138:	f361 03c5 	bfi	r3, r1, #3, #3
 800213c:	6113      	str	r3, [r2, #16]
 800213e:	e070      	b.n	8002222 <ADC_init+0x266>
 8002140:	683b      	ldr	r3, [r7, #0]
 8002142:	789b      	ldrb	r3, [r3, #2]
 8002144:	f003 0307 	and.w	r3, r3, #7
 8002148:	b2d9      	uxtb	r1, r3
 800214a:	687a      	ldr	r2, [r7, #4]
 800214c:	6913      	ldr	r3, [r2, #16]
 800214e:	f361 1388 	bfi	r3, r1, #6, #3
 8002152:	6113      	str	r3, [r2, #16]
 8002154:	e065      	b.n	8002222 <ADC_init+0x266>
 8002156:	683b      	ldr	r3, [r7, #0]
 8002158:	789b      	ldrb	r3, [r3, #2]
 800215a:	f003 0307 	and.w	r3, r3, #7
 800215e:	b2d9      	uxtb	r1, r3
 8002160:	687a      	ldr	r2, [r7, #4]
 8002162:	6913      	ldr	r3, [r2, #16]
 8002164:	f361 234b 	bfi	r3, r1, #9, #3
 8002168:	6113      	str	r3, [r2, #16]
 800216a:	e05a      	b.n	8002222 <ADC_init+0x266>
 800216c:	683b      	ldr	r3, [r7, #0]
 800216e:	789b      	ldrb	r3, [r3, #2]
 8002170:	f003 0307 	and.w	r3, r3, #7
 8002174:	b2d9      	uxtb	r1, r3
 8002176:	687a      	ldr	r2, [r7, #4]
 8002178:	6913      	ldr	r3, [r2, #16]
 800217a:	f361 330e 	bfi	r3, r1, #12, #3
 800217e:	6113      	str	r3, [r2, #16]
 8002180:	e04f      	b.n	8002222 <ADC_init+0x266>
 8002182:	683b      	ldr	r3, [r7, #0]
 8002184:	789b      	ldrb	r3, [r3, #2]
 8002186:	f003 0307 	and.w	r3, r3, #7
 800218a:	b2d9      	uxtb	r1, r3
 800218c:	687a      	ldr	r2, [r7, #4]
 800218e:	6913      	ldr	r3, [r2, #16]
 8002190:	f361 33d1 	bfi	r3, r1, #15, #3
 8002194:	6113      	str	r3, [r2, #16]
 8002196:	e044      	b.n	8002222 <ADC_init+0x266>
 8002198:	683b      	ldr	r3, [r7, #0]
 800219a:	789b      	ldrb	r3, [r3, #2]
 800219c:	f003 0307 	and.w	r3, r3, #7
 80021a0:	b2d9      	uxtb	r1, r3
 80021a2:	687a      	ldr	r2, [r7, #4]
 80021a4:	6913      	ldr	r3, [r2, #16]
 80021a6:	f361 4394 	bfi	r3, r1, #18, #3
 80021aa:	6113      	str	r3, [r2, #16]
 80021ac:	e039      	b.n	8002222 <ADC_init+0x266>
 80021ae:	683b      	ldr	r3, [r7, #0]
 80021b0:	789b      	ldrb	r3, [r3, #2]
 80021b2:	f003 0307 	and.w	r3, r3, #7
 80021b6:	b2d9      	uxtb	r1, r3
 80021b8:	687a      	ldr	r2, [r7, #4]
 80021ba:	6913      	ldr	r3, [r2, #16]
 80021bc:	f361 5357 	bfi	r3, r1, #21, #3
 80021c0:	6113      	str	r3, [r2, #16]
 80021c2:	e02e      	b.n	8002222 <ADC_init+0x266>
 80021c4:	683b      	ldr	r3, [r7, #0]
 80021c6:	789b      	ldrb	r3, [r3, #2]
 80021c8:	f003 0307 	and.w	r3, r3, #7
 80021cc:	b2d9      	uxtb	r1, r3
 80021ce:	687a      	ldr	r2, [r7, #4]
 80021d0:	6913      	ldr	r3, [r2, #16]
 80021d2:	f361 631a 	bfi	r3, r1, #24, #3
 80021d6:	6113      	str	r3, [r2, #16]
 80021d8:	e023      	b.n	8002222 <ADC_init+0x266>
 80021da:	683b      	ldr	r3, [r7, #0]
 80021dc:	789b      	ldrb	r3, [r3, #2]
 80021de:	f003 0307 	and.w	r3, r3, #7
 80021e2:	b2d9      	uxtb	r1, r3
 80021e4:	687a      	ldr	r2, [r7, #4]
 80021e6:	6913      	ldr	r3, [r2, #16]
 80021e8:	f361 63dd 	bfi	r3, r1, #27, #3
 80021ec:	6113      	str	r3, [r2, #16]
 80021ee:	e018      	b.n	8002222 <ADC_init+0x266>
 80021f0:	683b      	ldr	r3, [r7, #0]
 80021f2:	789b      	ldrb	r3, [r3, #2]
 80021f4:	f003 0307 	and.w	r3, r3, #7
 80021f8:	b2d9      	uxtb	r1, r3
 80021fa:	687a      	ldr	r2, [r7, #4]
 80021fc:	68d3      	ldr	r3, [r2, #12]
 80021fe:	f361 330e 	bfi	r3, r1, #12, #3
 8002202:	60d3      	str	r3, [r2, #12]
 8002204:	e00d      	b.n	8002222 <ADC_init+0x266>
 8002206:	683b      	ldr	r3, [r7, #0]
 8002208:	789b      	ldrb	r3, [r3, #2]
 800220a:	f003 0307 	and.w	r3, r3, #7
 800220e:	b2d9      	uxtb	r1, r3
 8002210:	687a      	ldr	r2, [r7, #4]
 8002212:	68d3      	ldr	r3, [r2, #12]
 8002214:	f361 33d1 	bfi	r3, r1, #15, #3
 8002218:	60d3      	str	r3, [r2, #12]
 800221a:	e002      	b.n	8002222 <ADC_init+0x266>
 800221c:	f7ff fdd4 	bl	8001dc8 <ADC_ERROR_HANDLER>
 8002220:	bf00      	nop
 8002222:	683b      	ldr	r3, [r7, #0]
 8002224:	785b      	ldrb	r3, [r3, #1]
 8002226:	2b00      	cmp	r3, #0
 8002228:	d002      	beq.n	8002230 <ADC_init+0x274>
 800222a:	2b01      	cmp	r3, #1
 800222c:	d006      	beq.n	800223c <ADC_init+0x280>
 800222e:	e013      	b.n	8002258 <ADC_init+0x29c>
 8002230:	687a      	ldr	r2, [r7, #4]
 8002232:	6893      	ldr	r3, [r2, #8]
 8002234:	f36f 0341 	bfc	r3, #1, #1
 8002238:	6093      	str	r3, [r2, #8]
 800223a:	e010      	b.n	800225e <ADC_init+0x2a2>
 800223c:	687a      	ldr	r2, [r7, #4]
 800223e:	6893      	ldr	r3, [r2, #8]
 8002240:	f043 0302 	orr.w	r3, r3, #2
 8002244:	6093      	str	r3, [r2, #8]
 8002246:	e00a      	b.n	800225e <ADC_init+0x2a2>
 8002248:	40012400 	.word	0x40012400
 800224c:	20004004 	.word	0x20004004
 8002250:	40021000 	.word	0x40021000
 8002254:	431bde83 	.word	0x431bde83
 8002258:	f7ff fdb6 	bl	8001dc8 <ADC_ERROR_HANDLER>
 800225c:	bf00      	nop
 800225e:	683b      	ldr	r3, [r7, #0]
 8002260:	685b      	ldr	r3, [r3, #4]
 8002262:	781b      	ldrb	r3, [r3, #0]
 8002264:	f003 0301 	and.w	r3, r3, #1
 8002268:	b2db      	uxtb	r3, r3
 800226a:	2b00      	cmp	r3, #0
 800226c:	d022      	beq.n	80022b4 <ADC_init+0x2f8>
 800226e:	687a      	ldr	r2, [r7, #4]
 8002270:	6853      	ldr	r3, [r2, #4]
 8002272:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002276:	6053      	str	r3, [r2, #4]
 8002278:	683b      	ldr	r3, [r7, #0]
 800227a:	781b      	ldrb	r3, [r3, #0]
 800227c:	f003 031f 	and.w	r3, r3, #31
 8002280:	b2d9      	uxtb	r1, r3
 8002282:	687a      	ldr	r2, [r7, #4]
 8002284:	6853      	ldr	r3, [r2, #4]
 8002286:	f361 0304 	bfi	r3, r1, #0, #5
 800228a:	6053      	str	r3, [r2, #4]
 800228c:	683b      	ldr	r3, [r7, #0]
 800228e:	78db      	ldrb	r3, [r3, #3]
 8002290:	2b01      	cmp	r3, #1
 8002292:	d105      	bne.n	80022a0 <ADC_init+0x2e4>
 8002294:	687a      	ldr	r2, [r7, #4]
 8002296:	6853      	ldr	r3, [r2, #4]
 8002298:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800229c:	6053      	str	r3, [r2, #4]
 800229e:	e004      	b.n	80022aa <ADC_init+0x2ee>
 80022a0:	687a      	ldr	r2, [r7, #4]
 80022a2:	6853      	ldr	r3, [r2, #4]
 80022a4:	f36f 1386 	bfc	r3, #6, #1
 80022a8:	6053      	str	r3, [r2, #4]
 80022aa:	687a      	ldr	r2, [r7, #4]
 80022ac:	6853      	ldr	r3, [r2, #4]
 80022ae:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80022b2:	6053      	str	r3, [r2, #4]
 80022b4:	687a      	ldr	r2, [r7, #4]
 80022b6:	6893      	ldr	r3, [r2, #8]
 80022b8:	f443 3360 	orr.w	r3, r3, #229376	; 0x38000
 80022bc:	6093      	str	r3, [r2, #8]
 80022be:	687a      	ldr	r2, [r7, #4]
 80022c0:	6893      	ldr	r3, [r2, #8]
 80022c2:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80022c6:	6093      	str	r3, [r2, #8]
 80022c8:	2300      	movs	r3, #0
 80022ca:	4618      	mov	r0, r3
 80022cc:	3708      	adds	r7, #8
 80022ce:	46bd      	mov	sp, r7
 80022d0:	bd80      	pop	{r7, pc}
 80022d2:	bf00      	nop

080022d4 <ADC_read>:
 80022d4:	b480      	push	{r7}
 80022d6:	b087      	sub	sp, #28
 80022d8:	af00      	add	r7, sp, #0
 80022da:	60f8      	str	r0, [r7, #12]
 80022dc:	460b      	mov	r3, r1
 80022de:	607a      	str	r2, [r7, #4]
 80022e0:	72fb      	strb	r3, [r7, #11]
 80022e2:	2300      	movs	r3, #0
 80022e4:	617b      	str	r3, [r7, #20]
 80022e6:	68fb      	ldr	r3, [r7, #12]
 80022e8:	4a30      	ldr	r2, [pc, #192]	; (80023ac <ADC_read+0xd8>)
 80022ea:	4293      	cmp	r3, r2
 80022ec:	d108      	bne.n	8002300 <ADC_read+0x2c>
 80022ee:	7afa      	ldrb	r2, [r7, #11]
 80022f0:	4613      	mov	r3, r2
 80022f2:	005b      	lsls	r3, r3, #1
 80022f4:	4413      	add	r3, r2
 80022f6:	009b      	lsls	r3, r3, #2
 80022f8:	4a2d      	ldr	r2, [pc, #180]	; (80023b0 <ADC_read+0xdc>)
 80022fa:	4413      	add	r3, r2
 80022fc:	617b      	str	r3, [r7, #20]
 80022fe:	e008      	b.n	8002312 <ADC_read+0x3e>
 8002300:	7afa      	ldrb	r2, [r7, #11]
 8002302:	4613      	mov	r3, r2
 8002304:	005b      	lsls	r3, r3, #1
 8002306:	4413      	add	r3, r2
 8002308:	009b      	lsls	r3, r3, #2
 800230a:	33c0      	adds	r3, #192	; 0xc0
 800230c:	4a28      	ldr	r2, [pc, #160]	; (80023b0 <ADC_read+0xdc>)
 800230e:	4413      	add	r3, r2
 8002310:	617b      	str	r3, [r7, #20]
 8002312:	68fb      	ldr	r3, [r7, #12]
 8002314:	2200      	movs	r2, #0
 8002316:	62da      	str	r2, [r3, #44]	; 0x2c
 8002318:	68fb      	ldr	r3, [r7, #12]
 800231a:	2200      	movs	r2, #0
 800231c:	631a      	str	r2, [r3, #48]	; 0x30
 800231e:	68fb      	ldr	r3, [r7, #12]
 8002320:	2200      	movs	r2, #0
 8002322:	635a      	str	r2, [r3, #52]	; 0x34
 8002324:	697b      	ldr	r3, [r7, #20]
 8002326:	781b      	ldrb	r3, [r3, #0]
 8002328:	f003 031f 	and.w	r3, r3, #31
 800232c:	b2d9      	uxtb	r1, r3
 800232e:	68fa      	ldr	r2, [r7, #12]
 8002330:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8002332:	f361 0304 	bfi	r3, r1, #0, #5
 8002336:	6353      	str	r3, [r2, #52]	; 0x34
 8002338:	697b      	ldr	r3, [r7, #20]
 800233a:	785b      	ldrb	r3, [r3, #1]
 800233c:	2b00      	cmp	r3, #0
 800233e:	d10c      	bne.n	800235a <ADC_read+0x86>
 8002340:	68fa      	ldr	r2, [r7, #12]
 8002342:	6893      	ldr	r3, [r2, #8]
 8002344:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8002348:	6093      	str	r3, [r2, #8]
 800234a:	bf00      	nop
 800234c:	68fb      	ldr	r3, [r7, #12]
 800234e:	681b      	ldr	r3, [r3, #0]
 8002350:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8002354:	b2db      	uxtb	r3, r3
 8002356:	2b00      	cmp	r3, #0
 8002358:	d0f8      	beq.n	800234c <ADC_read+0x78>
 800235a:	697b      	ldr	r3, [r7, #20]
 800235c:	78db      	ldrb	r3, [r3, #3]
 800235e:	2b00      	cmp	r3, #0
 8002360:	d008      	beq.n	8002374 <ADC_read+0xa0>
 8002362:	68fb      	ldr	r3, [r7, #12]
 8002364:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002366:	b29a      	uxth	r2, r3
 8002368:	687b      	ldr	r3, [r7, #4]
 800236a:	801a      	strh	r2, [r3, #0]
 800236c:	687b      	ldr	r3, [r7, #4]
 800236e:	3302      	adds	r3, #2
 8002370:	607b      	str	r3, [r7, #4]
 8002372:	e016      	b.n	80023a2 <ADC_read+0xce>
 8002374:	2300      	movs	r3, #0
 8002376:	74fb      	strb	r3, [r7, #19]
 8002378:	e00a      	b.n	8002390 <ADC_read+0xbc>
 800237a:	68fb      	ldr	r3, [r7, #12]
 800237c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800237e:	b29a      	uxth	r2, r3
 8002380:	687b      	ldr	r3, [r7, #4]
 8002382:	801a      	strh	r2, [r3, #0]
 8002384:	687b      	ldr	r3, [r7, #4]
 8002386:	3302      	adds	r3, #2
 8002388:	607b      	str	r3, [r7, #4]
 800238a:	7cfb      	ldrb	r3, [r7, #19]
 800238c:	3301      	adds	r3, #1
 800238e:	74fb      	strb	r3, [r7, #19]
 8002390:	68fb      	ldr	r3, [r7, #12]
 8002392:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002394:	f3c3 5303 	ubfx	r3, r3, #20, #4
 8002398:	b2db      	uxtb	r3, r3
 800239a:	461a      	mov	r2, r3
 800239c:	7cfb      	ldrb	r3, [r7, #19]
 800239e:	4293      	cmp	r3, r2
 80023a0:	d9eb      	bls.n	800237a <ADC_read+0xa6>
 80023a2:	bf00      	nop
 80023a4:	371c      	adds	r7, #28
 80023a6:	46bd      	mov	sp, r7
 80023a8:	bc80      	pop	{r7}
 80023aa:	4770      	bx	lr
 80023ac:	40012400 	.word	0x40012400
 80023b0:	20004004 	.word	0x20004004

080023b4 <ADC1_2_IRQHandler>:
 80023b4:	b580      	push	{r7, lr}
 80023b6:	af00      	add	r7, sp, #0
 80023b8:	4b13      	ldr	r3, [pc, #76]	; (8002408 <ADC1_2_IRQHandler+0x54>)
 80023ba:	681b      	ldr	r3, [r3, #0]
 80023bc:	f3c3 0340 	ubfx	r3, r3, #1, #1
 80023c0:	b2db      	uxtb	r3, r3
 80023c2:	2b01      	cmp	r3, #1
 80023c4:	d10f      	bne.n	80023e6 <ADC1_2_IRQHandler+0x32>
 80023c6:	4b10      	ldr	r3, [pc, #64]	; (8002408 <ADC1_2_IRQHandler+0x54>)
 80023c8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80023ca:	f3c3 0304 	ubfx	r3, r3, #0, #5
 80023ce:	b2db      	uxtb	r3, r3
 80023d0:	4619      	mov	r1, r3
 80023d2:	4a0e      	ldr	r2, [pc, #56]	; (800240c <ADC1_2_IRQHandler+0x58>)
 80023d4:	460b      	mov	r3, r1
 80023d6:	005b      	lsls	r3, r3, #1
 80023d8:	440b      	add	r3, r1
 80023da:	009b      	lsls	r3, r3, #2
 80023dc:	4413      	add	r3, r2
 80023de:	3308      	adds	r3, #8
 80023e0:	681b      	ldr	r3, [r3, #0]
 80023e2:	4798      	blx	r3
 80023e4:	e00e      	b.n	8002404 <ADC1_2_IRQHandler+0x50>
 80023e6:	4b0a      	ldr	r3, [pc, #40]	; (8002410 <ADC1_2_IRQHandler+0x5c>)
 80023e8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80023ea:	f3c3 0304 	ubfx	r3, r3, #0, #5
 80023ee:	b2db      	uxtb	r3, r3
 80023f0:	4619      	mov	r1, r3
 80023f2:	4a06      	ldr	r2, [pc, #24]	; (800240c <ADC1_2_IRQHandler+0x58>)
 80023f4:	460b      	mov	r3, r1
 80023f6:	005b      	lsls	r3, r3, #1
 80023f8:	440b      	add	r3, r1
 80023fa:	009b      	lsls	r3, r3, #2
 80023fc:	4413      	add	r3, r2
 80023fe:	33c8      	adds	r3, #200	; 0xc8
 8002400:	681b      	ldr	r3, [r3, #0]
 8002402:	4798      	blx	r3
 8002404:	bf00      	nop
 8002406:	bd80      	pop	{r7, pc}
 8002408:	40012400 	.word	0x40012400
 800240c:	20004004 	.word	0x20004004
 8002410:	40012800 	.word	0x40012800

08002414 <ERROR_HANDLER>:
 8002414:	b480      	push	{r7}
 8002416:	af00      	add	r7, sp, #0
 8002418:	e7fe      	b.n	8002418 <ERROR_HANDLER+0x4>
	...

0800241c <MCAL_CAN_SET_GPIO>:
 800241c:	b580      	push	{r7, lr}
 800241e:	b082      	sub	sp, #8
 8002420:	af00      	add	r7, sp, #0
 8002422:	4b0a      	ldr	r3, [pc, #40]	; (800244c <MCAL_CAN_SET_GPIO+0x30>)
 8002424:	681b      	ldr	r3, [r3, #0]
 8002426:	607b      	str	r3, [r7, #4]
 8002428:	1d3b      	adds	r3, r7, #4
 800242a:	4619      	mov	r1, r3
 800242c:	4808      	ldr	r0, [pc, #32]	; (8002450 <MCAL_CAN_SET_GPIO+0x34>)
 800242e:	f000 fc8d 	bl	8002d4c <MCAL_GPIO_init>
 8002432:	4b08      	ldr	r3, [pc, #32]	; (8002454 <MCAL_CAN_SET_GPIO+0x38>)
 8002434:	681b      	ldr	r3, [r3, #0]
 8002436:	607b      	str	r3, [r7, #4]
 8002438:	1d3b      	adds	r3, r7, #4
 800243a:	4619      	mov	r1, r3
 800243c:	4804      	ldr	r0, [pc, #16]	; (8002450 <MCAL_CAN_SET_GPIO+0x34>)
 800243e:	f000 fc85 	bl	8002d4c <MCAL_GPIO_init>
 8002442:	bf00      	nop
 8002444:	3708      	adds	r7, #8
 8002446:	46bd      	mov	sp, r7
 8002448:	bd80      	pop	{r7, pc}
 800244a:	bf00      	nop
 800244c:	080056f8 	.word	0x080056f8
 8002450:	40010800 	.word	0x40010800
 8002454:	080056fc 	.word	0x080056fc

08002458 <MCAL_CAN_init>:
 8002458:	b580      	push	{r7, lr}
 800245a:	b082      	sub	sp, #8
 800245c:	af00      	add	r7, sp, #0
 800245e:	6078      	str	r0, [r7, #4]
 8002460:	4b84      	ldr	r3, [pc, #528]	; (8002674 <MCAL_CAN_init+0x21c>)
 8002462:	687a      	ldr	r2, [r7, #4]
 8002464:	ca07      	ldmia	r2, {r0, r1, r2}
 8002466:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800246a:	4b83      	ldr	r3, [pc, #524]	; (8002678 <MCAL_CAN_init+0x220>)
 800246c:	69db      	ldr	r3, [r3, #28]
 800246e:	4a82      	ldr	r2, [pc, #520]	; (8002678 <MCAL_CAN_init+0x220>)
 8002470:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8002474:	61d3      	str	r3, [r2, #28]
 8002476:	f7ff ffd1 	bl	800241c <MCAL_CAN_SET_GPIO>
 800247a:	4b80      	ldr	r3, [pc, #512]	; (800267c <MCAL_CAN_init+0x224>)
 800247c:	685b      	ldr	r3, [r3, #4]
 800247e:	f3c3 0300 	ubfx	r3, r3, #0, #1
 8002482:	b2db      	uxtb	r3, r3
 8002484:	2b00      	cmp	r3, #0
 8002486:	d11f      	bne.n	80024c8 <MCAL_CAN_init+0x70>
 8002488:	4b7c      	ldr	r3, [pc, #496]	; (800267c <MCAL_CAN_init+0x224>)
 800248a:	685b      	ldr	r3, [r3, #4]
 800248c:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8002490:	b2db      	uxtb	r3, r3
 8002492:	2b01      	cmp	r3, #1
 8002494:	d118      	bne.n	80024c8 <MCAL_CAN_init+0x70>
 8002496:	4a79      	ldr	r2, [pc, #484]	; (800267c <MCAL_CAN_init+0x224>)
 8002498:	6813      	ldr	r3, [r2, #0]
 800249a:	f36f 0341 	bfc	r3, #1, #1
 800249e:	6013      	str	r3, [r2, #0]
 80024a0:	4a76      	ldr	r2, [pc, #472]	; (800267c <MCAL_CAN_init+0x224>)
 80024a2:	6813      	ldr	r3, [r2, #0]
 80024a4:	f043 0301 	orr.w	r3, r3, #1
 80024a8:	6013      	str	r3, [r2, #0]
 80024aa:	bf00      	nop
 80024ac:	4b73      	ldr	r3, [pc, #460]	; (800267c <MCAL_CAN_init+0x224>)
 80024ae:	685b      	ldr	r3, [r3, #4]
 80024b0:	f3c3 0300 	ubfx	r3, r3, #0, #1
 80024b4:	b2db      	uxtb	r3, r3
 80024b6:	2b01      	cmp	r3, #1
 80024b8:	d1f8      	bne.n	80024ac <MCAL_CAN_init+0x54>
 80024ba:	4b70      	ldr	r3, [pc, #448]	; (800267c <MCAL_CAN_init+0x224>)
 80024bc:	685b      	ldr	r3, [r3, #4]
 80024be:	f3c3 0340 	ubfx	r3, r3, #1, #1
 80024c2:	b2db      	uxtb	r3, r3
 80024c4:	2b00      	cmp	r3, #0
 80024c6:	d1f1      	bne.n	80024ac <MCAL_CAN_init+0x54>
 80024c8:	687b      	ldr	r3, [r7, #4]
 80024ca:	781b      	ldrb	r3, [r3, #0]
 80024cc:	2b00      	cmp	r3, #0
 80024ce:	d005      	beq.n	80024dc <MCAL_CAN_init+0x84>
 80024d0:	4a6a      	ldr	r2, [pc, #424]	; (800267c <MCAL_CAN_init+0x224>)
 80024d2:	6813      	ldr	r3, [r2, #0]
 80024d4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80024d8:	6013      	str	r3, [r2, #0]
 80024da:	e004      	b.n	80024e6 <MCAL_CAN_init+0x8e>
 80024dc:	4a67      	ldr	r2, [pc, #412]	; (800267c <MCAL_CAN_init+0x224>)
 80024de:	6813      	ldr	r3, [r2, #0]
 80024e0:	f36f 1386 	bfc	r3, #6, #1
 80024e4:	6013      	str	r3, [r2, #0]
 80024e6:	687b      	ldr	r3, [r7, #4]
 80024e8:	785b      	ldrb	r3, [r3, #1]
 80024ea:	2b00      	cmp	r3, #0
 80024ec:	d005      	beq.n	80024fa <MCAL_CAN_init+0xa2>
 80024ee:	4a63      	ldr	r2, [pc, #396]	; (800267c <MCAL_CAN_init+0x224>)
 80024f0:	6813      	ldr	r3, [r2, #0]
 80024f2:	f043 0310 	orr.w	r3, r3, #16
 80024f6:	6013      	str	r3, [r2, #0]
 80024f8:	e004      	b.n	8002504 <MCAL_CAN_init+0xac>
 80024fa:	4a60      	ldr	r2, [pc, #384]	; (800267c <MCAL_CAN_init+0x224>)
 80024fc:	6813      	ldr	r3, [r2, #0]
 80024fe:	f36f 1304 	bfc	r3, #4, #1
 8002502:	6013      	str	r3, [r2, #0]
 8002504:	4a5d      	ldr	r2, [pc, #372]	; (800267c <MCAL_CAN_init+0x224>)
 8002506:	6813      	ldr	r3, [r2, #0]
 8002508:	f36f 0382 	bfc	r3, #2, #1
 800250c:	6013      	str	r3, [r2, #0]
 800250e:	687b      	ldr	r3, [r7, #4]
 8002510:	789b      	ldrb	r3, [r3, #2]
 8002512:	2b00      	cmp	r3, #0
 8002514:	d005      	beq.n	8002522 <MCAL_CAN_init+0xca>
 8002516:	4a59      	ldr	r2, [pc, #356]	; (800267c <MCAL_CAN_init+0x224>)
 8002518:	6813      	ldr	r3, [r2, #0]
 800251a:	f043 0308 	orr.w	r3, r3, #8
 800251e:	6013      	str	r3, [r2, #0]
 8002520:	e004      	b.n	800252c <MCAL_CAN_init+0xd4>
 8002522:	4a56      	ldr	r2, [pc, #344]	; (800267c <MCAL_CAN_init+0x224>)
 8002524:	6813      	ldr	r3, [r2, #0]
 8002526:	f36f 03c3 	bfc	r3, #3, #1
 800252a:	6013      	str	r3, [r2, #0]
 800252c:	f001 f9e8 	bl	8003900 <MCAL_GET_PCLCK1>
 8002530:	4603      	mov	r3, r0
 8002532:	4a53      	ldr	r2, [pc, #332]	; (8002680 <MCAL_CAN_init+0x228>)
 8002534:	4293      	cmp	r3, r2
 8002536:	d003      	beq.n	8002540 <MCAL_CAN_init+0xe8>
 8002538:	4a52      	ldr	r2, [pc, #328]	; (8002684 <MCAL_CAN_init+0x22c>)
 800253a:	4293      	cmp	r3, r2
 800253c:	d023      	beq.n	8002586 <MCAL_CAN_init+0x12e>
 800253e:	e045      	b.n	80025cc <MCAL_CAN_init+0x174>
 8002540:	687b      	ldr	r3, [r7, #4]
 8002542:	78db      	ldrb	r3, [r3, #3]
 8002544:	2b03      	cmp	r3, #3
 8002546:	d83e      	bhi.n	80025c6 <MCAL_CAN_init+0x16e>
 8002548:	a201      	add	r2, pc, #4	; (adr r2, 8002550 <MCAL_CAN_init+0xf8>)
 800254a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800254e:	bf00      	nop
 8002550:	08002561 	.word	0x08002561
 8002554:	0800256b 	.word	0x0800256b
 8002558:	08002575 	.word	0x08002575
 800255c:	0800257d 	.word	0x0800257d
 8002560:	4b46      	ldr	r3, [pc, #280]	; (800267c <MCAL_CAN_init+0x224>)
 8002562:	f44f 22a0 	mov.w	r2, #327680	; 0x50000
 8002566:	61da      	str	r2, [r3, #28]
 8002568:	e00c      	b.n	8002584 <MCAL_CAN_init+0x12c>
 800256a:	4b44      	ldr	r3, [pc, #272]	; (800267c <MCAL_CAN_init+0x224>)
 800256c:	f44f 12e0 	mov.w	r2, #1835008	; 0x1c0000
 8002570:	61da      	str	r2, [r3, #28]
 8002572:	e007      	b.n	8002584 <MCAL_CAN_init+0x12c>
 8002574:	4b41      	ldr	r3, [pc, #260]	; (800267c <MCAL_CAN_init+0x224>)
 8002576:	4a44      	ldr	r2, [pc, #272]	; (8002688 <MCAL_CAN_init+0x230>)
 8002578:	61da      	str	r2, [r3, #28]
 800257a:	e003      	b.n	8002584 <MCAL_CAN_init+0x12c>
 800257c:	4b3f      	ldr	r3, [pc, #252]	; (800267c <MCAL_CAN_init+0x224>)
 800257e:	4a43      	ldr	r2, [pc, #268]	; (800268c <MCAL_CAN_init+0x234>)
 8002580:	61da      	str	r2, [r3, #28]
 8002582:	bf00      	nop
 8002584:	e01f      	b.n	80025c6 <MCAL_CAN_init+0x16e>
 8002586:	687b      	ldr	r3, [r7, #4]
 8002588:	78db      	ldrb	r3, [r3, #3]
 800258a:	2b03      	cmp	r3, #3
 800258c:	d81d      	bhi.n	80025ca <MCAL_CAN_init+0x172>
 800258e:	a201      	add	r2, pc, #4	; (adr r2, 8002594 <MCAL_CAN_init+0x13c>)
 8002590:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002594:	080025a5 	.word	0x080025a5
 8002598:	080025ad 	.word	0x080025ad
 800259c:	080025b5 	.word	0x080025b5
 80025a0:	080025bd 	.word	0x080025bd
 80025a4:	4b35      	ldr	r3, [pc, #212]	; (800267c <MCAL_CAN_init+0x224>)
 80025a6:	4a3a      	ldr	r2, [pc, #232]	; (8002690 <MCAL_CAN_init+0x238>)
 80025a8:	61da      	str	r2, [r3, #28]
 80025aa:	e00b      	b.n	80025c4 <MCAL_CAN_init+0x16c>
 80025ac:	4b33      	ldr	r3, [pc, #204]	; (800267c <MCAL_CAN_init+0x224>)
 80025ae:	4a39      	ldr	r2, [pc, #228]	; (8002694 <MCAL_CAN_init+0x23c>)
 80025b0:	61da      	str	r2, [r3, #28]
 80025b2:	e007      	b.n	80025c4 <MCAL_CAN_init+0x16c>
 80025b4:	4b31      	ldr	r3, [pc, #196]	; (800267c <MCAL_CAN_init+0x224>)
 80025b6:	4a38      	ldr	r2, [pc, #224]	; (8002698 <MCAL_CAN_init+0x240>)
 80025b8:	61da      	str	r2, [r3, #28]
 80025ba:	e003      	b.n	80025c4 <MCAL_CAN_init+0x16c>
 80025bc:	4b2f      	ldr	r3, [pc, #188]	; (800267c <MCAL_CAN_init+0x224>)
 80025be:	4a37      	ldr	r2, [pc, #220]	; (800269c <MCAL_CAN_init+0x244>)
 80025c0:	61da      	str	r2, [r3, #28]
 80025c2:	bf00      	nop
 80025c4:	e001      	b.n	80025ca <MCAL_CAN_init+0x172>
 80025c6:	bf00      	nop
 80025c8:	e000      	b.n	80025cc <MCAL_CAN_init+0x174>
 80025ca:	bf00      	nop
 80025cc:	687b      	ldr	r3, [r7, #4]
 80025ce:	791b      	ldrb	r3, [r3, #4]
 80025d0:	2b03      	cmp	r3, #3
 80025d2:	d837      	bhi.n	8002644 <MCAL_CAN_init+0x1ec>
 80025d4:	a201      	add	r2, pc, #4	; (adr r2, 80025dc <MCAL_CAN_init+0x184>)
 80025d6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80025da:	bf00      	nop
 80025dc:	080025ed 	.word	0x080025ed
 80025e0:	08002603 	.word	0x08002603
 80025e4:	08002619 	.word	0x08002619
 80025e8:	0800262f 	.word	0x0800262f
 80025ec:	4a23      	ldr	r2, [pc, #140]	; (800267c <MCAL_CAN_init+0x224>)
 80025ee:	69d3      	ldr	r3, [r2, #28]
 80025f0:	f36f 73df 	bfc	r3, #31, #1
 80025f4:	61d3      	str	r3, [r2, #28]
 80025f6:	4a21      	ldr	r2, [pc, #132]	; (800267c <MCAL_CAN_init+0x224>)
 80025f8:	69d3      	ldr	r3, [r2, #28]
 80025fa:	f36f 739e 	bfc	r3, #30, #1
 80025fe:	61d3      	str	r3, [r2, #28]
 8002600:	e023      	b.n	800264a <MCAL_CAN_init+0x1f2>
 8002602:	4a1e      	ldr	r2, [pc, #120]	; (800267c <MCAL_CAN_init+0x224>)
 8002604:	69d3      	ldr	r3, [r2, #28]
 8002606:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 800260a:	61d3      	str	r3, [r2, #28]
 800260c:	4a1b      	ldr	r2, [pc, #108]	; (800267c <MCAL_CAN_init+0x224>)
 800260e:	69d3      	ldr	r3, [r2, #28]
 8002610:	f36f 739e 	bfc	r3, #30, #1
 8002614:	61d3      	str	r3, [r2, #28]
 8002616:	e018      	b.n	800264a <MCAL_CAN_init+0x1f2>
 8002618:	4a18      	ldr	r2, [pc, #96]	; (800267c <MCAL_CAN_init+0x224>)
 800261a:	69d3      	ldr	r3, [r2, #28]
 800261c:	f36f 73df 	bfc	r3, #31, #1
 8002620:	61d3      	str	r3, [r2, #28]
 8002622:	4a16      	ldr	r2, [pc, #88]	; (800267c <MCAL_CAN_init+0x224>)
 8002624:	69d3      	ldr	r3, [r2, #28]
 8002626:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800262a:	61d3      	str	r3, [r2, #28]
 800262c:	e00d      	b.n	800264a <MCAL_CAN_init+0x1f2>
 800262e:	4a13      	ldr	r2, [pc, #76]	; (800267c <MCAL_CAN_init+0x224>)
 8002630:	69d3      	ldr	r3, [r2, #28]
 8002632:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8002636:	61d3      	str	r3, [r2, #28]
 8002638:	4a10      	ldr	r2, [pc, #64]	; (800267c <MCAL_CAN_init+0x224>)
 800263a:	69d3      	ldr	r3, [r2, #28]
 800263c:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8002640:	61d3      	str	r3, [r2, #28]
 8002642:	e002      	b.n	800264a <MCAL_CAN_init+0x1f2>
 8002644:	f7ff fee6 	bl	8002414 <ERROR_HANDLER>
 8002648:	bf00      	nop
 800264a:	687b      	ldr	r3, [r7, #4]
 800264c:	795b      	ldrb	r3, [r3, #5]
 800264e:	2b00      	cmp	r3, #0
 8002650:	d028      	beq.n	80026a4 <MCAL_CAN_init+0x24c>
 8002652:	4a0a      	ldr	r2, [pc, #40]	; (800267c <MCAL_CAN_init+0x224>)
 8002654:	6953      	ldr	r3, [r2, #20]
 8002656:	f043 0302 	orr.w	r3, r3, #2
 800265a:	6153      	str	r3, [r2, #20]
 800265c:	4a07      	ldr	r2, [pc, #28]	; (800267c <MCAL_CAN_init+0x224>)
 800265e:	6953      	ldr	r3, [r2, #20]
 8002660:	f043 0310 	orr.w	r3, r3, #16
 8002664:	6153      	str	r3, [r2, #20]
 8002666:	4b0e      	ldr	r3, [pc, #56]	; (80026a0 <MCAL_CAN_init+0x248>)
 8002668:	681b      	ldr	r3, [r3, #0]
 800266a:	4a0d      	ldr	r2, [pc, #52]	; (80026a0 <MCAL_CAN_init+0x248>)
 800266c:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8002670:	6013      	str	r3, [r2, #0]
 8002672:	e027      	b.n	80026c4 <MCAL_CAN_init+0x26c>
 8002674:	20004184 	.word	0x20004184
 8002678:	40021000 	.word	0x40021000
 800267c:	40006400 	.word	0x40006400
 8002680:	007a1200 	.word	0x007a1200
 8002684:	016e3600 	.word	0x016e3600
 8002688:	001c0001 	.word	0x001c0001
 800268c:	001c0004 	.word	0x001c0004
 8002690:	00090001 	.word	0x00090001
 8002694:	001c0002 	.word	0x001c0002
 8002698:	001c0005 	.word	0x001c0005
 800269c:	001c000e 	.word	0x001c000e
 80026a0:	e000e100 	.word	0xe000e100
 80026a4:	4a22      	ldr	r2, [pc, #136]	; (8002730 <MCAL_CAN_init+0x2d8>)
 80026a6:	6953      	ldr	r3, [r2, #20]
 80026a8:	f36f 0341 	bfc	r3, #1, #1
 80026ac:	6153      	str	r3, [r2, #20]
 80026ae:	4a20      	ldr	r2, [pc, #128]	; (8002730 <MCAL_CAN_init+0x2d8>)
 80026b0:	6953      	ldr	r3, [r2, #20]
 80026b2:	f36f 1304 	bfc	r3, #4, #1
 80026b6:	6153      	str	r3, [r2, #20]
 80026b8:	4b1e      	ldr	r3, [pc, #120]	; (8002734 <MCAL_CAN_init+0x2dc>)
 80026ba:	681b      	ldr	r3, [r3, #0]
 80026bc:	4a1d      	ldr	r2, [pc, #116]	; (8002734 <MCAL_CAN_init+0x2dc>)
 80026be:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 80026c2:	6013      	str	r3, [r2, #0]
 80026c4:	4a1a      	ldr	r2, [pc, #104]	; (8002730 <MCAL_CAN_init+0x2d8>)
 80026c6:	6953      	ldr	r3, [r2, #20]
 80026c8:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80026cc:	6153      	str	r3, [r2, #20]
 80026ce:	4a18      	ldr	r2, [pc, #96]	; (8002730 <MCAL_CAN_init+0x2d8>)
 80026d0:	6953      	ldr	r3, [r2, #20]
 80026d2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80026d6:	6153      	str	r3, [r2, #20]
 80026d8:	4b17      	ldr	r3, [pc, #92]	; (8002738 <MCAL_CAN_init+0x2e0>)
 80026da:	681b      	ldr	r3, [r3, #0]
 80026dc:	4a16      	ldr	r2, [pc, #88]	; (8002738 <MCAL_CAN_init+0x2e0>)
 80026de:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80026e2:	6013      	str	r3, [r2, #0]
 80026e4:	4b12      	ldr	r3, [pc, #72]	; (8002730 <MCAL_CAN_init+0x2d8>)
 80026e6:	685b      	ldr	r3, [r3, #4]
 80026e8:	f3c3 0300 	ubfx	r3, r3, #0, #1
 80026ec:	b2db      	uxtb	r3, r3
 80026ee:	2b01      	cmp	r3, #1
 80026f0:	d118      	bne.n	8002724 <MCAL_CAN_init+0x2cc>
 80026f2:	4b0f      	ldr	r3, [pc, #60]	; (8002730 <MCAL_CAN_init+0x2d8>)
 80026f4:	685b      	ldr	r3, [r3, #4]
 80026f6:	f3c3 0340 	ubfx	r3, r3, #1, #1
 80026fa:	b2db      	uxtb	r3, r3
 80026fc:	2b00      	cmp	r3, #0
 80026fe:	d111      	bne.n	8002724 <MCAL_CAN_init+0x2cc>
 8002700:	4a0b      	ldr	r2, [pc, #44]	; (8002730 <MCAL_CAN_init+0x2d8>)
 8002702:	6813      	ldr	r3, [r2, #0]
 8002704:	f36f 0341 	bfc	r3, #1, #1
 8002708:	6013      	str	r3, [r2, #0]
 800270a:	4a09      	ldr	r2, [pc, #36]	; (8002730 <MCAL_CAN_init+0x2d8>)
 800270c:	6813      	ldr	r3, [r2, #0]
 800270e:	f36f 0300 	bfc	r3, #0, #1
 8002712:	6013      	str	r3, [r2, #0]
 8002714:	bf00      	nop
 8002716:	4b06      	ldr	r3, [pc, #24]	; (8002730 <MCAL_CAN_init+0x2d8>)
 8002718:	685b      	ldr	r3, [r3, #4]
 800271a:	f3c3 0300 	ubfx	r3, r3, #0, #1
 800271e:	b2db      	uxtb	r3, r3
 8002720:	2b01      	cmp	r3, #1
 8002722:	d0f8      	beq.n	8002716 <MCAL_CAN_init+0x2be>
 8002724:	2300      	movs	r3, #0
 8002726:	4618      	mov	r0, r3
 8002728:	3708      	adds	r7, #8
 800272a:	46bd      	mov	sp, r7
 800272c:	bd80      	pop	{r7, pc}
 800272e:	bf00      	nop
 8002730:	40006400 	.word	0x40006400
 8002734:	e000e180 	.word	0xe000e180
 8002738:	e000e100 	.word	0xe000e100

0800273c <MCAL_CAN_RESET>:
 800273c:	b480      	push	{r7}
 800273e:	af00      	add	r7, sp, #0
 8002740:	4b07      	ldr	r3, [pc, #28]	; (8002760 <MCAL_CAN_RESET+0x24>)
 8002742:	691b      	ldr	r3, [r3, #16]
 8002744:	4a06      	ldr	r2, [pc, #24]	; (8002760 <MCAL_CAN_RESET+0x24>)
 8002746:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800274a:	6113      	str	r3, [r2, #16]
 800274c:	4b04      	ldr	r3, [pc, #16]	; (8002760 <MCAL_CAN_RESET+0x24>)
 800274e:	691b      	ldr	r3, [r3, #16]
 8002750:	4a03      	ldr	r2, [pc, #12]	; (8002760 <MCAL_CAN_RESET+0x24>)
 8002752:	f023 7300 	bic.w	r3, r3, #33554432	; 0x2000000
 8002756:	6113      	str	r3, [r2, #16]
 8002758:	bf00      	nop
 800275a:	46bd      	mov	sp, r7
 800275c:	bc80      	pop	{r7}
 800275e:	4770      	bx	lr
 8002760:	40021000 	.word	0x40021000

08002764 <USB_LP_CAN_RX0_IRQHandler>:
 8002764:	b580      	push	{r7, lr}
 8002766:	af00      	add	r7, sp, #0
 8002768:	4b02      	ldr	r3, [pc, #8]	; (8002774 <USB_LP_CAN_RX0_IRQHandler+0x10>)
 800276a:	689b      	ldr	r3, [r3, #8]
 800276c:	4798      	blx	r3
 800276e:	bf00      	nop
 8002770:	bd80      	pop	{r7, pc}
 8002772:	bf00      	nop
 8002774:	20004184 	.word	0x20004184

08002778 <CAN_RX1_IRQHandler>:
 8002778:	b580      	push	{r7, lr}
 800277a:	af00      	add	r7, sp, #0
 800277c:	4b02      	ldr	r3, [pc, #8]	; (8002788 <CAN_RX1_IRQHandler+0x10>)
 800277e:	689b      	ldr	r3, [r3, #8]
 8002780:	4798      	blx	r3
 8002782:	bf00      	nop
 8002784:	bd80      	pop	{r7, pc}
 8002786:	bf00      	nop
 8002788:	20004184 	.word	0x20004184

0800278c <CAN_SCE_IRQHandler>:
 800278c:	b580      	push	{r7, lr}
 800278e:	af00      	add	r7, sp, #0
 8002790:	f7ff ffd4 	bl	800273c <MCAL_CAN_RESET>
 8002794:	4802      	ldr	r0, [pc, #8]	; (80027a0 <CAN_SCE_IRQHandler+0x14>)
 8002796:	f7ff fe5f 	bl	8002458 <MCAL_CAN_init>
 800279a:	bf00      	nop
 800279c:	bd80      	pop	{r7, pc}
 800279e:	bf00      	nop
 80027a0:	20004184 	.word	0x20004184

080027a4 <NVIC_ENABLE>:
 80027a4:	b480      	push	{r7}
 80027a6:	b083      	sub	sp, #12
 80027a8:	af00      	add	r7, sp, #0
 80027aa:	4603      	mov	r3, r0
 80027ac:	71fb      	strb	r3, [r7, #7]
 80027ae:	79fb      	ldrb	r3, [r7, #7]
 80027b0:	2b0f      	cmp	r3, #15
 80027b2:	d854      	bhi.n	800285e <NVIC_ENABLE+0xba>
 80027b4:	a201      	add	r2, pc, #4	; (adr r2, 80027bc <NVIC_ENABLE+0x18>)
 80027b6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80027ba:	bf00      	nop
 80027bc:	080027fd 	.word	0x080027fd
 80027c0:	0800280b 	.word	0x0800280b
 80027c4:	08002819 	.word	0x08002819
 80027c8:	08002827 	.word	0x08002827
 80027cc:	08002835 	.word	0x08002835
 80027d0:	08002843 	.word	0x08002843
 80027d4:	08002843 	.word	0x08002843
 80027d8:	08002843 	.word	0x08002843
 80027dc:	08002843 	.word	0x08002843
 80027e0:	08002843 	.word	0x08002843
 80027e4:	08002851 	.word	0x08002851
 80027e8:	08002851 	.word	0x08002851
 80027ec:	08002851 	.word	0x08002851
 80027f0:	08002851 	.word	0x08002851
 80027f4:	08002851 	.word	0x08002851
 80027f8:	08002851 	.word	0x08002851
 80027fc:	4b1a      	ldr	r3, [pc, #104]	; (8002868 <NVIC_ENABLE+0xc4>)
 80027fe:	681b      	ldr	r3, [r3, #0]
 8002800:	4a19      	ldr	r2, [pc, #100]	; (8002868 <NVIC_ENABLE+0xc4>)
 8002802:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002806:	6013      	str	r3, [r2, #0]
 8002808:	e029      	b.n	800285e <NVIC_ENABLE+0xba>
 800280a:	4b17      	ldr	r3, [pc, #92]	; (8002868 <NVIC_ENABLE+0xc4>)
 800280c:	681b      	ldr	r3, [r3, #0]
 800280e:	4a16      	ldr	r2, [pc, #88]	; (8002868 <NVIC_ENABLE+0xc4>)
 8002810:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002814:	6013      	str	r3, [r2, #0]
 8002816:	e022      	b.n	800285e <NVIC_ENABLE+0xba>
 8002818:	4b13      	ldr	r3, [pc, #76]	; (8002868 <NVIC_ENABLE+0xc4>)
 800281a:	681b      	ldr	r3, [r3, #0]
 800281c:	4a12      	ldr	r2, [pc, #72]	; (8002868 <NVIC_ENABLE+0xc4>)
 800281e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002822:	6013      	str	r3, [r2, #0]
 8002824:	e01b      	b.n	800285e <NVIC_ENABLE+0xba>
 8002826:	4b10      	ldr	r3, [pc, #64]	; (8002868 <NVIC_ENABLE+0xc4>)
 8002828:	681b      	ldr	r3, [r3, #0]
 800282a:	4a0f      	ldr	r2, [pc, #60]	; (8002868 <NVIC_ENABLE+0xc4>)
 800282c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002830:	6013      	str	r3, [r2, #0]
 8002832:	e014      	b.n	800285e <NVIC_ENABLE+0xba>
 8002834:	4b0c      	ldr	r3, [pc, #48]	; (8002868 <NVIC_ENABLE+0xc4>)
 8002836:	681b      	ldr	r3, [r3, #0]
 8002838:	4a0b      	ldr	r2, [pc, #44]	; (8002868 <NVIC_ENABLE+0xc4>)
 800283a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800283e:	6013      	str	r3, [r2, #0]
 8002840:	e00d      	b.n	800285e <NVIC_ENABLE+0xba>
 8002842:	4b09      	ldr	r3, [pc, #36]	; (8002868 <NVIC_ENABLE+0xc4>)
 8002844:	681b      	ldr	r3, [r3, #0]
 8002846:	4a08      	ldr	r2, [pc, #32]	; (8002868 <NVIC_ENABLE+0xc4>)
 8002848:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800284c:	6013      	str	r3, [r2, #0]
 800284e:	e006      	b.n	800285e <NVIC_ENABLE+0xba>
 8002850:	4b06      	ldr	r3, [pc, #24]	; (800286c <NVIC_ENABLE+0xc8>)
 8002852:	681b      	ldr	r3, [r3, #0]
 8002854:	4a05      	ldr	r2, [pc, #20]	; (800286c <NVIC_ENABLE+0xc8>)
 8002856:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800285a:	6013      	str	r3, [r2, #0]
 800285c:	bf00      	nop
 800285e:	bf00      	nop
 8002860:	370c      	adds	r7, #12
 8002862:	46bd      	mov	sp, r7
 8002864:	bc80      	pop	{r7}
 8002866:	4770      	bx	lr
 8002868:	e000e100 	.word	0xe000e100
 800286c:	e000e104 	.word	0xe000e104

08002870 <NVIC_DISABLE>:
 8002870:	b480      	push	{r7}
 8002872:	b083      	sub	sp, #12
 8002874:	af00      	add	r7, sp, #0
 8002876:	4603      	mov	r3, r0
 8002878:	71fb      	strb	r3, [r7, #7]
 800287a:	79fb      	ldrb	r3, [r7, #7]
 800287c:	2b0f      	cmp	r3, #15
 800287e:	d854      	bhi.n	800292a <NVIC_DISABLE+0xba>
 8002880:	a201      	add	r2, pc, #4	; (adr r2, 8002888 <NVIC_DISABLE+0x18>)
 8002882:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002886:	bf00      	nop
 8002888:	080028c9 	.word	0x080028c9
 800288c:	080028d7 	.word	0x080028d7
 8002890:	080028e5 	.word	0x080028e5
 8002894:	080028f3 	.word	0x080028f3
 8002898:	08002901 	.word	0x08002901
 800289c:	0800290f 	.word	0x0800290f
 80028a0:	0800290f 	.word	0x0800290f
 80028a4:	0800290f 	.word	0x0800290f
 80028a8:	0800290f 	.word	0x0800290f
 80028ac:	0800290f 	.word	0x0800290f
 80028b0:	0800291d 	.word	0x0800291d
 80028b4:	0800291d 	.word	0x0800291d
 80028b8:	0800291d 	.word	0x0800291d
 80028bc:	0800291d 	.word	0x0800291d
 80028c0:	0800291d 	.word	0x0800291d
 80028c4:	0800291d 	.word	0x0800291d
 80028c8:	4b1a      	ldr	r3, [pc, #104]	; (8002934 <NVIC_DISABLE+0xc4>)
 80028ca:	681b      	ldr	r3, [r3, #0]
 80028cc:	4a19      	ldr	r2, [pc, #100]	; (8002934 <NVIC_DISABLE+0xc4>)
 80028ce:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80028d2:	6013      	str	r3, [r2, #0]
 80028d4:	e029      	b.n	800292a <NVIC_DISABLE+0xba>
 80028d6:	4b17      	ldr	r3, [pc, #92]	; (8002934 <NVIC_DISABLE+0xc4>)
 80028d8:	681b      	ldr	r3, [r3, #0]
 80028da:	4a16      	ldr	r2, [pc, #88]	; (8002934 <NVIC_DISABLE+0xc4>)
 80028dc:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80028e0:	6013      	str	r3, [r2, #0]
 80028e2:	e022      	b.n	800292a <NVIC_DISABLE+0xba>
 80028e4:	4b13      	ldr	r3, [pc, #76]	; (8002934 <NVIC_DISABLE+0xc4>)
 80028e6:	681b      	ldr	r3, [r3, #0]
 80028e8:	4a12      	ldr	r2, [pc, #72]	; (8002934 <NVIC_DISABLE+0xc4>)
 80028ea:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80028ee:	6013      	str	r3, [r2, #0]
 80028f0:	e01b      	b.n	800292a <NVIC_DISABLE+0xba>
 80028f2:	4b10      	ldr	r3, [pc, #64]	; (8002934 <NVIC_DISABLE+0xc4>)
 80028f4:	681b      	ldr	r3, [r3, #0]
 80028f6:	4a0f      	ldr	r2, [pc, #60]	; (8002934 <NVIC_DISABLE+0xc4>)
 80028f8:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80028fc:	6013      	str	r3, [r2, #0]
 80028fe:	e014      	b.n	800292a <NVIC_DISABLE+0xba>
 8002900:	4b0c      	ldr	r3, [pc, #48]	; (8002934 <NVIC_DISABLE+0xc4>)
 8002902:	681b      	ldr	r3, [r3, #0]
 8002904:	4a0b      	ldr	r2, [pc, #44]	; (8002934 <NVIC_DISABLE+0xc4>)
 8002906:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800290a:	6013      	str	r3, [r2, #0]
 800290c:	e00d      	b.n	800292a <NVIC_DISABLE+0xba>
 800290e:	4b09      	ldr	r3, [pc, #36]	; (8002934 <NVIC_DISABLE+0xc4>)
 8002910:	681b      	ldr	r3, [r3, #0]
 8002912:	4a08      	ldr	r2, [pc, #32]	; (8002934 <NVIC_DISABLE+0xc4>)
 8002914:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8002918:	6013      	str	r3, [r2, #0]
 800291a:	e006      	b.n	800292a <NVIC_DISABLE+0xba>
 800291c:	4b06      	ldr	r3, [pc, #24]	; (8002938 <NVIC_DISABLE+0xc8>)
 800291e:	681b      	ldr	r3, [r3, #0]
 8002920:	4a05      	ldr	r2, [pc, #20]	; (8002938 <NVIC_DISABLE+0xc8>)
 8002922:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8002926:	6013      	str	r3, [r2, #0]
 8002928:	bf00      	nop
 800292a:	bf00      	nop
 800292c:	370c      	adds	r7, #12
 800292e:	46bd      	mov	sp, r7
 8002930:	bc80      	pop	{r7}
 8002932:	4770      	bx	lr
 8002934:	e000e100 	.word	0xe000e100
 8002938:	e000e104 	.word	0xe000e104

0800293c <MCAL_EXTI_init>:
 800293c:	b580      	push	{r7, lr}
 800293e:	b084      	sub	sp, #16
 8002940:	af00      	add	r7, sp, #0
 8002942:	6078      	str	r0, [r7, #4]
 8002944:	4b65      	ldr	r3, [pc, #404]	; (8002adc <MCAL_EXTI_init+0x1a0>)
 8002946:	699b      	ldr	r3, [r3, #24]
 8002948:	4a64      	ldr	r2, [pc, #400]	; (8002adc <MCAL_EXTI_init+0x1a0>)
 800294a:	f043 0301 	orr.w	r3, r3, #1
 800294e:	6193      	str	r3, [r2, #24]
 8002950:	687b      	ldr	r3, [r7, #4]
 8002952:	881b      	ldrh	r3, [r3, #0]
 8002954:	089b      	lsrs	r3, r3, #2
 8002956:	b29b      	uxth	r3, r3
 8002958:	73fb      	strb	r3, [r7, #15]
 800295a:	687b      	ldr	r3, [r7, #4]
 800295c:	881b      	ldrh	r3, [r3, #0]
 800295e:	b2db      	uxtb	r3, r3
 8002960:	f003 0303 	and.w	r3, r3, #3
 8002964:	b2db      	uxtb	r3, r3
 8002966:	009b      	lsls	r3, r3, #2
 8002968:	73bb      	strb	r3, [r7, #14]
 800296a:	2300      	movs	r3, #0
 800296c:	60bb      	str	r3, [r7, #8]
 800296e:	687b      	ldr	r3, [r7, #4]
 8002970:	891b      	ldrh	r3, [r3, #8]
 8002972:	813b      	strh	r3, [r7, #8]
 8002974:	2301      	movs	r3, #1
 8002976:	72bb      	strb	r3, [r7, #10]
 8002978:	687b      	ldr	r3, [r7, #4]
 800297a:	685b      	ldr	r3, [r3, #4]
 800297c:	f107 0208 	add.w	r2, r7, #8
 8002980:	4611      	mov	r1, r2
 8002982:	4618      	mov	r0, r3
 8002984:	f000 f9e2 	bl	8002d4c <MCAL_GPIO_init>
 8002988:	687b      	ldr	r3, [r7, #4]
 800298a:	7b1b      	ldrb	r3, [r3, #12]
 800298c:	2b00      	cmp	r3, #0
 800298e:	d10b      	bne.n	80029a8 <MCAL_EXTI_init+0x6c>
 8002990:	4b53      	ldr	r3, [pc, #332]	; (8002ae0 <MCAL_EXTI_init+0x1a4>)
 8002992:	68db      	ldr	r3, [r3, #12]
 8002994:	687a      	ldr	r2, [r7, #4]
 8002996:	8812      	ldrh	r2, [r2, #0]
 8002998:	4611      	mov	r1, r2
 800299a:	2201      	movs	r2, #1
 800299c:	408a      	lsls	r2, r1
 800299e:	4611      	mov	r1, r2
 80029a0:	4a4f      	ldr	r2, [pc, #316]	; (8002ae0 <MCAL_EXTI_init+0x1a4>)
 80029a2:	430b      	orrs	r3, r1
 80029a4:	60d3      	str	r3, [r2, #12]
 80029a6:	e029      	b.n	80029fc <MCAL_EXTI_init+0xc0>
 80029a8:	687b      	ldr	r3, [r7, #4]
 80029aa:	7b1b      	ldrb	r3, [r3, #12]
 80029ac:	2b01      	cmp	r3, #1
 80029ae:	d10b      	bne.n	80029c8 <MCAL_EXTI_init+0x8c>
 80029b0:	4b4b      	ldr	r3, [pc, #300]	; (8002ae0 <MCAL_EXTI_init+0x1a4>)
 80029b2:	689b      	ldr	r3, [r3, #8]
 80029b4:	687a      	ldr	r2, [r7, #4]
 80029b6:	8812      	ldrh	r2, [r2, #0]
 80029b8:	4611      	mov	r1, r2
 80029ba:	2201      	movs	r2, #1
 80029bc:	408a      	lsls	r2, r1
 80029be:	4611      	mov	r1, r2
 80029c0:	4a47      	ldr	r2, [pc, #284]	; (8002ae0 <MCAL_EXTI_init+0x1a4>)
 80029c2:	430b      	orrs	r3, r1
 80029c4:	6093      	str	r3, [r2, #8]
 80029c6:	e019      	b.n	80029fc <MCAL_EXTI_init+0xc0>
 80029c8:	687b      	ldr	r3, [r7, #4]
 80029ca:	7b1b      	ldrb	r3, [r3, #12]
 80029cc:	2b02      	cmp	r3, #2
 80029ce:	d115      	bne.n	80029fc <MCAL_EXTI_init+0xc0>
 80029d0:	4b43      	ldr	r3, [pc, #268]	; (8002ae0 <MCAL_EXTI_init+0x1a4>)
 80029d2:	68db      	ldr	r3, [r3, #12]
 80029d4:	687a      	ldr	r2, [r7, #4]
 80029d6:	8812      	ldrh	r2, [r2, #0]
 80029d8:	4611      	mov	r1, r2
 80029da:	2201      	movs	r2, #1
 80029dc:	408a      	lsls	r2, r1
 80029de:	4611      	mov	r1, r2
 80029e0:	4a3f      	ldr	r2, [pc, #252]	; (8002ae0 <MCAL_EXTI_init+0x1a4>)
 80029e2:	430b      	orrs	r3, r1
 80029e4:	60d3      	str	r3, [r2, #12]
 80029e6:	4b3e      	ldr	r3, [pc, #248]	; (8002ae0 <MCAL_EXTI_init+0x1a4>)
 80029e8:	689b      	ldr	r3, [r3, #8]
 80029ea:	687a      	ldr	r2, [r7, #4]
 80029ec:	8812      	ldrh	r2, [r2, #0]
 80029ee:	4611      	mov	r1, r2
 80029f0:	2201      	movs	r2, #1
 80029f2:	408a      	lsls	r2, r1
 80029f4:	4611      	mov	r1, r2
 80029f6:	4a3a      	ldr	r2, [pc, #232]	; (8002ae0 <MCAL_EXTI_init+0x1a4>)
 80029f8:	430b      	orrs	r3, r1
 80029fa:	6093      	str	r3, [r2, #8]
 80029fc:	4a39      	ldr	r2, [pc, #228]	; (8002ae4 <MCAL_EXTI_init+0x1a8>)
 80029fe:	7bfb      	ldrb	r3, [r7, #15]
 8002a00:	3302      	adds	r3, #2
 8002a02:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8002a06:	7bbb      	ldrb	r3, [r7, #14]
 8002a08:	210f      	movs	r1, #15
 8002a0a:	fa01 f303 	lsl.w	r3, r1, r3
 8002a0e:	43db      	mvns	r3, r3
 8002a10:	4618      	mov	r0, r3
 8002a12:	4934      	ldr	r1, [pc, #208]	; (8002ae4 <MCAL_EXTI_init+0x1a8>)
 8002a14:	7bfb      	ldrb	r3, [r7, #15]
 8002a16:	4002      	ands	r2, r0
 8002a18:	3302      	adds	r3, #2
 8002a1a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002a1e:	4a31      	ldr	r2, [pc, #196]	; (8002ae4 <MCAL_EXTI_init+0x1a8>)
 8002a20:	7bfb      	ldrb	r3, [r7, #15]
 8002a22:	3302      	adds	r3, #2
 8002a24:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8002a28:	687b      	ldr	r3, [r7, #4]
 8002a2a:	685b      	ldr	r3, [r3, #4]
 8002a2c:	492e      	ldr	r1, [pc, #184]	; (8002ae8 <MCAL_EXTI_init+0x1ac>)
 8002a2e:	428b      	cmp	r3, r1
 8002a30:	d016      	beq.n	8002a60 <MCAL_EXTI_init+0x124>
 8002a32:	687b      	ldr	r3, [r7, #4]
 8002a34:	685b      	ldr	r3, [r3, #4]
 8002a36:	492d      	ldr	r1, [pc, #180]	; (8002aec <MCAL_EXTI_init+0x1b0>)
 8002a38:	428b      	cmp	r3, r1
 8002a3a:	d00f      	beq.n	8002a5c <MCAL_EXTI_init+0x120>
 8002a3c:	687b      	ldr	r3, [r7, #4]
 8002a3e:	685b      	ldr	r3, [r3, #4]
 8002a40:	492b      	ldr	r1, [pc, #172]	; (8002af0 <MCAL_EXTI_init+0x1b4>)
 8002a42:	428b      	cmp	r3, r1
 8002a44:	d008      	beq.n	8002a58 <MCAL_EXTI_init+0x11c>
 8002a46:	687b      	ldr	r3, [r7, #4]
 8002a48:	685b      	ldr	r3, [r3, #4]
 8002a4a:	492a      	ldr	r1, [pc, #168]	; (8002af4 <MCAL_EXTI_init+0x1b8>)
 8002a4c:	428b      	cmp	r3, r1
 8002a4e:	d101      	bne.n	8002a54 <MCAL_EXTI_init+0x118>
 8002a50:	2304      	movs	r3, #4
 8002a52:	e006      	b.n	8002a62 <MCAL_EXTI_init+0x126>
 8002a54:	2300      	movs	r3, #0
 8002a56:	e004      	b.n	8002a62 <MCAL_EXTI_init+0x126>
 8002a58:	2303      	movs	r3, #3
 8002a5a:	e002      	b.n	8002a62 <MCAL_EXTI_init+0x126>
 8002a5c:	2301      	movs	r3, #1
 8002a5e:	e000      	b.n	8002a62 <MCAL_EXTI_init+0x126>
 8002a60:	2300      	movs	r3, #0
 8002a62:	7bb9      	ldrb	r1, [r7, #14]
 8002a64:	408b      	lsls	r3, r1
 8002a66:	4618      	mov	r0, r3
 8002a68:	491e      	ldr	r1, [pc, #120]	; (8002ae4 <MCAL_EXTI_init+0x1a8>)
 8002a6a:	7bfb      	ldrb	r3, [r7, #15]
 8002a6c:	4302      	orrs	r2, r0
 8002a6e:	3302      	adds	r3, #2
 8002a70:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002a74:	687b      	ldr	r3, [r7, #4]
 8002a76:	881b      	ldrh	r3, [r3, #0]
 8002a78:	4619      	mov	r1, r3
 8002a7a:	687b      	ldr	r3, [r7, #4]
 8002a7c:	691b      	ldr	r3, [r3, #16]
 8002a7e:	4a1e      	ldr	r2, [pc, #120]	; (8002af8 <MCAL_EXTI_init+0x1bc>)
 8002a80:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 8002a84:	687b      	ldr	r3, [r7, #4]
 8002a86:	7b5b      	ldrb	r3, [r3, #13]
 8002a88:	2b01      	cmp	r3, #1
 8002a8a:	d111      	bne.n	8002ab0 <MCAL_EXTI_init+0x174>
 8002a8c:	4b14      	ldr	r3, [pc, #80]	; (8002ae0 <MCAL_EXTI_init+0x1a4>)
 8002a8e:	681b      	ldr	r3, [r3, #0]
 8002a90:	687a      	ldr	r2, [r7, #4]
 8002a92:	8812      	ldrh	r2, [r2, #0]
 8002a94:	4611      	mov	r1, r2
 8002a96:	2201      	movs	r2, #1
 8002a98:	408a      	lsls	r2, r1
 8002a9a:	4611      	mov	r1, r2
 8002a9c:	4a10      	ldr	r2, [pc, #64]	; (8002ae0 <MCAL_EXTI_init+0x1a4>)
 8002a9e:	430b      	orrs	r3, r1
 8002aa0:	6013      	str	r3, [r2, #0]
 8002aa2:	687b      	ldr	r3, [r7, #4]
 8002aa4:	881b      	ldrh	r3, [r3, #0]
 8002aa6:	b2db      	uxtb	r3, r3
 8002aa8:	4618      	mov	r0, r3
 8002aaa:	f7ff fe7b 	bl	80027a4 <NVIC_ENABLE>
 8002aae:	e011      	b.n	8002ad4 <MCAL_EXTI_init+0x198>
 8002ab0:	4b0b      	ldr	r3, [pc, #44]	; (8002ae0 <MCAL_EXTI_init+0x1a4>)
 8002ab2:	681b      	ldr	r3, [r3, #0]
 8002ab4:	687a      	ldr	r2, [r7, #4]
 8002ab6:	8812      	ldrh	r2, [r2, #0]
 8002ab8:	4611      	mov	r1, r2
 8002aba:	2201      	movs	r2, #1
 8002abc:	408a      	lsls	r2, r1
 8002abe:	43d2      	mvns	r2, r2
 8002ac0:	4611      	mov	r1, r2
 8002ac2:	4a07      	ldr	r2, [pc, #28]	; (8002ae0 <MCAL_EXTI_init+0x1a4>)
 8002ac4:	400b      	ands	r3, r1
 8002ac6:	6013      	str	r3, [r2, #0]
 8002ac8:	687b      	ldr	r3, [r7, #4]
 8002aca:	881b      	ldrh	r3, [r3, #0]
 8002acc:	b2db      	uxtb	r3, r3
 8002ace:	4618      	mov	r0, r3
 8002ad0:	f7ff fece 	bl	8002870 <NVIC_DISABLE>
 8002ad4:	bf00      	nop
 8002ad6:	3710      	adds	r7, #16
 8002ad8:	46bd      	mov	sp, r7
 8002ada:	bd80      	pop	{r7, pc}
 8002adc:	40021000 	.word	0x40021000
 8002ae0:	40010400 	.word	0x40010400
 8002ae4:	40010000 	.word	0x40010000
 8002ae8:	40010800 	.word	0x40010800
 8002aec:	40010c00 	.word	0x40010c00
 8002af0:	40011000 	.word	0x40011000
 8002af4:	40011400 	.word	0x40011400
 8002af8:	20004190 	.word	0x20004190

08002afc <EXTI0_IRQHandler>:
 8002afc:	b580      	push	{r7, lr}
 8002afe:	af00      	add	r7, sp, #0
 8002b00:	4b05      	ldr	r3, [pc, #20]	; (8002b18 <EXTI0_IRQHandler+0x1c>)
 8002b02:	681b      	ldr	r3, [r3, #0]
 8002b04:	4798      	blx	r3
 8002b06:	4b05      	ldr	r3, [pc, #20]	; (8002b1c <EXTI0_IRQHandler+0x20>)
 8002b08:	695b      	ldr	r3, [r3, #20]
 8002b0a:	4a04      	ldr	r2, [pc, #16]	; (8002b1c <EXTI0_IRQHandler+0x20>)
 8002b0c:	f043 0301 	orr.w	r3, r3, #1
 8002b10:	6153      	str	r3, [r2, #20]
 8002b12:	bf00      	nop
 8002b14:	bd80      	pop	{r7, pc}
 8002b16:	bf00      	nop
 8002b18:	20004190 	.word	0x20004190
 8002b1c:	40010400 	.word	0x40010400

08002b20 <EXTI1_IRQHandler>:
 8002b20:	b580      	push	{r7, lr}
 8002b22:	af00      	add	r7, sp, #0
 8002b24:	4b05      	ldr	r3, [pc, #20]	; (8002b3c <EXTI1_IRQHandler+0x1c>)
 8002b26:	685b      	ldr	r3, [r3, #4]
 8002b28:	4798      	blx	r3
 8002b2a:	4b05      	ldr	r3, [pc, #20]	; (8002b40 <EXTI1_IRQHandler+0x20>)
 8002b2c:	695b      	ldr	r3, [r3, #20]
 8002b2e:	4a04      	ldr	r2, [pc, #16]	; (8002b40 <EXTI1_IRQHandler+0x20>)
 8002b30:	f043 0302 	orr.w	r3, r3, #2
 8002b34:	6153      	str	r3, [r2, #20]
 8002b36:	bf00      	nop
 8002b38:	bd80      	pop	{r7, pc}
 8002b3a:	bf00      	nop
 8002b3c:	20004190 	.word	0x20004190
 8002b40:	40010400 	.word	0x40010400

08002b44 <EXTI2_IRQHandler>:
 8002b44:	b580      	push	{r7, lr}
 8002b46:	af00      	add	r7, sp, #0
 8002b48:	4b05      	ldr	r3, [pc, #20]	; (8002b60 <EXTI2_IRQHandler+0x1c>)
 8002b4a:	689b      	ldr	r3, [r3, #8]
 8002b4c:	4798      	blx	r3
 8002b4e:	4b05      	ldr	r3, [pc, #20]	; (8002b64 <EXTI2_IRQHandler+0x20>)
 8002b50:	695b      	ldr	r3, [r3, #20]
 8002b52:	4a04      	ldr	r2, [pc, #16]	; (8002b64 <EXTI2_IRQHandler+0x20>)
 8002b54:	f043 0304 	orr.w	r3, r3, #4
 8002b58:	6153      	str	r3, [r2, #20]
 8002b5a:	bf00      	nop
 8002b5c:	bd80      	pop	{r7, pc}
 8002b5e:	bf00      	nop
 8002b60:	20004190 	.word	0x20004190
 8002b64:	40010400 	.word	0x40010400

08002b68 <EXTI3_IRQHandler>:
 8002b68:	b580      	push	{r7, lr}
 8002b6a:	af00      	add	r7, sp, #0
 8002b6c:	4b05      	ldr	r3, [pc, #20]	; (8002b84 <EXTI3_IRQHandler+0x1c>)
 8002b6e:	68db      	ldr	r3, [r3, #12]
 8002b70:	4798      	blx	r3
 8002b72:	4b05      	ldr	r3, [pc, #20]	; (8002b88 <EXTI3_IRQHandler+0x20>)
 8002b74:	695b      	ldr	r3, [r3, #20]
 8002b76:	4a04      	ldr	r2, [pc, #16]	; (8002b88 <EXTI3_IRQHandler+0x20>)
 8002b78:	f043 0308 	orr.w	r3, r3, #8
 8002b7c:	6153      	str	r3, [r2, #20]
 8002b7e:	bf00      	nop
 8002b80:	bd80      	pop	{r7, pc}
 8002b82:	bf00      	nop
 8002b84:	20004190 	.word	0x20004190
 8002b88:	40010400 	.word	0x40010400

08002b8c <EXTI4_IRQHandler>:
 8002b8c:	b580      	push	{r7, lr}
 8002b8e:	af00      	add	r7, sp, #0
 8002b90:	4b05      	ldr	r3, [pc, #20]	; (8002ba8 <EXTI4_IRQHandler+0x1c>)
 8002b92:	691b      	ldr	r3, [r3, #16]
 8002b94:	4798      	blx	r3
 8002b96:	4b05      	ldr	r3, [pc, #20]	; (8002bac <EXTI4_IRQHandler+0x20>)
 8002b98:	695b      	ldr	r3, [r3, #20]
 8002b9a:	4a04      	ldr	r2, [pc, #16]	; (8002bac <EXTI4_IRQHandler+0x20>)
 8002b9c:	f043 0310 	orr.w	r3, r3, #16
 8002ba0:	6153      	str	r3, [r2, #20]
 8002ba2:	bf00      	nop
 8002ba4:	bd80      	pop	{r7, pc}
 8002ba6:	bf00      	nop
 8002ba8:	20004190 	.word	0x20004190
 8002bac:	40010400 	.word	0x40010400

08002bb0 <EXTI9_5_IRQHandler>:
 8002bb0:	b580      	push	{r7, lr}
 8002bb2:	af00      	add	r7, sp, #0
 8002bb4:	4b26      	ldr	r3, [pc, #152]	; (8002c50 <EXTI9_5_IRQHandler+0xa0>)
 8002bb6:	695b      	ldr	r3, [r3, #20]
 8002bb8:	f003 0320 	and.w	r3, r3, #32
 8002bbc:	2b00      	cmp	r3, #0
 8002bbe:	d008      	beq.n	8002bd2 <EXTI9_5_IRQHandler+0x22>
 8002bc0:	4b23      	ldr	r3, [pc, #140]	; (8002c50 <EXTI9_5_IRQHandler+0xa0>)
 8002bc2:	695b      	ldr	r3, [r3, #20]
 8002bc4:	4a22      	ldr	r2, [pc, #136]	; (8002c50 <EXTI9_5_IRQHandler+0xa0>)
 8002bc6:	f043 0320 	orr.w	r3, r3, #32
 8002bca:	6153      	str	r3, [r2, #20]
 8002bcc:	4b21      	ldr	r3, [pc, #132]	; (8002c54 <EXTI9_5_IRQHandler+0xa4>)
 8002bce:	695b      	ldr	r3, [r3, #20]
 8002bd0:	4798      	blx	r3
 8002bd2:	4b1f      	ldr	r3, [pc, #124]	; (8002c50 <EXTI9_5_IRQHandler+0xa0>)
 8002bd4:	695b      	ldr	r3, [r3, #20]
 8002bd6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002bda:	2b00      	cmp	r3, #0
 8002bdc:	d008      	beq.n	8002bf0 <EXTI9_5_IRQHandler+0x40>
 8002bde:	4b1c      	ldr	r3, [pc, #112]	; (8002c50 <EXTI9_5_IRQHandler+0xa0>)
 8002be0:	695b      	ldr	r3, [r3, #20]
 8002be2:	4a1b      	ldr	r2, [pc, #108]	; (8002c50 <EXTI9_5_IRQHandler+0xa0>)
 8002be4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002be8:	6153      	str	r3, [r2, #20]
 8002bea:	4b1a      	ldr	r3, [pc, #104]	; (8002c54 <EXTI9_5_IRQHandler+0xa4>)
 8002bec:	699b      	ldr	r3, [r3, #24]
 8002bee:	4798      	blx	r3
 8002bf0:	4b17      	ldr	r3, [pc, #92]	; (8002c50 <EXTI9_5_IRQHandler+0xa0>)
 8002bf2:	695b      	ldr	r3, [r3, #20]
 8002bf4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002bf8:	2b00      	cmp	r3, #0
 8002bfa:	d008      	beq.n	8002c0e <EXTI9_5_IRQHandler+0x5e>
 8002bfc:	4b14      	ldr	r3, [pc, #80]	; (8002c50 <EXTI9_5_IRQHandler+0xa0>)
 8002bfe:	695b      	ldr	r3, [r3, #20]
 8002c00:	4a13      	ldr	r2, [pc, #76]	; (8002c50 <EXTI9_5_IRQHandler+0xa0>)
 8002c02:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002c06:	6153      	str	r3, [r2, #20]
 8002c08:	4b12      	ldr	r3, [pc, #72]	; (8002c54 <EXTI9_5_IRQHandler+0xa4>)
 8002c0a:	69db      	ldr	r3, [r3, #28]
 8002c0c:	4798      	blx	r3
 8002c0e:	4b10      	ldr	r3, [pc, #64]	; (8002c50 <EXTI9_5_IRQHandler+0xa0>)
 8002c10:	695b      	ldr	r3, [r3, #20]
 8002c12:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002c16:	2b00      	cmp	r3, #0
 8002c18:	d008      	beq.n	8002c2c <EXTI9_5_IRQHandler+0x7c>
 8002c1a:	4b0d      	ldr	r3, [pc, #52]	; (8002c50 <EXTI9_5_IRQHandler+0xa0>)
 8002c1c:	695b      	ldr	r3, [r3, #20]
 8002c1e:	4a0c      	ldr	r2, [pc, #48]	; (8002c50 <EXTI9_5_IRQHandler+0xa0>)
 8002c20:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002c24:	6153      	str	r3, [r2, #20]
 8002c26:	4b0b      	ldr	r3, [pc, #44]	; (8002c54 <EXTI9_5_IRQHandler+0xa4>)
 8002c28:	6a1b      	ldr	r3, [r3, #32]
 8002c2a:	4798      	blx	r3
 8002c2c:	4b08      	ldr	r3, [pc, #32]	; (8002c50 <EXTI9_5_IRQHandler+0xa0>)
 8002c2e:	695b      	ldr	r3, [r3, #20]
 8002c30:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8002c34:	2b00      	cmp	r3, #0
 8002c36:	d008      	beq.n	8002c4a <EXTI9_5_IRQHandler+0x9a>
 8002c38:	4b05      	ldr	r3, [pc, #20]	; (8002c50 <EXTI9_5_IRQHandler+0xa0>)
 8002c3a:	695b      	ldr	r3, [r3, #20]
 8002c3c:	4a04      	ldr	r2, [pc, #16]	; (8002c50 <EXTI9_5_IRQHandler+0xa0>)
 8002c3e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002c42:	6153      	str	r3, [r2, #20]
 8002c44:	4b03      	ldr	r3, [pc, #12]	; (8002c54 <EXTI9_5_IRQHandler+0xa4>)
 8002c46:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c48:	4798      	blx	r3
 8002c4a:	bf00      	nop
 8002c4c:	bd80      	pop	{r7, pc}
 8002c4e:	bf00      	nop
 8002c50:	40010400 	.word	0x40010400
 8002c54:	20004190 	.word	0x20004190

08002c58 <EXTI15_10_IRQHandler>:
 8002c58:	b580      	push	{r7, lr}
 8002c5a:	af00      	add	r7, sp, #0
 8002c5c:	4b2d      	ldr	r3, [pc, #180]	; (8002d14 <EXTI15_10_IRQHandler+0xbc>)
 8002c5e:	695b      	ldr	r3, [r3, #20]
 8002c60:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002c64:	2b00      	cmp	r3, #0
 8002c66:	d008      	beq.n	8002c7a <EXTI15_10_IRQHandler+0x22>
 8002c68:	4b2a      	ldr	r3, [pc, #168]	; (8002d14 <EXTI15_10_IRQHandler+0xbc>)
 8002c6a:	695b      	ldr	r3, [r3, #20]
 8002c6c:	4a29      	ldr	r2, [pc, #164]	; (8002d14 <EXTI15_10_IRQHandler+0xbc>)
 8002c6e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8002c72:	6153      	str	r3, [r2, #20]
 8002c74:	4b28      	ldr	r3, [pc, #160]	; (8002d18 <EXTI15_10_IRQHandler+0xc0>)
 8002c76:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002c78:	4798      	blx	r3
 8002c7a:	4b26      	ldr	r3, [pc, #152]	; (8002d14 <EXTI15_10_IRQHandler+0xbc>)
 8002c7c:	695b      	ldr	r3, [r3, #20]
 8002c7e:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8002c82:	2b00      	cmp	r3, #0
 8002c84:	d008      	beq.n	8002c98 <EXTI15_10_IRQHandler+0x40>
 8002c86:	4b23      	ldr	r3, [pc, #140]	; (8002d14 <EXTI15_10_IRQHandler+0xbc>)
 8002c88:	695b      	ldr	r3, [r3, #20]
 8002c8a:	4a22      	ldr	r2, [pc, #136]	; (8002d14 <EXTI15_10_IRQHandler+0xbc>)
 8002c8c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8002c90:	6153      	str	r3, [r2, #20]
 8002c92:	4b21      	ldr	r3, [pc, #132]	; (8002d18 <EXTI15_10_IRQHandler+0xc0>)
 8002c94:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002c96:	4798      	blx	r3
 8002c98:	4b1e      	ldr	r3, [pc, #120]	; (8002d14 <EXTI15_10_IRQHandler+0xbc>)
 8002c9a:	695b      	ldr	r3, [r3, #20]
 8002c9c:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002ca0:	2b00      	cmp	r3, #0
 8002ca2:	d008      	beq.n	8002cb6 <EXTI15_10_IRQHandler+0x5e>
 8002ca4:	4b1b      	ldr	r3, [pc, #108]	; (8002d14 <EXTI15_10_IRQHandler+0xbc>)
 8002ca6:	695b      	ldr	r3, [r3, #20]
 8002ca8:	4a1a      	ldr	r2, [pc, #104]	; (8002d14 <EXTI15_10_IRQHandler+0xbc>)
 8002caa:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8002cae:	6153      	str	r3, [r2, #20]
 8002cb0:	4b19      	ldr	r3, [pc, #100]	; (8002d18 <EXTI15_10_IRQHandler+0xc0>)
 8002cb2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002cb4:	4798      	blx	r3
 8002cb6:	4b17      	ldr	r3, [pc, #92]	; (8002d14 <EXTI15_10_IRQHandler+0xbc>)
 8002cb8:	695b      	ldr	r3, [r3, #20]
 8002cba:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8002cbe:	2b00      	cmp	r3, #0
 8002cc0:	d008      	beq.n	8002cd4 <EXTI15_10_IRQHandler+0x7c>
 8002cc2:	4b14      	ldr	r3, [pc, #80]	; (8002d14 <EXTI15_10_IRQHandler+0xbc>)
 8002cc4:	695b      	ldr	r3, [r3, #20]
 8002cc6:	4a13      	ldr	r2, [pc, #76]	; (8002d14 <EXTI15_10_IRQHandler+0xbc>)
 8002cc8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8002ccc:	6153      	str	r3, [r2, #20]
 8002cce:	4b12      	ldr	r3, [pc, #72]	; (8002d18 <EXTI15_10_IRQHandler+0xc0>)
 8002cd0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002cd2:	4798      	blx	r3
 8002cd4:	4b0f      	ldr	r3, [pc, #60]	; (8002d14 <EXTI15_10_IRQHandler+0xbc>)
 8002cd6:	695b      	ldr	r3, [r3, #20]
 8002cd8:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002cdc:	2b00      	cmp	r3, #0
 8002cde:	d008      	beq.n	8002cf2 <EXTI15_10_IRQHandler+0x9a>
 8002ce0:	4b0c      	ldr	r3, [pc, #48]	; (8002d14 <EXTI15_10_IRQHandler+0xbc>)
 8002ce2:	695b      	ldr	r3, [r3, #20]
 8002ce4:	4a0b      	ldr	r2, [pc, #44]	; (8002d14 <EXTI15_10_IRQHandler+0xbc>)
 8002ce6:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002cea:	6153      	str	r3, [r2, #20]
 8002cec:	4b0a      	ldr	r3, [pc, #40]	; (8002d18 <EXTI15_10_IRQHandler+0xc0>)
 8002cee:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002cf0:	4798      	blx	r3
 8002cf2:	4b08      	ldr	r3, [pc, #32]	; (8002d14 <EXTI15_10_IRQHandler+0xbc>)
 8002cf4:	695b      	ldr	r3, [r3, #20]
 8002cf6:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8002cfa:	2b00      	cmp	r3, #0
 8002cfc:	d008      	beq.n	8002d10 <EXTI15_10_IRQHandler+0xb8>
 8002cfe:	4b05      	ldr	r3, [pc, #20]	; (8002d14 <EXTI15_10_IRQHandler+0xbc>)
 8002d00:	695b      	ldr	r3, [r3, #20]
 8002d02:	4a04      	ldr	r2, [pc, #16]	; (8002d14 <EXTI15_10_IRQHandler+0xbc>)
 8002d04:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8002d08:	6153      	str	r3, [r2, #20]
 8002d0a:	4b03      	ldr	r3, [pc, #12]	; (8002d18 <EXTI15_10_IRQHandler+0xc0>)
 8002d0c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002d0e:	4798      	blx	r3
 8002d10:	bf00      	nop
 8002d12:	bd80      	pop	{r7, pc}
 8002d14:	40010400 	.word	0x40010400
 8002d18:	20004190 	.word	0x20004190

08002d1c <Get_PIN_Positon>:
 8002d1c:	b480      	push	{r7}
 8002d1e:	b085      	sub	sp, #20
 8002d20:	af00      	add	r7, sp, #0
 8002d22:	4603      	mov	r3, r0
 8002d24:	80fb      	strh	r3, [r7, #6]
 8002d26:	88fb      	ldrh	r3, [r7, #6]
 8002d28:	2b07      	cmp	r3, #7
 8002d2a:	d803      	bhi.n	8002d34 <Get_PIN_Positon+0x18>
 8002d2c:	88fb      	ldrh	r3, [r7, #6]
 8002d2e:	009b      	lsls	r3, r3, #2
 8002d30:	b29b      	uxth	r3, r3
 8002d32:	e004      	b.n	8002d3e <Get_PIN_Positon+0x22>
 8002d34:	88fb      	ldrh	r3, [r7, #6]
 8002d36:	3b08      	subs	r3, #8
 8002d38:	b29b      	uxth	r3, r3
 8002d3a:	009b      	lsls	r3, r3, #2
 8002d3c:	b29b      	uxth	r3, r3
 8002d3e:	81fb      	strh	r3, [r7, #14]
 8002d40:	89fb      	ldrh	r3, [r7, #14]
 8002d42:	4618      	mov	r0, r3
 8002d44:	3714      	adds	r7, #20
 8002d46:	46bd      	mov	sp, r7
 8002d48:	bc80      	pop	{r7}
 8002d4a:	4770      	bx	lr

08002d4c <MCAL_GPIO_init>:
 8002d4c:	b590      	push	{r4, r7, lr}
 8002d4e:	b085      	sub	sp, #20
 8002d50:	af00      	add	r7, sp, #0
 8002d52:	6078      	str	r0, [r7, #4]
 8002d54:	6039      	str	r1, [r7, #0]
 8002d56:	687b      	ldr	r3, [r7, #4]
 8002d58:	4a6b      	ldr	r2, [pc, #428]	; (8002f08 <MCAL_GPIO_init+0x1bc>)
 8002d5a:	4293      	cmp	r3, r2
 8002d5c:	d106      	bne.n	8002d6c <MCAL_GPIO_init+0x20>
 8002d5e:	4b6b      	ldr	r3, [pc, #428]	; (8002f0c <MCAL_GPIO_init+0x1c0>)
 8002d60:	699b      	ldr	r3, [r3, #24]
 8002d62:	4a6a      	ldr	r2, [pc, #424]	; (8002f0c <MCAL_GPIO_init+0x1c0>)
 8002d64:	f043 0304 	orr.w	r3, r3, #4
 8002d68:	6193      	str	r3, [r2, #24]
 8002d6a:	e02a      	b.n	8002dc2 <MCAL_GPIO_init+0x76>
 8002d6c:	687b      	ldr	r3, [r7, #4]
 8002d6e:	4a68      	ldr	r2, [pc, #416]	; (8002f10 <MCAL_GPIO_init+0x1c4>)
 8002d70:	4293      	cmp	r3, r2
 8002d72:	d106      	bne.n	8002d82 <MCAL_GPIO_init+0x36>
 8002d74:	4b65      	ldr	r3, [pc, #404]	; (8002f0c <MCAL_GPIO_init+0x1c0>)
 8002d76:	699b      	ldr	r3, [r3, #24]
 8002d78:	4a64      	ldr	r2, [pc, #400]	; (8002f0c <MCAL_GPIO_init+0x1c0>)
 8002d7a:	f043 0308 	orr.w	r3, r3, #8
 8002d7e:	6193      	str	r3, [r2, #24]
 8002d80:	e01f      	b.n	8002dc2 <MCAL_GPIO_init+0x76>
 8002d82:	687b      	ldr	r3, [r7, #4]
 8002d84:	4a63      	ldr	r2, [pc, #396]	; (8002f14 <MCAL_GPIO_init+0x1c8>)
 8002d86:	4293      	cmp	r3, r2
 8002d88:	d106      	bne.n	8002d98 <MCAL_GPIO_init+0x4c>
 8002d8a:	4b60      	ldr	r3, [pc, #384]	; (8002f0c <MCAL_GPIO_init+0x1c0>)
 8002d8c:	699b      	ldr	r3, [r3, #24]
 8002d8e:	4a5f      	ldr	r2, [pc, #380]	; (8002f0c <MCAL_GPIO_init+0x1c0>)
 8002d90:	f043 0310 	orr.w	r3, r3, #16
 8002d94:	6193      	str	r3, [r2, #24]
 8002d96:	e014      	b.n	8002dc2 <MCAL_GPIO_init+0x76>
 8002d98:	687b      	ldr	r3, [r7, #4]
 8002d9a:	4a5f      	ldr	r2, [pc, #380]	; (8002f18 <MCAL_GPIO_init+0x1cc>)
 8002d9c:	4293      	cmp	r3, r2
 8002d9e:	d106      	bne.n	8002dae <MCAL_GPIO_init+0x62>
 8002da0:	4b5a      	ldr	r3, [pc, #360]	; (8002f0c <MCAL_GPIO_init+0x1c0>)
 8002da2:	699b      	ldr	r3, [r3, #24]
 8002da4:	4a59      	ldr	r2, [pc, #356]	; (8002f0c <MCAL_GPIO_init+0x1c0>)
 8002da6:	f043 0320 	orr.w	r3, r3, #32
 8002daa:	6193      	str	r3, [r2, #24]
 8002dac:	e009      	b.n	8002dc2 <MCAL_GPIO_init+0x76>
 8002dae:	687b      	ldr	r3, [r7, #4]
 8002db0:	4a5a      	ldr	r2, [pc, #360]	; (8002f1c <MCAL_GPIO_init+0x1d0>)
 8002db2:	4293      	cmp	r3, r2
 8002db4:	d105      	bne.n	8002dc2 <MCAL_GPIO_init+0x76>
 8002db6:	4b55      	ldr	r3, [pc, #340]	; (8002f0c <MCAL_GPIO_init+0x1c0>)
 8002db8:	699b      	ldr	r3, [r3, #24]
 8002dba:	4a54      	ldr	r2, [pc, #336]	; (8002f0c <MCAL_GPIO_init+0x1c0>)
 8002dbc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002dc0:	6193      	str	r3, [r2, #24]
 8002dc2:	683b      	ldr	r3, [r7, #0]
 8002dc4:	881b      	ldrh	r3, [r3, #0]
 8002dc6:	b29b      	uxth	r3, r3
 8002dc8:	2b07      	cmp	r3, #7
 8002dca:	d801      	bhi.n	8002dd0 <MCAL_GPIO_init+0x84>
 8002dcc:	687b      	ldr	r3, [r7, #4]
 8002dce:	e001      	b.n	8002dd4 <MCAL_GPIO_init+0x88>
 8002dd0:	687b      	ldr	r3, [r7, #4]
 8002dd2:	3304      	adds	r3, #4
 8002dd4:	60fb      	str	r3, [r7, #12]
 8002dd6:	683b      	ldr	r3, [r7, #0]
 8002dd8:	881b      	ldrh	r3, [r3, #0]
 8002dda:	b29b      	uxth	r3, r3
 8002ddc:	4618      	mov	r0, r3
 8002dde:	f7ff ff9d 	bl	8002d1c <Get_PIN_Positon>
 8002de2:	4603      	mov	r3, r0
 8002de4:	461a      	mov	r2, r3
 8002de6:	230f      	movs	r3, #15
 8002de8:	4093      	lsls	r3, r2
 8002dea:	43da      	mvns	r2, r3
 8002dec:	68fb      	ldr	r3, [r7, #12]
 8002dee:	681b      	ldr	r3, [r3, #0]
 8002df0:	401a      	ands	r2, r3
 8002df2:	68fb      	ldr	r3, [r7, #12]
 8002df4:	601a      	str	r2, [r3, #0]
 8002df6:	683b      	ldr	r3, [r7, #0]
 8002df8:	789b      	ldrb	r3, [r3, #2]
 8002dfa:	b2db      	uxtb	r3, r3
 8002dfc:	2b00      	cmp	r3, #0
 8002dfe:	d00e      	beq.n	8002e1e <MCAL_GPIO_init+0xd2>
 8002e00:	683b      	ldr	r3, [r7, #0]
 8002e02:	789b      	ldrb	r3, [r3, #2]
 8002e04:	b2db      	uxtb	r3, r3
 8002e06:	2b01      	cmp	r3, #1
 8002e08:	d009      	beq.n	8002e1e <MCAL_GPIO_init+0xd2>
 8002e0a:	683b      	ldr	r3, [r7, #0]
 8002e0c:	789b      	ldrb	r3, [r3, #2]
 8002e0e:	b2db      	uxtb	r3, r3
 8002e10:	2b02      	cmp	r3, #2
 8002e12:	d004      	beq.n	8002e1e <MCAL_GPIO_init+0xd2>
 8002e14:	683b      	ldr	r3, [r7, #0]
 8002e16:	789b      	ldrb	r3, [r3, #2]
 8002e18:	b2db      	uxtb	r3, r3
 8002e1a:	2b03      	cmp	r3, #3
 8002e1c:	d156      	bne.n	8002ecc <MCAL_GPIO_init+0x180>
 8002e1e:	683b      	ldr	r3, [r7, #0]
 8002e20:	789b      	ldrb	r3, [r3, #2]
 8002e22:	b2db      	uxtb	r3, r3
 8002e24:	2b03      	cmp	r3, #3
 8002e26:	d11c      	bne.n	8002e62 <MCAL_GPIO_init+0x116>
 8002e28:	683b      	ldr	r3, [r7, #0]
 8002e2a:	881b      	ldrh	r3, [r3, #0]
 8002e2c:	b29b      	uxth	r3, r3
 8002e2e:	4618      	mov	r0, r3
 8002e30:	f7ff ff74 	bl	8002d1c <Get_PIN_Positon>
 8002e34:	4603      	mov	r3, r0
 8002e36:	461a      	mov	r2, r3
 8002e38:	2308      	movs	r3, #8
 8002e3a:	fa03 f202 	lsl.w	r2, r3, r2
 8002e3e:	68fb      	ldr	r3, [r7, #12]
 8002e40:	681b      	ldr	r3, [r3, #0]
 8002e42:	431a      	orrs	r2, r3
 8002e44:	68fb      	ldr	r3, [r7, #12]
 8002e46:	601a      	str	r2, [r3, #0]
 8002e48:	683b      	ldr	r3, [r7, #0]
 8002e4a:	881b      	ldrh	r3, [r3, #0]
 8002e4c:	b29b      	uxth	r3, r3
 8002e4e:	461a      	mov	r2, r3
 8002e50:	2301      	movs	r3, #1
 8002e52:	4093      	lsls	r3, r2
 8002e54:	43da      	mvns	r2, r3
 8002e56:	687b      	ldr	r3, [r7, #4]
 8002e58:	68db      	ldr	r3, [r3, #12]
 8002e5a:	401a      	ands	r2, r3
 8002e5c:	687b      	ldr	r3, [r7, #4]
 8002e5e:	60da      	str	r2, [r3, #12]
 8002e60:	e04d      	b.n	8002efe <MCAL_GPIO_init+0x1b2>
 8002e62:	683b      	ldr	r3, [r7, #0]
 8002e64:	789b      	ldrb	r3, [r3, #2]
 8002e66:	b2db      	uxtb	r3, r3
 8002e68:	2b02      	cmp	r3, #2
 8002e6a:	d11c      	bne.n	8002ea6 <MCAL_GPIO_init+0x15a>
 8002e6c:	683b      	ldr	r3, [r7, #0]
 8002e6e:	881b      	ldrh	r3, [r3, #0]
 8002e70:	b29b      	uxth	r3, r3
 8002e72:	4618      	mov	r0, r3
 8002e74:	f7ff ff52 	bl	8002d1c <Get_PIN_Positon>
 8002e78:	4603      	mov	r3, r0
 8002e7a:	461a      	mov	r2, r3
 8002e7c:	2308      	movs	r3, #8
 8002e7e:	fa03 f202 	lsl.w	r2, r3, r2
 8002e82:	68fb      	ldr	r3, [r7, #12]
 8002e84:	681b      	ldr	r3, [r3, #0]
 8002e86:	431a      	orrs	r2, r3
 8002e88:	68fb      	ldr	r3, [r7, #12]
 8002e8a:	601a      	str	r2, [r3, #0]
 8002e8c:	683b      	ldr	r3, [r7, #0]
 8002e8e:	881b      	ldrh	r3, [r3, #0]
 8002e90:	b29b      	uxth	r3, r3
 8002e92:	461a      	mov	r2, r3
 8002e94:	2301      	movs	r3, #1
 8002e96:	fa03 f202 	lsl.w	r2, r3, r2
 8002e9a:	687b      	ldr	r3, [r7, #4]
 8002e9c:	68db      	ldr	r3, [r3, #12]
 8002e9e:	431a      	orrs	r2, r3
 8002ea0:	687b      	ldr	r3, [r7, #4]
 8002ea2:	60da      	str	r2, [r3, #12]
 8002ea4:	e02b      	b.n	8002efe <MCAL_GPIO_init+0x1b2>
 8002ea6:	683b      	ldr	r3, [r7, #0]
 8002ea8:	789b      	ldrb	r3, [r3, #2]
 8002eaa:	b2db      	uxtb	r3, r3
 8002eac:	009c      	lsls	r4, r3, #2
 8002eae:	683b      	ldr	r3, [r7, #0]
 8002eb0:	881b      	ldrh	r3, [r3, #0]
 8002eb2:	b29b      	uxth	r3, r3
 8002eb4:	4618      	mov	r0, r3
 8002eb6:	f7ff ff31 	bl	8002d1c <Get_PIN_Positon>
 8002eba:	4603      	mov	r3, r0
 8002ebc:	fa04 f203 	lsl.w	r2, r4, r3
 8002ec0:	68fb      	ldr	r3, [r7, #12]
 8002ec2:	681b      	ldr	r3, [r3, #0]
 8002ec4:	431a      	orrs	r2, r3
 8002ec6:	68fb      	ldr	r3, [r7, #12]
 8002ec8:	601a      	str	r2, [r3, #0]
 8002eca:	e018      	b.n	8002efe <MCAL_GPIO_init+0x1b2>
 8002ecc:	683b      	ldr	r3, [r7, #0]
 8002ece:	789b      	ldrb	r3, [r3, #2]
 8002ed0:	b2db      	uxtb	r3, r3
 8002ed2:	3b04      	subs	r3, #4
 8002ed4:	009b      	lsls	r3, r3, #2
 8002ed6:	683a      	ldr	r2, [r7, #0]
 8002ed8:	78d2      	ldrb	r2, [r2, #3]
 8002eda:	b2d2      	uxtb	r2, r2
 8002edc:	ea43 0402 	orr.w	r4, r3, r2
 8002ee0:	683b      	ldr	r3, [r7, #0]
 8002ee2:	881b      	ldrh	r3, [r3, #0]
 8002ee4:	b29b      	uxth	r3, r3
 8002ee6:	4618      	mov	r0, r3
 8002ee8:	f7ff ff18 	bl	8002d1c <Get_PIN_Positon>
 8002eec:	4603      	mov	r3, r0
 8002eee:	fa04 f203 	lsl.w	r2, r4, r3
 8002ef2:	68fb      	ldr	r3, [r7, #12]
 8002ef4:	681b      	ldr	r3, [r3, #0]
 8002ef6:	431a      	orrs	r2, r3
 8002ef8:	68fb      	ldr	r3, [r7, #12]
 8002efa:	601a      	str	r2, [r3, #0]
 8002efc:	bf00      	nop
 8002efe:	bf00      	nop
 8002f00:	3714      	adds	r7, #20
 8002f02:	46bd      	mov	sp, r7
 8002f04:	bd90      	pop	{r4, r7, pc}
 8002f06:	bf00      	nop
 8002f08:	40010800 	.word	0x40010800
 8002f0c:	40021000 	.word	0x40021000
 8002f10:	40010c00 	.word	0x40010c00
 8002f14:	40011000 	.word	0x40011000
 8002f18:	40011400 	.word	0x40011400
 8002f1c:	40011800 	.word	0x40011800

08002f20 <MCAL_write_PIN>:
 8002f20:	b480      	push	{r7}
 8002f22:	b083      	sub	sp, #12
 8002f24:	af00      	add	r7, sp, #0
 8002f26:	6078      	str	r0, [r7, #4]
 8002f28:	460b      	mov	r3, r1
 8002f2a:	807b      	strh	r3, [r7, #2]
 8002f2c:	4613      	mov	r3, r2
 8002f2e:	707b      	strb	r3, [r7, #1]
 8002f30:	787b      	ldrb	r3, [r7, #1]
 8002f32:	b2db      	uxtb	r3, r3
 8002f34:	2b01      	cmp	r3, #1
 8002f36:	d10b      	bne.n	8002f50 <MCAL_write_PIN+0x30>
 8002f38:	887b      	ldrh	r3, [r7, #2]
 8002f3a:	b29b      	uxth	r3, r3
 8002f3c:	461a      	mov	r2, r3
 8002f3e:	2301      	movs	r3, #1
 8002f40:	fa03 f202 	lsl.w	r2, r3, r2
 8002f44:	687b      	ldr	r3, [r7, #4]
 8002f46:	68db      	ldr	r3, [r3, #12]
 8002f48:	431a      	orrs	r2, r3
 8002f4a:	687b      	ldr	r3, [r7, #4]
 8002f4c:	60da      	str	r2, [r3, #12]
 8002f4e:	e00a      	b.n	8002f66 <MCAL_write_PIN+0x46>
 8002f50:	887b      	ldrh	r3, [r7, #2]
 8002f52:	b29b      	uxth	r3, r3
 8002f54:	461a      	mov	r2, r3
 8002f56:	2301      	movs	r3, #1
 8002f58:	4093      	lsls	r3, r2
 8002f5a:	43da      	mvns	r2, r3
 8002f5c:	687b      	ldr	r3, [r7, #4]
 8002f5e:	68db      	ldr	r3, [r3, #12]
 8002f60:	401a      	ands	r2, r3
 8002f62:	687b      	ldr	r3, [r7, #4]
 8002f64:	60da      	str	r2, [r3, #12]
 8002f66:	bf00      	nop
 8002f68:	370c      	adds	r7, #12
 8002f6a:	46bd      	mov	sp, r7
 8002f6c:	bc80      	pop	{r7}
 8002f6e:	4770      	bx	lr

08002f70 <MCAL_Read_PIN>:
 8002f70:	b480      	push	{r7}
 8002f72:	b083      	sub	sp, #12
 8002f74:	af00      	add	r7, sp, #0
 8002f76:	6078      	str	r0, [r7, #4]
 8002f78:	460b      	mov	r3, r1
 8002f7a:	807b      	strh	r3, [r7, #2]
 8002f7c:	687b      	ldr	r3, [r7, #4]
 8002f7e:	689b      	ldr	r3, [r3, #8]
 8002f80:	887a      	ldrh	r2, [r7, #2]
 8002f82:	b292      	uxth	r2, r2
 8002f84:	40d3      	lsrs	r3, r2
 8002f86:	b29b      	uxth	r3, r3
 8002f88:	f003 0301 	and.w	r3, r3, #1
 8002f8c:	b29b      	uxth	r3, r3
 8002f8e:	4618      	mov	r0, r3
 8002f90:	370c      	adds	r7, #12
 8002f92:	46bd      	mov	sp, r7
 8002f94:	bc80      	pop	{r7}
 8002f96:	4770      	bx	lr

08002f98 <GP_ERROR_HANDLER>:
 * @param [in] - void
 * @param [out] - Void
 * @retval -
 * Note-
 */
void GP_ERROR_HANDLER(){
 8002f98:	b480      	push	{r7}
 8002f9a:	af00      	add	r7, sp, #0
	while(1);
 8002f9c:	e7fe      	b.n	8002f9c <GP_ERROR_HANDLER+0x4>
	...

08002fa0 <MCAL_SET_GP_TIMx_GPIO>:
 * @param [in] - TIM[1 OR 2 OR 3] and the sitting
 * @param [out] - Void
 * @retval -
 * Note-
 */
void MCAL_SET_GP_TIMx_GPIO(GP_TIMx_REG* TIMx,GP_TIMER_Mode MODE,uint8_t CHx){
 8002fa0:	b580      	push	{r7, lr}
 8002fa2:	b084      	sub	sp, #16
 8002fa4:	af00      	add	r7, sp, #0
 8002fa6:	6078      	str	r0, [r7, #4]
 8002fa8:	460b      	mov	r3, r1
 8002faa:	70fb      	strb	r3, [r7, #3]
 8002fac:	4613      	mov	r3, r2
 8002fae:	70bb      	strb	r3, [r7, #2]
	PIN_config pin;
	if(TIMx ==TIM2){
 8002fb0:	687b      	ldr	r3, [r7, #4]
 8002fb2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002fb6:	f040 8084 	bne.w	80030c2 <MCAL_SET_GP_TIMx_GPIO+0x122>
		switch (MODE) {
 8002fba:	78fb      	ldrb	r3, [r7, #3]
 8002fbc:	2b01      	cmp	r3, #1
 8002fbe:	d005      	beq.n	8002fcc <MCAL_SET_GP_TIMx_GPIO+0x2c>
 8002fc0:	2b02      	cmp	r3, #2
 8002fc2:	d03f      	beq.n	8003044 <MCAL_SET_GP_TIMx_GPIO+0xa4>
 8002fc4:	2b00      	cmp	r3, #0
 8002fc6:	f000 81ab 	beq.w	8003320 <MCAL_SET_GP_TIMx_GPIO+0x380>
				default:
					GP_ERROR_HANDLER();
				}
				break;
				default:
					break;
 8002fca:	e1b0      	b.n	800332e <MCAL_SET_GP_TIMx_GPIO+0x38e>
			switch(CHx){
 8002fcc:	78bb      	ldrb	r3, [r7, #2]
 8002fce:	3b01      	subs	r3, #1
 8002fd0:	2b03      	cmp	r3, #3
 8002fd2:	d833      	bhi.n	800303c <MCAL_SET_GP_TIMx_GPIO+0x9c>
 8002fd4:	a201      	add	r2, pc, #4	; (adr r2, 8002fdc <MCAL_SET_GP_TIMx_GPIO+0x3c>)
 8002fd6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002fda:	bf00      	nop
 8002fdc:	08002fed 	.word	0x08002fed
 8002fe0:	08003001 	.word	0x08003001
 8002fe4:	08003015 	.word	0x08003015
 8002fe8:	08003029 	.word	0x08003029
				pin=(PIN_config){PIN_0,OUTPUT_AF_PP,SPEED_10};
 8002fec:	4baf      	ldr	r3, [pc, #700]	; (80032ac <MCAL_SET_GP_TIMx_GPIO+0x30c>)
 8002fee:	681b      	ldr	r3, [r3, #0]
 8002ff0:	60fb      	str	r3, [r7, #12]
				MCAL_GPIO_init(GPIOA, &pin);
 8002ff2:	f107 030c 	add.w	r3, r7, #12
 8002ff6:	4619      	mov	r1, r3
 8002ff8:	48ad      	ldr	r0, [pc, #692]	; (80032b0 <MCAL_SET_GP_TIMx_GPIO+0x310>)
 8002ffa:	f7ff fea7 	bl	8002d4c <MCAL_GPIO_init>
				break;
 8002ffe:	e020      	b.n	8003042 <MCAL_SET_GP_TIMx_GPIO+0xa2>
				pin=(PIN_config){PIN_1,OUTPUT_AF_PP,SPEED_10};
 8003000:	4bac      	ldr	r3, [pc, #688]	; (80032b4 <MCAL_SET_GP_TIMx_GPIO+0x314>)
 8003002:	681b      	ldr	r3, [r3, #0]
 8003004:	60fb      	str	r3, [r7, #12]
				MCAL_GPIO_init(GPIOA, &pin);
 8003006:	f107 030c 	add.w	r3, r7, #12
 800300a:	4619      	mov	r1, r3
 800300c:	48a8      	ldr	r0, [pc, #672]	; (80032b0 <MCAL_SET_GP_TIMx_GPIO+0x310>)
 800300e:	f7ff fe9d 	bl	8002d4c <MCAL_GPIO_init>
				break;
 8003012:	e016      	b.n	8003042 <MCAL_SET_GP_TIMx_GPIO+0xa2>
				pin=(PIN_config){PIN_2,OUTPUT_AF_PP,SPEED_10};
 8003014:	4ba8      	ldr	r3, [pc, #672]	; (80032b8 <MCAL_SET_GP_TIMx_GPIO+0x318>)
 8003016:	681b      	ldr	r3, [r3, #0]
 8003018:	60fb      	str	r3, [r7, #12]
				MCAL_GPIO_init(GPIOA, &pin);
 800301a:	f107 030c 	add.w	r3, r7, #12
 800301e:	4619      	mov	r1, r3
 8003020:	48a3      	ldr	r0, [pc, #652]	; (80032b0 <MCAL_SET_GP_TIMx_GPIO+0x310>)
 8003022:	f7ff fe93 	bl	8002d4c <MCAL_GPIO_init>
				break;
 8003026:	e00c      	b.n	8003042 <MCAL_SET_GP_TIMx_GPIO+0xa2>
				pin=(PIN_config){PIN_3,OUTPUT_AF_PP,SPEED_10};
 8003028:	4ba4      	ldr	r3, [pc, #656]	; (80032bc <MCAL_SET_GP_TIMx_GPIO+0x31c>)
 800302a:	681b      	ldr	r3, [r3, #0]
 800302c:	60fb      	str	r3, [r7, #12]
				MCAL_GPIO_init(GPIOA, &pin);
 800302e:	f107 030c 	add.w	r3, r7, #12
 8003032:	4619      	mov	r1, r3
 8003034:	489e      	ldr	r0, [pc, #632]	; (80032b0 <MCAL_SET_GP_TIMx_GPIO+0x310>)
 8003036:	f7ff fe89 	bl	8002d4c <MCAL_GPIO_init>
				break;
 800303a:	e002      	b.n	8003042 <MCAL_SET_GP_TIMx_GPIO+0xa2>
				GP_ERROR_HANDLER();
 800303c:	f7ff ffac 	bl	8002f98 <GP_ERROR_HANDLER>
			break;
 8003040:	e175      	b.n	800332e <MCAL_SET_GP_TIMx_GPIO+0x38e>
 8003042:	e174      	b.n	800332e <MCAL_SET_GP_TIMx_GPIO+0x38e>
				switch(CHx){
 8003044:	78bb      	ldrb	r3, [r7, #2]
 8003046:	3b01      	subs	r3, #1
 8003048:	2b03      	cmp	r3, #3
 800304a:	d836      	bhi.n	80030ba <MCAL_SET_GP_TIMx_GPIO+0x11a>
 800304c:	a201      	add	r2, pc, #4	; (adr r2, 8003054 <MCAL_SET_GP_TIMx_GPIO+0xb4>)
 800304e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003052:	bf00      	nop
 8003054:	08003065 	.word	0x08003065
 8003058:	0800307f 	.word	0x0800307f
 800305c:	08003093 	.word	0x08003093
 8003060:	080030a7 	.word	0x080030a7
					pin=(PIN_config){PIN_0,INPUT_FI,0};
 8003064:	2300      	movs	r3, #0
 8003066:	81bb      	strh	r3, [r7, #12]
 8003068:	2301      	movs	r3, #1
 800306a:	73bb      	strb	r3, [r7, #14]
 800306c:	2300      	movs	r3, #0
 800306e:	73fb      	strb	r3, [r7, #15]
					MCAL_GPIO_init(GPIOA, &pin);
 8003070:	f107 030c 	add.w	r3, r7, #12
 8003074:	4619      	mov	r1, r3
 8003076:	488e      	ldr	r0, [pc, #568]	; (80032b0 <MCAL_SET_GP_TIMx_GPIO+0x310>)
 8003078:	f7ff fe68 	bl	8002d4c <MCAL_GPIO_init>
					break;
 800307c:	e020      	b.n	80030c0 <MCAL_SET_GP_TIMx_GPIO+0x120>
					pin=(PIN_config){PIN_1,INPUT_FI,0};
 800307e:	4b90      	ldr	r3, [pc, #576]	; (80032c0 <MCAL_SET_GP_TIMx_GPIO+0x320>)
 8003080:	681b      	ldr	r3, [r3, #0]
 8003082:	60fb      	str	r3, [r7, #12]
					MCAL_GPIO_init(GPIOA, &pin);
 8003084:	f107 030c 	add.w	r3, r7, #12
 8003088:	4619      	mov	r1, r3
 800308a:	4889      	ldr	r0, [pc, #548]	; (80032b0 <MCAL_SET_GP_TIMx_GPIO+0x310>)
 800308c:	f7ff fe5e 	bl	8002d4c <MCAL_GPIO_init>
					break;
 8003090:	e016      	b.n	80030c0 <MCAL_SET_GP_TIMx_GPIO+0x120>
					pin=(PIN_config){PIN_2,INPUT_FI,0};
 8003092:	4b8c      	ldr	r3, [pc, #560]	; (80032c4 <MCAL_SET_GP_TIMx_GPIO+0x324>)
 8003094:	681b      	ldr	r3, [r3, #0]
 8003096:	60fb      	str	r3, [r7, #12]
					MCAL_GPIO_init(GPIOA, &pin);
 8003098:	f107 030c 	add.w	r3, r7, #12
 800309c:	4619      	mov	r1, r3
 800309e:	4884      	ldr	r0, [pc, #528]	; (80032b0 <MCAL_SET_GP_TIMx_GPIO+0x310>)
 80030a0:	f7ff fe54 	bl	8002d4c <MCAL_GPIO_init>
					break;
 80030a4:	e00c      	b.n	80030c0 <MCAL_SET_GP_TIMx_GPIO+0x120>
					pin=(PIN_config){PIN_3,INPUT_FI,0};
 80030a6:	4b88      	ldr	r3, [pc, #544]	; (80032c8 <MCAL_SET_GP_TIMx_GPIO+0x328>)
 80030a8:	681b      	ldr	r3, [r3, #0]
 80030aa:	60fb      	str	r3, [r7, #12]
					MCAL_GPIO_init(GPIOA, &pin);
 80030ac:	f107 030c 	add.w	r3, r7, #12
 80030b0:	4619      	mov	r1, r3
 80030b2:	487f      	ldr	r0, [pc, #508]	; (80032b0 <MCAL_SET_GP_TIMx_GPIO+0x310>)
 80030b4:	f7ff fe4a 	bl	8002d4c <MCAL_GPIO_init>
					break;
 80030b8:	e002      	b.n	80030c0 <MCAL_SET_GP_TIMx_GPIO+0x120>
					GP_ERROR_HANDLER();
 80030ba:	f7ff ff6d 	bl	8002f98 <GP_ERROR_HANDLER>
				break;
 80030be:	e136      	b.n	800332e <MCAL_SET_GP_TIMx_GPIO+0x38e>
 80030c0:	e135      	b.n	800332e <MCAL_SET_GP_TIMx_GPIO+0x38e>
		}

	}else if(TIMx ==TIM3){
 80030c2:	687b      	ldr	r3, [r7, #4]
 80030c4:	4a81      	ldr	r2, [pc, #516]	; (80032cc <MCAL_SET_GP_TIMx_GPIO+0x32c>)
 80030c6:	4293      	cmp	r3, r2
 80030c8:	f040 8083 	bne.w	80031d2 <MCAL_SET_GP_TIMx_GPIO+0x232>
		switch (MODE) {
 80030cc:	78fb      	ldrb	r3, [r7, #3]
 80030ce:	2b01      	cmp	r3, #1
 80030d0:	d005      	beq.n	80030de <MCAL_SET_GP_TIMx_GPIO+0x13e>
 80030d2:	2b02      	cmp	r3, #2
 80030d4:	d03e      	beq.n	8003154 <MCAL_SET_GP_TIMx_GPIO+0x1b4>
 80030d6:	2b00      	cmp	r3, #0
 80030d8:	f000 8124 	beq.w	8003324 <MCAL_SET_GP_TIMx_GPIO+0x384>
				default:
					GP_ERROR_HANDLER();
				}
				break;
				default:
					break;
 80030dc:	e127      	b.n	800332e <MCAL_SET_GP_TIMx_GPIO+0x38e>
			switch(CHx){
 80030de:	78bb      	ldrb	r3, [r7, #2]
 80030e0:	3b01      	subs	r3, #1
 80030e2:	2b03      	cmp	r3, #3
 80030e4:	d832      	bhi.n	800314c <MCAL_SET_GP_TIMx_GPIO+0x1ac>
 80030e6:	a201      	add	r2, pc, #4	; (adr r2, 80030ec <MCAL_SET_GP_TIMx_GPIO+0x14c>)
 80030e8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80030ec:	080030fd 	.word	0x080030fd
 80030f0:	08003111 	.word	0x08003111
 80030f4:	08003125 	.word	0x08003125
 80030f8:	08003139 	.word	0x08003139
				pin=(PIN_config){PIN_6,OUTPUT_AF_PP,SPEED_10};
 80030fc:	4b74      	ldr	r3, [pc, #464]	; (80032d0 <MCAL_SET_GP_TIMx_GPIO+0x330>)
 80030fe:	681b      	ldr	r3, [r3, #0]
 8003100:	60fb      	str	r3, [r7, #12]
				MCAL_GPIO_init(GPIOA, &pin);
 8003102:	f107 030c 	add.w	r3, r7, #12
 8003106:	4619      	mov	r1, r3
 8003108:	4869      	ldr	r0, [pc, #420]	; (80032b0 <MCAL_SET_GP_TIMx_GPIO+0x310>)
 800310a:	f7ff fe1f 	bl	8002d4c <MCAL_GPIO_init>
				break;
 800310e:	e020      	b.n	8003152 <MCAL_SET_GP_TIMx_GPIO+0x1b2>
				pin=(PIN_config){PIN_7,OUTPUT_AF_PP,SPEED_10};
 8003110:	4b70      	ldr	r3, [pc, #448]	; (80032d4 <MCAL_SET_GP_TIMx_GPIO+0x334>)
 8003112:	681b      	ldr	r3, [r3, #0]
 8003114:	60fb      	str	r3, [r7, #12]
				MCAL_GPIO_init(GPIOA, &pin);
 8003116:	f107 030c 	add.w	r3, r7, #12
 800311a:	4619      	mov	r1, r3
 800311c:	4864      	ldr	r0, [pc, #400]	; (80032b0 <MCAL_SET_GP_TIMx_GPIO+0x310>)
 800311e:	f7ff fe15 	bl	8002d4c <MCAL_GPIO_init>
				break;
 8003122:	e016      	b.n	8003152 <MCAL_SET_GP_TIMx_GPIO+0x1b2>
				pin=(PIN_config){PIN_0,OUTPUT_AF_PP,SPEED_10};
 8003124:	4b61      	ldr	r3, [pc, #388]	; (80032ac <MCAL_SET_GP_TIMx_GPIO+0x30c>)
 8003126:	681b      	ldr	r3, [r3, #0]
 8003128:	60fb      	str	r3, [r7, #12]
				MCAL_GPIO_init(GPIOB, &pin);
 800312a:	f107 030c 	add.w	r3, r7, #12
 800312e:	4619      	mov	r1, r3
 8003130:	4869      	ldr	r0, [pc, #420]	; (80032d8 <MCAL_SET_GP_TIMx_GPIO+0x338>)
 8003132:	f7ff fe0b 	bl	8002d4c <MCAL_GPIO_init>
				break;
 8003136:	e00c      	b.n	8003152 <MCAL_SET_GP_TIMx_GPIO+0x1b2>
				pin=(PIN_config){PIN_1,OUTPUT_AF_PP,SPEED_10};
 8003138:	4b5e      	ldr	r3, [pc, #376]	; (80032b4 <MCAL_SET_GP_TIMx_GPIO+0x314>)
 800313a:	681b      	ldr	r3, [r3, #0]
 800313c:	60fb      	str	r3, [r7, #12]
				MCAL_GPIO_init(GPIOB, &pin);
 800313e:	f107 030c 	add.w	r3, r7, #12
 8003142:	4619      	mov	r1, r3
 8003144:	4864      	ldr	r0, [pc, #400]	; (80032d8 <MCAL_SET_GP_TIMx_GPIO+0x338>)
 8003146:	f7ff fe01 	bl	8002d4c <MCAL_GPIO_init>
				break;
 800314a:	e002      	b.n	8003152 <MCAL_SET_GP_TIMx_GPIO+0x1b2>
				GP_ERROR_HANDLER();
 800314c:	f7ff ff24 	bl	8002f98 <GP_ERROR_HANDLER>
			break;
 8003150:	e0ed      	b.n	800332e <MCAL_SET_GP_TIMx_GPIO+0x38e>
 8003152:	e0ec      	b.n	800332e <MCAL_SET_GP_TIMx_GPIO+0x38e>
				switch(CHx){
 8003154:	78bb      	ldrb	r3, [r7, #2]
 8003156:	3b01      	subs	r3, #1
 8003158:	2b03      	cmp	r3, #3
 800315a:	d836      	bhi.n	80031ca <MCAL_SET_GP_TIMx_GPIO+0x22a>
 800315c:	a201      	add	r2, pc, #4	; (adr r2, 8003164 <MCAL_SET_GP_TIMx_GPIO+0x1c4>)
 800315e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003162:	bf00      	nop
 8003164:	08003175 	.word	0x08003175
 8003168:	08003189 	.word	0x08003189
 800316c:	0800319d 	.word	0x0800319d
 8003170:	080031b7 	.word	0x080031b7
					pin=(PIN_config){PIN_6,INPUT_FI,0};
 8003174:	4b59      	ldr	r3, [pc, #356]	; (80032dc <MCAL_SET_GP_TIMx_GPIO+0x33c>)
 8003176:	681b      	ldr	r3, [r3, #0]
 8003178:	60fb      	str	r3, [r7, #12]
					MCAL_GPIO_init(GPIOA, &pin);
 800317a:	f107 030c 	add.w	r3, r7, #12
 800317e:	4619      	mov	r1, r3
 8003180:	484b      	ldr	r0, [pc, #300]	; (80032b0 <MCAL_SET_GP_TIMx_GPIO+0x310>)
 8003182:	f7ff fde3 	bl	8002d4c <MCAL_GPIO_init>
					break;
 8003186:	e023      	b.n	80031d0 <MCAL_SET_GP_TIMx_GPIO+0x230>
					pin=(PIN_config){PIN_7,INPUT_FI,0};
 8003188:	4b55      	ldr	r3, [pc, #340]	; (80032e0 <MCAL_SET_GP_TIMx_GPIO+0x340>)
 800318a:	681b      	ldr	r3, [r3, #0]
 800318c:	60fb      	str	r3, [r7, #12]
					MCAL_GPIO_init(GPIOA, &pin);
 800318e:	f107 030c 	add.w	r3, r7, #12
 8003192:	4619      	mov	r1, r3
 8003194:	4846      	ldr	r0, [pc, #280]	; (80032b0 <MCAL_SET_GP_TIMx_GPIO+0x310>)
 8003196:	f7ff fdd9 	bl	8002d4c <MCAL_GPIO_init>
					break;
 800319a:	e019      	b.n	80031d0 <MCAL_SET_GP_TIMx_GPIO+0x230>
					pin=(PIN_config){PIN_0,INPUT_FI,0};
 800319c:	2300      	movs	r3, #0
 800319e:	81bb      	strh	r3, [r7, #12]
 80031a0:	2301      	movs	r3, #1
 80031a2:	73bb      	strb	r3, [r7, #14]
 80031a4:	2300      	movs	r3, #0
 80031a6:	73fb      	strb	r3, [r7, #15]
					MCAL_GPIO_init(GPIOB, &pin);
 80031a8:	f107 030c 	add.w	r3, r7, #12
 80031ac:	4619      	mov	r1, r3
 80031ae:	484a      	ldr	r0, [pc, #296]	; (80032d8 <MCAL_SET_GP_TIMx_GPIO+0x338>)
 80031b0:	f7ff fdcc 	bl	8002d4c <MCAL_GPIO_init>
					break;
 80031b4:	e00c      	b.n	80031d0 <MCAL_SET_GP_TIMx_GPIO+0x230>
					pin=(PIN_config){PIN_1,INPUT_FI,0};
 80031b6:	4b42      	ldr	r3, [pc, #264]	; (80032c0 <MCAL_SET_GP_TIMx_GPIO+0x320>)
 80031b8:	681b      	ldr	r3, [r3, #0]
 80031ba:	60fb      	str	r3, [r7, #12]
					MCAL_GPIO_init(GPIOB, &pin);
 80031bc:	f107 030c 	add.w	r3, r7, #12
 80031c0:	4619      	mov	r1, r3
 80031c2:	4845      	ldr	r0, [pc, #276]	; (80032d8 <MCAL_SET_GP_TIMx_GPIO+0x338>)
 80031c4:	f7ff fdc2 	bl	8002d4c <MCAL_GPIO_init>
					break;
 80031c8:	e002      	b.n	80031d0 <MCAL_SET_GP_TIMx_GPIO+0x230>
					GP_ERROR_HANDLER();
 80031ca:	f7ff fee5 	bl	8002f98 <GP_ERROR_HANDLER>
				break;
 80031ce:	e0ae      	b.n	800332e <MCAL_SET_GP_TIMx_GPIO+0x38e>
 80031d0:	e0ad      	b.n	800332e <MCAL_SET_GP_TIMx_GPIO+0x38e>
		}



	}else if(TIMx ==TIM4){
 80031d2:	687b      	ldr	r3, [r7, #4]
 80031d4:	4a43      	ldr	r2, [pc, #268]	; (80032e4 <MCAL_SET_GP_TIMx_GPIO+0x344>)
 80031d6:	4293      	cmp	r3, r2
 80031d8:	f040 80a6 	bne.w	8003328 <MCAL_SET_GP_TIMx_GPIO+0x388>
		switch (MODE) {
 80031dc:	78fb      	ldrb	r3, [r7, #3]
 80031de:	2b01      	cmp	r3, #1
 80031e0:	d005      	beq.n	80031ee <MCAL_SET_GP_TIMx_GPIO+0x24e>
 80031e2:	2b02      	cmp	r3, #2
 80031e4:	d03e      	beq.n	8003264 <MCAL_SET_GP_TIMx_GPIO+0x2c4>
 80031e6:	2b00      	cmp	r3, #0
 80031e8:	f000 80a0 	beq.w	800332c <MCAL_SET_GP_TIMx_GPIO+0x38c>
				default:
					GP_ERROR_HANDLER();
				}
				break;
				default:
					break;
 80031ec:	e09f      	b.n	800332e <MCAL_SET_GP_TIMx_GPIO+0x38e>
			switch(CHx){
 80031ee:	78bb      	ldrb	r3, [r7, #2]
 80031f0:	3b01      	subs	r3, #1
 80031f2:	2b03      	cmp	r3, #3
 80031f4:	d832      	bhi.n	800325c <MCAL_SET_GP_TIMx_GPIO+0x2bc>
 80031f6:	a201      	add	r2, pc, #4	; (adr r2, 80031fc <MCAL_SET_GP_TIMx_GPIO+0x25c>)
 80031f8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80031fc:	0800320d 	.word	0x0800320d
 8003200:	08003221 	.word	0x08003221
 8003204:	08003235 	.word	0x08003235
 8003208:	08003249 	.word	0x08003249
				pin=(PIN_config){PIN_6,OUTPUT_AF_PP,SPEED_10};
 800320c:	4b30      	ldr	r3, [pc, #192]	; (80032d0 <MCAL_SET_GP_TIMx_GPIO+0x330>)
 800320e:	681b      	ldr	r3, [r3, #0]
 8003210:	60fb      	str	r3, [r7, #12]
				MCAL_GPIO_init(GPIOB, &pin);
 8003212:	f107 030c 	add.w	r3, r7, #12
 8003216:	4619      	mov	r1, r3
 8003218:	482f      	ldr	r0, [pc, #188]	; (80032d8 <MCAL_SET_GP_TIMx_GPIO+0x338>)
 800321a:	f7ff fd97 	bl	8002d4c <MCAL_GPIO_init>
				break;
 800321e:	e020      	b.n	8003262 <MCAL_SET_GP_TIMx_GPIO+0x2c2>
				pin=(PIN_config){PIN_7,OUTPUT_AF_PP,SPEED_10};
 8003220:	4b2c      	ldr	r3, [pc, #176]	; (80032d4 <MCAL_SET_GP_TIMx_GPIO+0x334>)
 8003222:	681b      	ldr	r3, [r3, #0]
 8003224:	60fb      	str	r3, [r7, #12]
				MCAL_GPIO_init(GPIOB, &pin);
 8003226:	f107 030c 	add.w	r3, r7, #12
 800322a:	4619      	mov	r1, r3
 800322c:	482a      	ldr	r0, [pc, #168]	; (80032d8 <MCAL_SET_GP_TIMx_GPIO+0x338>)
 800322e:	f7ff fd8d 	bl	8002d4c <MCAL_GPIO_init>
				break;
 8003232:	e016      	b.n	8003262 <MCAL_SET_GP_TIMx_GPIO+0x2c2>
				pin=(PIN_config){PIN_8,OUTPUT_AF_PP,SPEED_10};
 8003234:	4b2c      	ldr	r3, [pc, #176]	; (80032e8 <MCAL_SET_GP_TIMx_GPIO+0x348>)
 8003236:	681b      	ldr	r3, [r3, #0]
 8003238:	60fb      	str	r3, [r7, #12]
				MCAL_GPIO_init(GPIOB, &pin);
 800323a:	f107 030c 	add.w	r3, r7, #12
 800323e:	4619      	mov	r1, r3
 8003240:	4825      	ldr	r0, [pc, #148]	; (80032d8 <MCAL_SET_GP_TIMx_GPIO+0x338>)
 8003242:	f7ff fd83 	bl	8002d4c <MCAL_GPIO_init>
				break;
 8003246:	e00c      	b.n	8003262 <MCAL_SET_GP_TIMx_GPIO+0x2c2>
				pin=(PIN_config){PIN_9,OUTPUT_AF_PP,SPEED_10};
 8003248:	4b28      	ldr	r3, [pc, #160]	; (80032ec <MCAL_SET_GP_TIMx_GPIO+0x34c>)
 800324a:	681b      	ldr	r3, [r3, #0]
 800324c:	60fb      	str	r3, [r7, #12]
				MCAL_GPIO_init(GPIOB, &pin);
 800324e:	f107 030c 	add.w	r3, r7, #12
 8003252:	4619      	mov	r1, r3
 8003254:	4820      	ldr	r0, [pc, #128]	; (80032d8 <MCAL_SET_GP_TIMx_GPIO+0x338>)
 8003256:	f7ff fd79 	bl	8002d4c <MCAL_GPIO_init>
				break;
 800325a:	e002      	b.n	8003262 <MCAL_SET_GP_TIMx_GPIO+0x2c2>
				GP_ERROR_HANDLER();
 800325c:	f7ff fe9c 	bl	8002f98 <GP_ERROR_HANDLER>
			break;
 8003260:	e065      	b.n	800332e <MCAL_SET_GP_TIMx_GPIO+0x38e>
 8003262:	e064      	b.n	800332e <MCAL_SET_GP_TIMx_GPIO+0x38e>
				switch(CHx){
 8003264:	78bb      	ldrb	r3, [r7, #2]
 8003266:	3b01      	subs	r3, #1
 8003268:	2b03      	cmp	r3, #3
 800326a:	d855      	bhi.n	8003318 <MCAL_SET_GP_TIMx_GPIO+0x378>
 800326c:	a201      	add	r2, pc, #4	; (adr r2, 8003274 <MCAL_SET_GP_TIMx_GPIO+0x2d4>)
 800326e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003272:	bf00      	nop
 8003274:	08003285 	.word	0x08003285
 8003278:	08003299 	.word	0x08003299
 800327c:	080032f1 	.word	0x080032f1
 8003280:	08003305 	.word	0x08003305
					pin=(PIN_config){PIN_6,INPUT_FI,0};
 8003284:	4b15      	ldr	r3, [pc, #84]	; (80032dc <MCAL_SET_GP_TIMx_GPIO+0x33c>)
 8003286:	681b      	ldr	r3, [r3, #0]
 8003288:	60fb      	str	r3, [r7, #12]
					MCAL_GPIO_init(GPIOB, &pin);
 800328a:	f107 030c 	add.w	r3, r7, #12
 800328e:	4619      	mov	r1, r3
 8003290:	4811      	ldr	r0, [pc, #68]	; (80032d8 <MCAL_SET_GP_TIMx_GPIO+0x338>)
 8003292:	f7ff fd5b 	bl	8002d4c <MCAL_GPIO_init>
					break;
 8003296:	e042      	b.n	800331e <MCAL_SET_GP_TIMx_GPIO+0x37e>
					pin=(PIN_config){PIN_7,INPUT_FI,0};
 8003298:	4b11      	ldr	r3, [pc, #68]	; (80032e0 <MCAL_SET_GP_TIMx_GPIO+0x340>)
 800329a:	681b      	ldr	r3, [r3, #0]
 800329c:	60fb      	str	r3, [r7, #12]
					MCAL_GPIO_init(GPIOB, &pin);
 800329e:	f107 030c 	add.w	r3, r7, #12
 80032a2:	4619      	mov	r1, r3
 80032a4:	480c      	ldr	r0, [pc, #48]	; (80032d8 <MCAL_SET_GP_TIMx_GPIO+0x338>)
 80032a6:	f7ff fd51 	bl	8002d4c <MCAL_GPIO_init>
					break;
 80032aa:	e038      	b.n	800331e <MCAL_SET_GP_TIMx_GPIO+0x37e>
 80032ac:	08005700 	.word	0x08005700
 80032b0:	40010800 	.word	0x40010800
 80032b4:	08005704 	.word	0x08005704
 80032b8:	08005708 	.word	0x08005708
 80032bc:	0800570c 	.word	0x0800570c
 80032c0:	08005710 	.word	0x08005710
 80032c4:	08005714 	.word	0x08005714
 80032c8:	08005718 	.word	0x08005718
 80032cc:	40000400 	.word	0x40000400
 80032d0:	0800571c 	.word	0x0800571c
 80032d4:	08005720 	.word	0x08005720
 80032d8:	40010c00 	.word	0x40010c00
 80032dc:	08005724 	.word	0x08005724
 80032e0:	08005728 	.word	0x08005728
 80032e4:	40000800 	.word	0x40000800
 80032e8:	0800572c 	.word	0x0800572c
 80032ec:	08005730 	.word	0x08005730
					pin=(PIN_config){PIN_8,INPUT_FI,0};
 80032f0:	4b11      	ldr	r3, [pc, #68]	; (8003338 <MCAL_SET_GP_TIMx_GPIO+0x398>)
 80032f2:	681b      	ldr	r3, [r3, #0]
 80032f4:	60fb      	str	r3, [r7, #12]
					MCAL_GPIO_init(GPIOB, &pin);
 80032f6:	f107 030c 	add.w	r3, r7, #12
 80032fa:	4619      	mov	r1, r3
 80032fc:	480f      	ldr	r0, [pc, #60]	; (800333c <MCAL_SET_GP_TIMx_GPIO+0x39c>)
 80032fe:	f7ff fd25 	bl	8002d4c <MCAL_GPIO_init>
					break;
 8003302:	e00c      	b.n	800331e <MCAL_SET_GP_TIMx_GPIO+0x37e>
					pin=(PIN_config){PIN_9,INPUT_FI,0};
 8003304:	4b0e      	ldr	r3, [pc, #56]	; (8003340 <MCAL_SET_GP_TIMx_GPIO+0x3a0>)
 8003306:	681b      	ldr	r3, [r3, #0]
 8003308:	60fb      	str	r3, [r7, #12]
					MCAL_GPIO_init(GPIOB, &pin);
 800330a:	f107 030c 	add.w	r3, r7, #12
 800330e:	4619      	mov	r1, r3
 8003310:	480a      	ldr	r0, [pc, #40]	; (800333c <MCAL_SET_GP_TIMx_GPIO+0x39c>)
 8003312:	f7ff fd1b 	bl	8002d4c <MCAL_GPIO_init>
					break;
 8003316:	e002      	b.n	800331e <MCAL_SET_GP_TIMx_GPIO+0x37e>
					GP_ERROR_HANDLER();
 8003318:	f7ff fe3e 	bl	8002f98 <GP_ERROR_HANDLER>
				break;
 800331c:	e007      	b.n	800332e <MCAL_SET_GP_TIMx_GPIO+0x38e>
 800331e:	e006      	b.n	800332e <MCAL_SET_GP_TIMx_GPIO+0x38e>
			break;
 8003320:	bf00      	nop
 8003322:	e004      	b.n	800332e <MCAL_SET_GP_TIMx_GPIO+0x38e>
			break;
 8003324:	bf00      	nop
 8003326:	e002      	b.n	800332e <MCAL_SET_GP_TIMx_GPIO+0x38e>
		}
		//////////



	}
 8003328:	bf00      	nop
 800332a:	e000      	b.n	800332e <MCAL_SET_GP_TIMx_GPIO+0x38e>
			break;
 800332c:	bf00      	nop
}
 800332e:	bf00      	nop
 8003330:	3710      	adds	r7, #16
 8003332:	46bd      	mov	sp, r7
 8003334:	bd80      	pop	{r7, pc}
 8003336:	bf00      	nop
 8003338:	08005734 	.word	0x08005734
 800333c:	40010c00 	.word	0x40010c00
 8003340:	08005738 	.word	0x08005738

08003344 <GP_TIMx_start>:
 * @param [in] - TIM[1 OR 2 OR 3] and the sitting
 * @param [out] - Void
 * @retval -
 * Note-
 */
void GP_TIMx_start(GP_TIMx_REG* TIMx,GP_TIMERx_config* Sitting,GP_TIMERx_NORMAL_config* NORMAL_SITTING){
 8003344:	b590      	push	{r4, r7, lr}
 8003346:	b085      	sub	sp, #20
 8003348:	af00      	add	r7, sp, #0
 800334a:	60f8      	str	r0, [r7, #12]
 800334c:	60b9      	str	r1, [r7, #8]
 800334e:	607a      	str	r2, [r7, #4]

	if(Sitting->mode==NORMAL){
 8003350:	68bb      	ldr	r3, [r7, #8]
 8003352:	7a5b      	ldrb	r3, [r3, #9]
 8003354:	2b00      	cmp	r3, #0
 8003356:	f040 80be 	bne.w	80034d6 <GP_TIMx_start+0x192>
		GP_TIMx_Deint(TIMx);
 800335a:	68f8      	ldr	r0, [r7, #12]
 800335c:	f000 f8ce 	bl	80034fc <GP_TIMx_Deint>

		g_GP_TIMX=TIMx;
 8003360:	4a60      	ldr	r2, [pc, #384]	; (80034e4 <GP_TIMx_start+0x1a0>)
 8003362:	68fb      	ldr	r3, [r7, #12]
 8003364:	6013      	str	r3, [r2, #0]
		if(TIMx== TIM2){RCC->APB1ENR|=(1<<0);			g_GP_Sitting[0]=(* Sitting);	}
 8003366:	68fb      	ldr	r3, [r7, #12]
 8003368:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800336c:	d10c      	bne.n	8003388 <GP_TIMx_start+0x44>
 800336e:	4b5e      	ldr	r3, [pc, #376]	; (80034e8 <GP_TIMx_start+0x1a4>)
 8003370:	69db      	ldr	r3, [r3, #28]
 8003372:	4a5d      	ldr	r2, [pc, #372]	; (80034e8 <GP_TIMx_start+0x1a4>)
 8003374:	f043 0301 	orr.w	r3, r3, #1
 8003378:	61d3      	str	r3, [r2, #28]
 800337a:	4a5c      	ldr	r2, [pc, #368]	; (80034ec <GP_TIMx_start+0x1a8>)
 800337c:	68bb      	ldr	r3, [r7, #8]
 800337e:	4614      	mov	r4, r2
 8003380:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8003382:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8003386:	e024      	b.n	80033d2 <GP_TIMx_start+0x8e>
		else if(TIMx== TIM3) {RCC->APB1ENR|=(1<<1);	g_GP_Sitting[1]=(* Sitting);	}
 8003388:	68fb      	ldr	r3, [r7, #12]
 800338a:	4a59      	ldr	r2, [pc, #356]	; (80034f0 <GP_TIMx_start+0x1ac>)
 800338c:	4293      	cmp	r3, r2
 800338e:	d10e      	bne.n	80033ae <GP_TIMx_start+0x6a>
 8003390:	4b55      	ldr	r3, [pc, #340]	; (80034e8 <GP_TIMx_start+0x1a4>)
 8003392:	69db      	ldr	r3, [r3, #28]
 8003394:	4a54      	ldr	r2, [pc, #336]	; (80034e8 <GP_TIMx_start+0x1a4>)
 8003396:	f043 0302 	orr.w	r3, r3, #2
 800339a:	61d3      	str	r3, [r2, #28]
 800339c:	4b53      	ldr	r3, [pc, #332]	; (80034ec <GP_TIMx_start+0x1a8>)
 800339e:	68ba      	ldr	r2, [r7, #8]
 80033a0:	f103 0410 	add.w	r4, r3, #16
 80033a4:	4613      	mov	r3, r2
 80033a6:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80033a8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80033ac:	e011      	b.n	80033d2 <GP_TIMx_start+0x8e>
		else if(TIMx== TIM4) {RCC->APB1ENR|=(1<<2);		g_GP_Sitting[2]=(* Sitting);}
 80033ae:	68fb      	ldr	r3, [r7, #12]
 80033b0:	4a50      	ldr	r2, [pc, #320]	; (80034f4 <GP_TIMx_start+0x1b0>)
 80033b2:	4293      	cmp	r3, r2
 80033b4:	d10d      	bne.n	80033d2 <GP_TIMx_start+0x8e>
 80033b6:	4b4c      	ldr	r3, [pc, #304]	; (80034e8 <GP_TIMx_start+0x1a4>)
 80033b8:	69db      	ldr	r3, [r3, #28]
 80033ba:	4a4b      	ldr	r2, [pc, #300]	; (80034e8 <GP_TIMx_start+0x1a4>)
 80033bc:	f043 0304 	orr.w	r3, r3, #4
 80033c0:	61d3      	str	r3, [r2, #28]
 80033c2:	4b4a      	ldr	r3, [pc, #296]	; (80034ec <GP_TIMx_start+0x1a8>)
 80033c4:	68ba      	ldr	r2, [r7, #8]
 80033c6:	f103 0420 	add.w	r4, r3, #32
 80033ca:	4613      	mov	r3, r2
 80033cc:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80033ce:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}

		// 2.select the pre vale
		TIMx->PSC=Sitting->TIME_PSC -1;
 80033d2:	68bb      	ldr	r3, [r7, #8]
 80033d4:	881b      	ldrh	r3, [r3, #0]
 80033d6:	3b01      	subs	r3, #1
 80033d8:	461a      	mov	r2, r3
 80033da:	68fb      	ldr	r3, [r7, #12]
 80033dc:	629a      	str	r2, [r3, #40]	; 0x28

		TIMx->ARR=Sitting->TIME_ARR;
 80033de:	68bb      	ldr	r3, [r7, #8]
 80033e0:	885b      	ldrh	r3, [r3, #2]
 80033e2:	461a      	mov	r2, r3
 80033e4:	68fb      	ldr	r3, [r7, #12]
 80033e6:	62da      	str	r2, [r3, #44]	; 0x2c

		TIMx->RCR=Sitting->TIME_RCR;
 80033e8:	68bb      	ldr	r3, [r7, #8]
 80033ea:	889b      	ldrh	r3, [r3, #4]
 80033ec:	461a      	mov	r2, r3
 80033ee:	68fb      	ldr	r3, [r7, #12]
 80033f0:	631a      	str	r2, [r3, #48]	; 0x30

		if(Sitting->TIME_RCR)
 80033f2:	68bb      	ldr	r3, [r7, #8]
 80033f4:	889b      	ldrh	r3, [r3, #4]
 80033f6:	2b00      	cmp	r3, #0
 80033f8:	d004      	beq.n	8003404 <GP_TIMx_start+0xc0>
			TIMx->CR1.BIT_NAME.ARPE=1;
 80033fa:	68fa      	ldr	r2, [r7, #12]
 80033fc:	6813      	ldr	r3, [r2, #0]
 80033fe:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003402:	6013      	str	r3, [r2, #0]

		//1.Select the mode CMS[1:0]
		switch(NORMAL_SITTING->NORMAL_MODE){
 8003404:	687b      	ldr	r3, [r7, #4]
 8003406:	781b      	ldrb	r3, [r3, #0]
 8003408:	2b01      	cmp	r3, #1
 800340a:	d00e      	beq.n	800342a <GP_TIMx_start+0xe6>
 800340c:	2b02      	cmp	r3, #2
 800340e:	d017      	beq.n	8003440 <GP_TIMx_start+0xfc>
 8003410:	2b00      	cmp	r3, #0
 8003412:	d11b      	bne.n	800344c <GP_TIMx_start+0x108>
		case Up:
			TIMx->CR1.BIT_NAME.CMS=0b00; //00: Edge-aligned mode. The counter counts up or down depending on the direction bit (DIR).
 8003414:	68fa      	ldr	r2, [r7, #12]
 8003416:	6813      	ldr	r3, [r2, #0]
 8003418:	f36f 1346 	bfc	r3, #5, #2
 800341c:	6013      	str	r3, [r2, #0]
			TIMx->CR1.BIT_NAME.DIR=0; //0: Counter used as upcounter
 800341e:	68fa      	ldr	r2, [r7, #12]
 8003420:	6813      	ldr	r3, [r2, #0]
 8003422:	f36f 1304 	bfc	r3, #4, #1
 8003426:	6013      	str	r3, [r2, #0]
			break;
 8003428:	e013      	b.n	8003452 <GP_TIMx_start+0x10e>
		case DOWN:
			TIMx->CR1.BIT_NAME.CMS=0b00; //00: Edge-aligned mode. The counter counts up or down depending on the direction bit (DIR).
 800342a:	68fa      	ldr	r2, [r7, #12]
 800342c:	6813      	ldr	r3, [r2, #0]
 800342e:	f36f 1346 	bfc	r3, #5, #2
 8003432:	6013      	str	r3, [r2, #0]
			TIMx->CR1.BIT_NAME.DIR=1; //1: Counter used as downcounter
 8003434:	68fa      	ldr	r2, [r7, #12]
 8003436:	6813      	ldr	r3, [r2, #0]
 8003438:	f043 0310 	orr.w	r3, r3, #16
 800343c:	6013      	str	r3, [r2, #0]
			break;
 800343e:	e008      	b.n	8003452 <GP_TIMx_start+0x10e>
		case Up_Down:
			TIMx->CR1.BIT_NAME.CMS=0b11;
 8003440:	68fa      	ldr	r2, [r7, #12]
 8003442:	6813      	ldr	r3, [r2, #0]
 8003444:	f043 0360 	orr.w	r3, r3, #96	; 0x60
 8003448:	6013      	str	r3, [r2, #0]
			/*11: Center-aligned mode 3. The counter counts up and down alternatively. Output compare
		interrupt flags of channels configured in output (CCxS=00 in TIMx_CCMRx register) are set
		both when the counter is counting up or down*/
			break;
 800344a:	e002      	b.n	8003452 <GP_TIMx_start+0x10e>
		default:
			GP_ERROR_HANDLER();
 800344c:	f7ff fda4 	bl	8002f98 <GP_ERROR_HANDLER>
			break;
 8003450:	bf00      	nop
		}
		MCAL_SET_GP_TIMx_GPIO(TIMx,NORMAL,0);
 8003452:	2200      	movs	r2, #0
 8003454:	2100      	movs	r1, #0
 8003456:	68f8      	ldr	r0, [r7, #12]
 8003458:	f7ff fda2 	bl	8002fa0 <MCAL_SET_GP_TIMx_GPIO>
		TIMx->CR1.BIT_NAME.CEN=1;
 800345c:	68fa      	ldr	r2, [r7, #12]
 800345e:	6813      	ldr	r3, [r2, #0]
 8003460:	f043 0301 	orr.w	r3, r3, #1
 8003464:	6013      	str	r3, [r2, #0]

		if(Sitting->INT_EN_DIS==INT_EN){
 8003466:	68bb      	ldr	r3, [r7, #8]
 8003468:	7a1b      	ldrb	r3, [r3, #8]
 800346a:	2b00      	cmp	r3, #0
 800346c:	d125      	bne.n	80034ba <GP_TIMx_start+0x176>
			TIMx->DIER.BIT_NAME.UIE=1;
 800346e:	68fa      	ldr	r2, [r7, #12]
 8003470:	68d3      	ldr	r3, [r2, #12]
 8003472:	f043 0301 	orr.w	r3, r3, #1
 8003476:	60d3      	str	r3, [r2, #12]
			if(TIMx== TIM2) 	NVIC_ISER0|=(1<<28);
 8003478:	68fb      	ldr	r3, [r7, #12]
 800347a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800347e:	d106      	bne.n	800348e <GP_TIMx_start+0x14a>
 8003480:	4b1d      	ldr	r3, [pc, #116]	; (80034f8 <GP_TIMx_start+0x1b4>)
 8003482:	681b      	ldr	r3, [r3, #0]
 8003484:	4a1c      	ldr	r2, [pc, #112]	; (80034f8 <GP_TIMx_start+0x1b4>)
 8003486:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800348a:	6013      	str	r3, [r2, #0]
			TIMx->SR.BIT_NAME.UIF=0;
		}
	}else{
		GP_ERROR_HANDLER();
	}
}
 800348c:	e025      	b.n	80034da <GP_TIMx_start+0x196>
			else if(TIMx== TIM3) NVIC_ISER0|=(1<<29);
 800348e:	68fb      	ldr	r3, [r7, #12]
 8003490:	4a17      	ldr	r2, [pc, #92]	; (80034f0 <GP_TIMx_start+0x1ac>)
 8003492:	4293      	cmp	r3, r2
 8003494:	d106      	bne.n	80034a4 <GP_TIMx_start+0x160>
 8003496:	4b18      	ldr	r3, [pc, #96]	; (80034f8 <GP_TIMx_start+0x1b4>)
 8003498:	681b      	ldr	r3, [r3, #0]
 800349a:	4a17      	ldr	r2, [pc, #92]	; (80034f8 <GP_TIMx_start+0x1b4>)
 800349c:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 80034a0:	6013      	str	r3, [r2, #0]
}
 80034a2:	e01a      	b.n	80034da <GP_TIMx_start+0x196>
			else if(TIMx== TIM4) NVIC_ISER0|=(1<<30);
 80034a4:	68fb      	ldr	r3, [r7, #12]
 80034a6:	4a13      	ldr	r2, [pc, #76]	; (80034f4 <GP_TIMx_start+0x1b0>)
 80034a8:	4293      	cmp	r3, r2
 80034aa:	d116      	bne.n	80034da <GP_TIMx_start+0x196>
 80034ac:	4b12      	ldr	r3, [pc, #72]	; (80034f8 <GP_TIMx_start+0x1b4>)
 80034ae:	681b      	ldr	r3, [r3, #0]
 80034b0:	4a11      	ldr	r2, [pc, #68]	; (80034f8 <GP_TIMx_start+0x1b4>)
 80034b2:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80034b6:	6013      	str	r3, [r2, #0]
}
 80034b8:	e00f      	b.n	80034da <GP_TIMx_start+0x196>
			while(!TIMx->SR.BIT_NAME.UIF);
 80034ba:	bf00      	nop
 80034bc:	68fb      	ldr	r3, [r7, #12]
 80034be:	691b      	ldr	r3, [r3, #16]
 80034c0:	f3c3 0300 	ubfx	r3, r3, #0, #1
 80034c4:	b2db      	uxtb	r3, r3
 80034c6:	2b00      	cmp	r3, #0
 80034c8:	d0f8      	beq.n	80034bc <GP_TIMx_start+0x178>
			TIMx->SR.BIT_NAME.UIF=0;
 80034ca:	68fa      	ldr	r2, [r7, #12]
 80034cc:	6913      	ldr	r3, [r2, #16]
 80034ce:	f36f 0300 	bfc	r3, #0, #1
 80034d2:	6113      	str	r3, [r2, #16]
}
 80034d4:	e001      	b.n	80034da <GP_TIMx_start+0x196>
		GP_ERROR_HANDLER();
 80034d6:	f7ff fd5f 	bl	8002f98 <GP_ERROR_HANDLER>
}
 80034da:	bf00      	nop
 80034dc:	3714      	adds	r7, #20
 80034de:	46bd      	mov	sp, r7
 80034e0:	bd90      	pop	{r4, r7, pc}
 80034e2:	bf00      	nop
 80034e4:	20004274 	.word	0x20004274
 80034e8:	40021000 	.word	0x40021000
 80034ec:	2000423c 	.word	0x2000423c
 80034f0:	40000400 	.word	0x40000400
 80034f4:	40000800 	.word	0x40000800
 80034f8:	e000e100 	.word	0xe000e100

080034fc <GP_TIMx_Deint>:

void GP_TIMX_Clear(GP_TIMx_REG* TIMx){

	TIMx->CNT=0;
}
void GP_TIMx_Deint(GP_TIMx_REG* TIMx){
 80034fc:	b480      	push	{r7}
 80034fe:	b083      	sub	sp, #12
 8003500:	af00      	add	r7, sp, #0
 8003502:	6078      	str	r0, [r7, #4]
	if(TIMx== TIM2)			{RCC->APB1ENR|=(1<<0);			}
 8003504:	687b      	ldr	r3, [r7, #4]
 8003506:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800350a:	d106      	bne.n	800351a <GP_TIMx_Deint+0x1e>
 800350c:	4b3b      	ldr	r3, [pc, #236]	; (80035fc <GP_TIMx_Deint+0x100>)
 800350e:	69db      	ldr	r3, [r3, #28]
 8003510:	4a3a      	ldr	r2, [pc, #232]	; (80035fc <GP_TIMx_Deint+0x100>)
 8003512:	f043 0301 	orr.w	r3, r3, #1
 8003516:	61d3      	str	r3, [r2, #28]
 8003518:	e014      	b.n	8003544 <GP_TIMx_Deint+0x48>
	else if(TIMx== TIM3)	{RCC->APB1ENR|=(1<<1);			}
 800351a:	687b      	ldr	r3, [r7, #4]
 800351c:	4a38      	ldr	r2, [pc, #224]	; (8003600 <GP_TIMx_Deint+0x104>)
 800351e:	4293      	cmp	r3, r2
 8003520:	d106      	bne.n	8003530 <GP_TIMx_Deint+0x34>
 8003522:	4b36      	ldr	r3, [pc, #216]	; (80035fc <GP_TIMx_Deint+0x100>)
 8003524:	69db      	ldr	r3, [r3, #28]
 8003526:	4a35      	ldr	r2, [pc, #212]	; (80035fc <GP_TIMx_Deint+0x100>)
 8003528:	f043 0302 	orr.w	r3, r3, #2
 800352c:	61d3      	str	r3, [r2, #28]
 800352e:	e009      	b.n	8003544 <GP_TIMx_Deint+0x48>
	else if(TIMx== TIM4)	{RCC->APB1ENR|=(1<<2);		}
 8003530:	687b      	ldr	r3, [r7, #4]
 8003532:	4a34      	ldr	r2, [pc, #208]	; (8003604 <GP_TIMx_Deint+0x108>)
 8003534:	4293      	cmp	r3, r2
 8003536:	d105      	bne.n	8003544 <GP_TIMx_Deint+0x48>
 8003538:	4b30      	ldr	r3, [pc, #192]	; (80035fc <GP_TIMx_Deint+0x100>)
 800353a:	69db      	ldr	r3, [r3, #28]
 800353c:	4a2f      	ldr	r2, [pc, #188]	; (80035fc <GP_TIMx_Deint+0x100>)
 800353e:	f043 0304 	orr.w	r3, r3, #4
 8003542:	61d3      	str	r3, [r2, #28]

	TIMx->CR1.ALL_BITS=0;
 8003544:	687b      	ldr	r3, [r7, #4]
 8003546:	2200      	movs	r2, #0
 8003548:	601a      	str	r2, [r3, #0]
	TIMx->ARR=0;
 800354a:	687b      	ldr	r3, [r7, #4]
 800354c:	2200      	movs	r2, #0
 800354e:	62da      	str	r2, [r3, #44]	; 0x2c
	TIMx->CCER.ALL_BITS=0;
 8003550:	687b      	ldr	r3, [r7, #4]
 8003552:	2200      	movs	r2, #0
 8003554:	621a      	str	r2, [r3, #32]
	TIMx->CCMR1.ALL_BITS=0;
 8003556:	687b      	ldr	r3, [r7, #4]
 8003558:	2200      	movs	r2, #0
 800355a:	619a      	str	r2, [r3, #24]
	TIMx->CCMR2.ALL_BITS=0;
 800355c:	687b      	ldr	r3, [r7, #4]
 800355e:	2200      	movs	r2, #0
 8003560:	61da      	str	r2, [r3, #28]
	TIMx->CCR1=0;
 8003562:	687b      	ldr	r3, [r7, #4]
 8003564:	2200      	movs	r2, #0
 8003566:	635a      	str	r2, [r3, #52]	; 0x34
	TIMx->CCR2=0;
 8003568:	687b      	ldr	r3, [r7, #4]
 800356a:	2200      	movs	r2, #0
 800356c:	639a      	str	r2, [r3, #56]	; 0x38
	TIMx->CCR3=0;
 800356e:	687b      	ldr	r3, [r7, #4]
 8003570:	2200      	movs	r2, #0
 8003572:	63da      	str	r2, [r3, #60]	; 0x3c
	TIMx->CCR4=0;
 8003574:	687b      	ldr	r3, [r7, #4]
 8003576:	2200      	movs	r2, #0
 8003578:	641a      	str	r2, [r3, #64]	; 0x40
	TIMx->CNT=0;
 800357a:	687b      	ldr	r3, [r7, #4]
 800357c:	2200      	movs	r2, #0
 800357e:	625a      	str	r2, [r3, #36]	; 0x24
	TIMx->CR2.ALL_BITS=0;
 8003580:	687b      	ldr	r3, [r7, #4]
 8003582:	2200      	movs	r2, #0
 8003584:	605a      	str	r2, [r3, #4]
	TIMx->PSC=0;
 8003586:	687b      	ldr	r3, [r7, #4]
 8003588:	2200      	movs	r2, #0
 800358a:	629a      	str	r2, [r3, #40]	; 0x28
	if(TIMx== TIM2)			{RCC->APB1RSTR|=(1<<0);		RCC->APB1RSTR&=~(1<<0);	}
 800358c:	687b      	ldr	r3, [r7, #4]
 800358e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003592:	d10c      	bne.n	80035ae <GP_TIMx_Deint+0xb2>
 8003594:	4b19      	ldr	r3, [pc, #100]	; (80035fc <GP_TIMx_Deint+0x100>)
 8003596:	691b      	ldr	r3, [r3, #16]
 8003598:	4a18      	ldr	r2, [pc, #96]	; (80035fc <GP_TIMx_Deint+0x100>)
 800359a:	f043 0301 	orr.w	r3, r3, #1
 800359e:	6113      	str	r3, [r2, #16]
 80035a0:	4b16      	ldr	r3, [pc, #88]	; (80035fc <GP_TIMx_Deint+0x100>)
 80035a2:	691b      	ldr	r3, [r3, #16]
 80035a4:	4a15      	ldr	r2, [pc, #84]	; (80035fc <GP_TIMx_Deint+0x100>)
 80035a6:	f023 0301 	bic.w	r3, r3, #1
 80035aa:	6113      	str	r3, [r2, #16]
	else if(TIMx== TIM3)	{RCC->APB1RSTR|=(1<<1);		RCC->APB1RSTR&=~(1<<1);	}
	else if(TIMx== TIM4)	{RCC->APB1RSTR|=(1<<2);		RCC->APB1RSTR&=~(1<<2);	}
}
 80035ac:	e020      	b.n	80035f0 <GP_TIMx_Deint+0xf4>
	else if(TIMx== TIM3)	{RCC->APB1RSTR|=(1<<1);		RCC->APB1RSTR&=~(1<<1);	}
 80035ae:	687b      	ldr	r3, [r7, #4]
 80035b0:	4a13      	ldr	r2, [pc, #76]	; (8003600 <GP_TIMx_Deint+0x104>)
 80035b2:	4293      	cmp	r3, r2
 80035b4:	d10c      	bne.n	80035d0 <GP_TIMx_Deint+0xd4>
 80035b6:	4b11      	ldr	r3, [pc, #68]	; (80035fc <GP_TIMx_Deint+0x100>)
 80035b8:	691b      	ldr	r3, [r3, #16]
 80035ba:	4a10      	ldr	r2, [pc, #64]	; (80035fc <GP_TIMx_Deint+0x100>)
 80035bc:	f043 0302 	orr.w	r3, r3, #2
 80035c0:	6113      	str	r3, [r2, #16]
 80035c2:	4b0e      	ldr	r3, [pc, #56]	; (80035fc <GP_TIMx_Deint+0x100>)
 80035c4:	691b      	ldr	r3, [r3, #16]
 80035c6:	4a0d      	ldr	r2, [pc, #52]	; (80035fc <GP_TIMx_Deint+0x100>)
 80035c8:	f023 0302 	bic.w	r3, r3, #2
 80035cc:	6113      	str	r3, [r2, #16]
}
 80035ce:	e00f      	b.n	80035f0 <GP_TIMx_Deint+0xf4>
	else if(TIMx== TIM4)	{RCC->APB1RSTR|=(1<<2);		RCC->APB1RSTR&=~(1<<2);	}
 80035d0:	687b      	ldr	r3, [r7, #4]
 80035d2:	4a0c      	ldr	r2, [pc, #48]	; (8003604 <GP_TIMx_Deint+0x108>)
 80035d4:	4293      	cmp	r3, r2
 80035d6:	d10b      	bne.n	80035f0 <GP_TIMx_Deint+0xf4>
 80035d8:	4b08      	ldr	r3, [pc, #32]	; (80035fc <GP_TIMx_Deint+0x100>)
 80035da:	691b      	ldr	r3, [r3, #16]
 80035dc:	4a07      	ldr	r2, [pc, #28]	; (80035fc <GP_TIMx_Deint+0x100>)
 80035de:	f043 0304 	orr.w	r3, r3, #4
 80035e2:	6113      	str	r3, [r2, #16]
 80035e4:	4b05      	ldr	r3, [pc, #20]	; (80035fc <GP_TIMx_Deint+0x100>)
 80035e6:	691b      	ldr	r3, [r3, #16]
 80035e8:	4a04      	ldr	r2, [pc, #16]	; (80035fc <GP_TIMx_Deint+0x100>)
 80035ea:	f023 0304 	bic.w	r3, r3, #4
 80035ee:	6113      	str	r3, [r2, #16]
}
 80035f0:	bf00      	nop
 80035f2:	370c      	adds	r7, #12
 80035f4:	46bd      	mov	sp, r7
 80035f6:	bc80      	pop	{r7}
 80035f8:	4770      	bx	lr
 80035fa:	bf00      	nop
 80035fc:	40021000 	.word	0x40021000
 8003600:	40000400 	.word	0x40000400
 8003604:	40000800 	.word	0x40000800

08003608 <TIM2_IRQHandler>:

void TIM2_IRQHandler(){
 8003608:	b580      	push	{r7, lr}
 800360a:	b082      	sub	sp, #8
 800360c:	af00      	add	r7, sp, #0
	GP_TIMx_ERROR_src *ERROR;
	if(TIM2->SR.BIT_NAME.UIF){
 800360e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003612:	691b      	ldr	r3, [r3, #16]
 8003614:	f3c3 0300 	ubfx	r3, r3, #0, #1
 8003618:	b2db      	uxtb	r3, r3
 800361a:	2b00      	cmp	r3, #0
 800361c:	d00b      	beq.n	8003636 <TIM2_IRQHandler+0x2e>
		ERROR->UIF=1;
 800361e:	687a      	ldr	r2, [r7, #4]
 8003620:	7813      	ldrb	r3, [r2, #0]
 8003622:	f043 0301 	orr.w	r3, r3, #1
 8003626:	7013      	strb	r3, [r2, #0]
		TIM2->SR.BIT_NAME.UIF=0;
 8003628:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800362c:	6913      	ldr	r3, [r2, #16]
 800362e:	f36f 0300 	bfc	r3, #0, #1
 8003632:	6113      	str	r3, [r2, #16]
 8003634:	e04e      	b.n	80036d4 <TIM2_IRQHandler+0xcc>
	}

	else if(TIM2->SR.BIT_NAME.CC1IF){
 8003636:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800363a:	691b      	ldr	r3, [r3, #16]
 800363c:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8003640:	b2db      	uxtb	r3, r3
 8003642:	2b00      	cmp	r3, #0
 8003644:	d00b      	beq.n	800365e <TIM2_IRQHandler+0x56>
		ERROR->CC1IF=1;
 8003646:	687a      	ldr	r2, [r7, #4]
 8003648:	7813      	ldrb	r3, [r2, #0]
 800364a:	f043 0302 	orr.w	r3, r3, #2
 800364e:	7013      	strb	r3, [r2, #0]
		TIM2->SR.BIT_NAME.CC1IF=0;
 8003650:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8003654:	6913      	ldr	r3, [r2, #16]
 8003656:	f36f 0341 	bfc	r3, #1, #1
 800365a:	6113      	str	r3, [r2, #16]
 800365c:	e03a      	b.n	80036d4 <TIM2_IRQHandler+0xcc>


	}
	else if(TIM2->SR.BIT_NAME.CC2IF){
 800365e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003662:	691b      	ldr	r3, [r3, #16]
 8003664:	f3c3 0380 	ubfx	r3, r3, #2, #1
 8003668:	b2db      	uxtb	r3, r3
 800366a:	2b00      	cmp	r3, #0
 800366c:	d00b      	beq.n	8003686 <TIM2_IRQHandler+0x7e>
		ERROR->CC2IF=1;
 800366e:	687a      	ldr	r2, [r7, #4]
 8003670:	7813      	ldrb	r3, [r2, #0]
 8003672:	f043 0304 	orr.w	r3, r3, #4
 8003676:	7013      	strb	r3, [r2, #0]
		TIM2->SR.BIT_NAME.CC2IF=0;
 8003678:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800367c:	6913      	ldr	r3, [r2, #16]
 800367e:	f36f 0382 	bfc	r3, #2, #1
 8003682:	6113      	str	r3, [r2, #16]
 8003684:	e026      	b.n	80036d4 <TIM2_IRQHandler+0xcc>

	}
	else if(TIM2->SR.BIT_NAME.CC3IF){
 8003686:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800368a:	691b      	ldr	r3, [r3, #16]
 800368c:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8003690:	b2db      	uxtb	r3, r3
 8003692:	2b00      	cmp	r3, #0
 8003694:	d00b      	beq.n	80036ae <TIM2_IRQHandler+0xa6>
		ERROR->CC3IF=1;
 8003696:	687a      	ldr	r2, [r7, #4]
 8003698:	7813      	ldrb	r3, [r2, #0]
 800369a:	f043 0308 	orr.w	r3, r3, #8
 800369e:	7013      	strb	r3, [r2, #0]
		TIM2->SR.BIT_NAME.CC3IF=0;
 80036a0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80036a4:	6913      	ldr	r3, [r2, #16]
 80036a6:	f36f 03c3 	bfc	r3, #3, #1
 80036aa:	6113      	str	r3, [r2, #16]
 80036ac:	e012      	b.n	80036d4 <TIM2_IRQHandler+0xcc>

	}
	else if(TIM2->SR.BIT_NAME.CC4IF){
 80036ae:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80036b2:	691b      	ldr	r3, [r3, #16]
 80036b4:	f3c3 1300 	ubfx	r3, r3, #4, #1
 80036b8:	b2db      	uxtb	r3, r3
 80036ba:	2b00      	cmp	r3, #0
 80036bc:	d00a      	beq.n	80036d4 <TIM2_IRQHandler+0xcc>
		ERROR->CC4IF=1;
 80036be:	687a      	ldr	r2, [r7, #4]
 80036c0:	7813      	ldrb	r3, [r2, #0]
 80036c2:	f043 0310 	orr.w	r3, r3, #16
 80036c6:	7013      	strb	r3, [r2, #0]
		TIM2->SR.BIT_NAME.CC4IF=0;
 80036c8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80036cc:	6913      	ldr	r3, [r2, #16]
 80036ce:	f36f 1304 	bfc	r3, #4, #1
 80036d2:	6113      	str	r3, [r2, #16]

	}
	g_GP_Sitting[0].f_callback(ERROR);
 80036d4:	4b03      	ldr	r3, [pc, #12]	; (80036e4 <TIM2_IRQHandler+0xdc>)
 80036d6:	68db      	ldr	r3, [r3, #12]
 80036d8:	6878      	ldr	r0, [r7, #4]
 80036da:	4798      	blx	r3

}
 80036dc:	bf00      	nop
 80036de:	3708      	adds	r7, #8
 80036e0:	46bd      	mov	sp, r7
 80036e2:	bd80      	pop	{r7, pc}
 80036e4:	2000423c 	.word	0x2000423c

080036e8 <TIM3_IRQHandler>:
void TIM3_IRQHandler(){
 80036e8:	b580      	push	{r7, lr}
 80036ea:	b082      	sub	sp, #8
 80036ec:	af00      	add	r7, sp, #0
	GP_TIMx_ERROR_src *ERROR;
	if(TIM3->SR.BIT_NAME.UIF){
 80036ee:	4b30      	ldr	r3, [pc, #192]	; (80037b0 <TIM3_IRQHandler+0xc8>)
 80036f0:	691b      	ldr	r3, [r3, #16]
 80036f2:	f3c3 0300 	ubfx	r3, r3, #0, #1
 80036f6:	b2db      	uxtb	r3, r3
 80036f8:	2b00      	cmp	r3, #0
 80036fa:	d00a      	beq.n	8003712 <TIM3_IRQHandler+0x2a>
		ERROR->UIF=1;
 80036fc:	687a      	ldr	r2, [r7, #4]
 80036fe:	7813      	ldrb	r3, [r2, #0]
 8003700:	f043 0301 	orr.w	r3, r3, #1
 8003704:	7013      	strb	r3, [r2, #0]
		TIM3->SR.BIT_NAME.UIF=0;
 8003706:	4a2a      	ldr	r2, [pc, #168]	; (80037b0 <TIM3_IRQHandler+0xc8>)
 8003708:	6913      	ldr	r3, [r2, #16]
 800370a:	f36f 0300 	bfc	r3, #0, #1
 800370e:	6113      	str	r3, [r2, #16]
 8003710:	e046      	b.n	80037a0 <TIM3_IRQHandler+0xb8>
	}

	else if(TIM3->SR.BIT_NAME.CC1IF){
 8003712:	4b27      	ldr	r3, [pc, #156]	; (80037b0 <TIM3_IRQHandler+0xc8>)
 8003714:	691b      	ldr	r3, [r3, #16]
 8003716:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800371a:	b2db      	uxtb	r3, r3
 800371c:	2b00      	cmp	r3, #0
 800371e:	d00a      	beq.n	8003736 <TIM3_IRQHandler+0x4e>
		ERROR->CC1IF=1;
 8003720:	687a      	ldr	r2, [r7, #4]
 8003722:	7813      	ldrb	r3, [r2, #0]
 8003724:	f043 0302 	orr.w	r3, r3, #2
 8003728:	7013      	strb	r3, [r2, #0]
		TIM3->SR.BIT_NAME.CC1IF=0;
 800372a:	4a21      	ldr	r2, [pc, #132]	; (80037b0 <TIM3_IRQHandler+0xc8>)
 800372c:	6913      	ldr	r3, [r2, #16]
 800372e:	f36f 0341 	bfc	r3, #1, #1
 8003732:	6113      	str	r3, [r2, #16]
 8003734:	e034      	b.n	80037a0 <TIM3_IRQHandler+0xb8>


	}
	else if(TIM3->SR.BIT_NAME.CC2IF){
 8003736:	4b1e      	ldr	r3, [pc, #120]	; (80037b0 <TIM3_IRQHandler+0xc8>)
 8003738:	691b      	ldr	r3, [r3, #16]
 800373a:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800373e:	b2db      	uxtb	r3, r3
 8003740:	2b00      	cmp	r3, #0
 8003742:	d00a      	beq.n	800375a <TIM3_IRQHandler+0x72>
		ERROR->CC2IF=1;
 8003744:	687a      	ldr	r2, [r7, #4]
 8003746:	7813      	ldrb	r3, [r2, #0]
 8003748:	f043 0304 	orr.w	r3, r3, #4
 800374c:	7013      	strb	r3, [r2, #0]
		TIM3->SR.BIT_NAME.CC2IF=0;
 800374e:	4a18      	ldr	r2, [pc, #96]	; (80037b0 <TIM3_IRQHandler+0xc8>)
 8003750:	6913      	ldr	r3, [r2, #16]
 8003752:	f36f 0382 	bfc	r3, #2, #1
 8003756:	6113      	str	r3, [r2, #16]
 8003758:	e022      	b.n	80037a0 <TIM3_IRQHandler+0xb8>

	}
	else if(TIM3->SR.BIT_NAME.CC3IF){
 800375a:	4b15      	ldr	r3, [pc, #84]	; (80037b0 <TIM3_IRQHandler+0xc8>)
 800375c:	691b      	ldr	r3, [r3, #16]
 800375e:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8003762:	b2db      	uxtb	r3, r3
 8003764:	2b00      	cmp	r3, #0
 8003766:	d00a      	beq.n	800377e <TIM3_IRQHandler+0x96>
		ERROR->CC3IF=1;
 8003768:	687a      	ldr	r2, [r7, #4]
 800376a:	7813      	ldrb	r3, [r2, #0]
 800376c:	f043 0308 	orr.w	r3, r3, #8
 8003770:	7013      	strb	r3, [r2, #0]
		TIM3->SR.BIT_NAME.CC3IF=0;
 8003772:	4a0f      	ldr	r2, [pc, #60]	; (80037b0 <TIM3_IRQHandler+0xc8>)
 8003774:	6913      	ldr	r3, [r2, #16]
 8003776:	f36f 03c3 	bfc	r3, #3, #1
 800377a:	6113      	str	r3, [r2, #16]
 800377c:	e010      	b.n	80037a0 <TIM3_IRQHandler+0xb8>

	}
	else if(TIM3->SR.BIT_NAME.CC4IF){
 800377e:	4b0c      	ldr	r3, [pc, #48]	; (80037b0 <TIM3_IRQHandler+0xc8>)
 8003780:	691b      	ldr	r3, [r3, #16]
 8003782:	f3c3 1300 	ubfx	r3, r3, #4, #1
 8003786:	b2db      	uxtb	r3, r3
 8003788:	2b00      	cmp	r3, #0
 800378a:	d009      	beq.n	80037a0 <TIM3_IRQHandler+0xb8>
		ERROR->CC4IF=1;
 800378c:	687a      	ldr	r2, [r7, #4]
 800378e:	7813      	ldrb	r3, [r2, #0]
 8003790:	f043 0310 	orr.w	r3, r3, #16
 8003794:	7013      	strb	r3, [r2, #0]
		TIM3->SR.BIT_NAME.CC4IF=0;
 8003796:	4a06      	ldr	r2, [pc, #24]	; (80037b0 <TIM3_IRQHandler+0xc8>)
 8003798:	6913      	ldr	r3, [r2, #16]
 800379a:	f36f 1304 	bfc	r3, #4, #1
 800379e:	6113      	str	r3, [r2, #16]

	}
	g_GP_Sitting[1].f_callback(ERROR);
 80037a0:	4b04      	ldr	r3, [pc, #16]	; (80037b4 <TIM3_IRQHandler+0xcc>)
 80037a2:	69db      	ldr	r3, [r3, #28]
 80037a4:	6878      	ldr	r0, [r7, #4]
 80037a6:	4798      	blx	r3


}void TIM4_IRQHandler(){
 80037a8:	bf00      	nop
 80037aa:	3708      	adds	r7, #8
 80037ac:	46bd      	mov	sp, r7
 80037ae:	bd80      	pop	{r7, pc}
 80037b0:	40000400 	.word	0x40000400
 80037b4:	2000423c 	.word	0x2000423c

080037b8 <TIM4_IRQHandler>:
 80037b8:	b580      	push	{r7, lr}
 80037ba:	b082      	sub	sp, #8
 80037bc:	af00      	add	r7, sp, #0
	volatile  GP_TIMx_ERROR_src *ERROR;
	if(TIM4->SR.BIT_NAME.UIF){
 80037be:	4b33      	ldr	r3, [pc, #204]	; (800388c <TIM4_IRQHandler+0xd4>)
 80037c0:	691b      	ldr	r3, [r3, #16]
 80037c2:	f3c3 0300 	ubfx	r3, r3, #0, #1
 80037c6:	b2db      	uxtb	r3, r3
 80037c8:	2b00      	cmp	r3, #0
 80037ca:	d00a      	beq.n	80037e2 <TIM4_IRQHandler+0x2a>
		ERROR->UIF=1;
 80037cc:	687a      	ldr	r2, [r7, #4]
 80037ce:	7813      	ldrb	r3, [r2, #0]
 80037d0:	f043 0301 	orr.w	r3, r3, #1
 80037d4:	7013      	strb	r3, [r2, #0]
		TIM4->SR.BIT_NAME.UIF=0;
 80037d6:	4a2d      	ldr	r2, [pc, #180]	; (800388c <TIM4_IRQHandler+0xd4>)
 80037d8:	6913      	ldr	r3, [r2, #16]
 80037da:	f36f 0300 	bfc	r3, #0, #1
 80037de:	6113      	str	r3, [r2, #16]
 80037e0:	e04b      	b.n	800387a <TIM4_IRQHandler+0xc2>
	}

	else if(TIM4->SR.BIT_NAME.CC1IF){
 80037e2:	4b2a      	ldr	r3, [pc, #168]	; (800388c <TIM4_IRQHandler+0xd4>)
 80037e4:	691b      	ldr	r3, [r3, #16]
 80037e6:	f3c3 0340 	ubfx	r3, r3, #1, #1
 80037ea:	b2db      	uxtb	r3, r3
 80037ec:	2b00      	cmp	r3, #0
 80037ee:	d00a      	beq.n	8003806 <TIM4_IRQHandler+0x4e>
		ERROR->CC1IF=1;
 80037f0:	687a      	ldr	r2, [r7, #4]
 80037f2:	7813      	ldrb	r3, [r2, #0]
 80037f4:	f043 0302 	orr.w	r3, r3, #2
 80037f8:	7013      	strb	r3, [r2, #0]
		TIM4->SR.BIT_NAME.CC1IF=0;
 80037fa:	4a24      	ldr	r2, [pc, #144]	; (800388c <TIM4_IRQHandler+0xd4>)
 80037fc:	6913      	ldr	r3, [r2, #16]
 80037fe:	f36f 0341 	bfc	r3, #1, #1
 8003802:	6113      	str	r3, [r2, #16]
 8003804:	e039      	b.n	800387a <TIM4_IRQHandler+0xc2>


	}
	else if(TIM4->SR.BIT_NAME.CC2IF){
 8003806:	4b21      	ldr	r3, [pc, #132]	; (800388c <TIM4_IRQHandler+0xd4>)
 8003808:	691b      	ldr	r3, [r3, #16]
 800380a:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800380e:	b2db      	uxtb	r3, r3
 8003810:	2b00      	cmp	r3, #0
 8003812:	d00f      	beq.n	8003834 <TIM4_IRQHandler+0x7c>
		ERROR->CC2IF=1;
 8003814:	687a      	ldr	r2, [r7, #4]
 8003816:	7813      	ldrb	r3, [r2, #0]
 8003818:	f043 0304 	orr.w	r3, r3, #4
 800381c:	7013      	strb	r3, [r2, #0]
		TIM4->SR.BIT_NAME.CC2IF=0;
 800381e:	4a1b      	ldr	r2, [pc, #108]	; (800388c <TIM4_IRQHandler+0xd4>)
 8003820:	6913      	ldr	r3, [r2, #16]
 8003822:	f36f 0382 	bfc	r3, #2, #1
 8003826:	6113      	str	r3, [r2, #16]
		ERROR->UIF=1;
 8003828:	687a      	ldr	r2, [r7, #4]
 800382a:	7813      	ldrb	r3, [r2, #0]
 800382c:	f043 0301 	orr.w	r3, r3, #1
 8003830:	7013      	strb	r3, [r2, #0]
 8003832:	e022      	b.n	800387a <TIM4_IRQHandler+0xc2>

	}
	else if(TIM4->SR.BIT_NAME.CC3IF){
 8003834:	4b15      	ldr	r3, [pc, #84]	; (800388c <TIM4_IRQHandler+0xd4>)
 8003836:	691b      	ldr	r3, [r3, #16]
 8003838:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800383c:	b2db      	uxtb	r3, r3
 800383e:	2b00      	cmp	r3, #0
 8003840:	d00a      	beq.n	8003858 <TIM4_IRQHandler+0xa0>
		ERROR->CC3IF=1;
 8003842:	687a      	ldr	r2, [r7, #4]
 8003844:	7813      	ldrb	r3, [r2, #0]
 8003846:	f043 0308 	orr.w	r3, r3, #8
 800384a:	7013      	strb	r3, [r2, #0]
		TIM4->SR.BIT_NAME.CC3IF=0;
 800384c:	4a0f      	ldr	r2, [pc, #60]	; (800388c <TIM4_IRQHandler+0xd4>)
 800384e:	6913      	ldr	r3, [r2, #16]
 8003850:	f36f 03c3 	bfc	r3, #3, #1
 8003854:	6113      	str	r3, [r2, #16]
 8003856:	e010      	b.n	800387a <TIM4_IRQHandler+0xc2>

	}
	else if(TIM4->SR.BIT_NAME.CC4IF){
 8003858:	4b0c      	ldr	r3, [pc, #48]	; (800388c <TIM4_IRQHandler+0xd4>)
 800385a:	691b      	ldr	r3, [r3, #16]
 800385c:	f3c3 1300 	ubfx	r3, r3, #4, #1
 8003860:	b2db      	uxtb	r3, r3
 8003862:	2b00      	cmp	r3, #0
 8003864:	d009      	beq.n	800387a <TIM4_IRQHandler+0xc2>
		ERROR->CC4IF=1;
 8003866:	687a      	ldr	r2, [r7, #4]
 8003868:	7813      	ldrb	r3, [r2, #0]
 800386a:	f043 0310 	orr.w	r3, r3, #16
 800386e:	7013      	strb	r3, [r2, #0]
		TIM4->SR.BIT_NAME.CC4IF=0;
 8003870:	4a06      	ldr	r2, [pc, #24]	; (800388c <TIM4_IRQHandler+0xd4>)
 8003872:	6913      	ldr	r3, [r2, #16]
 8003874:	f36f 1304 	bfc	r3, #4, #1
 8003878:	6113      	str	r3, [r2, #16]

	}
	g_GP_Sitting[2].f_callback(ERROR);
 800387a:	4b05      	ldr	r3, [pc, #20]	; (8003890 <TIM4_IRQHandler+0xd8>)
 800387c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800387e:	6878      	ldr	r0, [r7, #4]
 8003880:	4798      	blx	r3


}
 8003882:	bf00      	nop
 8003884:	3708      	adds	r7, #8
 8003886:	46bd      	mov	sp, r7
 8003888:	bd80      	pop	{r7, pc}
 800388a:	bf00      	nop
 800388c:	40000800 	.word	0x40000800
 8003890:	2000423c 	.word	0x2000423c

08003894 <MCAL_GET_SYS_CLCK>:
 8003894:	b480      	push	{r7}
 8003896:	af00      	add	r7, sp, #0
 8003898:	4b0b      	ldr	r3, [pc, #44]	; (80038c8 <MCAL_GET_SYS_CLCK+0x34>)
 800389a:	685b      	ldr	r3, [r3, #4]
 800389c:	089b      	lsrs	r3, r3, #2
 800389e:	f003 0303 	and.w	r3, r3, #3
 80038a2:	2b02      	cmp	r3, #2
 80038a4:	d00a      	beq.n	80038bc <MCAL_GET_SYS_CLCK+0x28>
 80038a6:	2b02      	cmp	r3, #2
 80038a8:	d80a      	bhi.n	80038c0 <MCAL_GET_SYS_CLCK+0x2c>
 80038aa:	2b00      	cmp	r3, #0
 80038ac:	d002      	beq.n	80038b4 <MCAL_GET_SYS_CLCK+0x20>
 80038ae:	2b01      	cmp	r3, #1
 80038b0:	d002      	beq.n	80038b8 <MCAL_GET_SYS_CLCK+0x24>
 80038b2:	e005      	b.n	80038c0 <MCAL_GET_SYS_CLCK+0x2c>
 80038b4:	4b05      	ldr	r3, [pc, #20]	; (80038cc <MCAL_GET_SYS_CLCK+0x38>)
 80038b6:	e003      	b.n	80038c0 <MCAL_GET_SYS_CLCK+0x2c>
 80038b8:	4b05      	ldr	r3, [pc, #20]	; (80038d0 <MCAL_GET_SYS_CLCK+0x3c>)
 80038ba:	e001      	b.n	80038c0 <MCAL_GET_SYS_CLCK+0x2c>
 80038bc:	4b05      	ldr	r3, [pc, #20]	; (80038d4 <MCAL_GET_SYS_CLCK+0x40>)
 80038be:	e7ff      	b.n	80038c0 <MCAL_GET_SYS_CLCK+0x2c>
 80038c0:	4618      	mov	r0, r3
 80038c2:	46bd      	mov	sp, r7
 80038c4:	bc80      	pop	{r7}
 80038c6:	4770      	bx	lr
 80038c8:	40021000 	.word	0x40021000
 80038cc:	007a1200 	.word	0x007a1200
 80038d0:	00f42400 	.word	0x00f42400
 80038d4:	01ab3f00 	.word	0x01ab3f00

080038d8 <MCAL_GET_H_CLCK>:
 80038d8:	b580      	push	{r7, lr}
 80038da:	af00      	add	r7, sp, #0
 80038dc:	f7ff ffda 	bl	8003894 <MCAL_GET_SYS_CLCK>
 80038e0:	4602      	mov	r2, r0
 80038e2:	4b05      	ldr	r3, [pc, #20]	; (80038f8 <MCAL_GET_H_CLCK+0x20>)
 80038e4:	685b      	ldr	r3, [r3, #4]
 80038e6:	091b      	lsrs	r3, r3, #4
 80038e8:	f003 030f 	and.w	r3, r3, #15
 80038ec:	4903      	ldr	r1, [pc, #12]	; (80038fc <MCAL_GET_H_CLCK+0x24>)
 80038ee:	5ccb      	ldrb	r3, [r1, r3]
 80038f0:	fa22 f303 	lsr.w	r3, r2, r3
 80038f4:	4618      	mov	r0, r3
 80038f6:	bd80      	pop	{r7, pc}
 80038f8:	40021000 	.word	0x40021000
 80038fc:	20000038 	.word	0x20000038

08003900 <MCAL_GET_PCLCK1>:
 8003900:	b580      	push	{r7, lr}
 8003902:	af00      	add	r7, sp, #0
 8003904:	f7ff ffe8 	bl	80038d8 <MCAL_GET_H_CLCK>
 8003908:	4602      	mov	r2, r0
 800390a:	4b05      	ldr	r3, [pc, #20]	; (8003920 <MCAL_GET_PCLCK1+0x20>)
 800390c:	685b      	ldr	r3, [r3, #4]
 800390e:	0a1b      	lsrs	r3, r3, #8
 8003910:	f003 0307 	and.w	r3, r3, #7
 8003914:	4903      	ldr	r1, [pc, #12]	; (8003924 <MCAL_GET_PCLCK1+0x24>)
 8003916:	5ccb      	ldrb	r3, [r1, r3]
 8003918:	fa22 f303 	lsr.w	r3, r2, r3
 800391c:	4618      	mov	r0, r3
 800391e:	bd80      	pop	{r7, pc}
 8003920:	40021000 	.word	0x40021000
 8003924:	20000030 	.word	0x20000030

08003928 <MCAL_GET_PCLCK2>:
 8003928:	b580      	push	{r7, lr}
 800392a:	af00      	add	r7, sp, #0
 800392c:	f7ff ffd4 	bl	80038d8 <MCAL_GET_H_CLCK>
 8003930:	4602      	mov	r2, r0
 8003932:	4b05      	ldr	r3, [pc, #20]	; (8003948 <MCAL_GET_PCLCK2+0x20>)
 8003934:	685b      	ldr	r3, [r3, #4]
 8003936:	0adb      	lsrs	r3, r3, #11
 8003938:	f003 0307 	and.w	r3, r3, #7
 800393c:	4903      	ldr	r1, [pc, #12]	; (800394c <MCAL_GET_PCLCK2+0x24>)
 800393e:	5ccb      	ldrb	r3, [r1, r3]
 8003940:	fa22 f303 	lsr.w	r3, r2, r3
 8003944:	4618      	mov	r0, r3
 8003946:	bd80      	pop	{r7, pc}
 8003948:	40021000 	.word	0x40021000
 800394c:	20000030 	.word	0x20000030

08003950 <MCAL_SPI_init>:
 8003950:	b590      	push	{r4, r7, lr}
 8003952:	b083      	sub	sp, #12
 8003954:	af00      	add	r7, sp, #0
 8003956:	6078      	str	r0, [r7, #4]
 8003958:	6039      	str	r1, [r7, #0]
 800395a:	687b      	ldr	r3, [r7, #4]
 800395c:	4a57      	ldr	r2, [pc, #348]	; (8003abc <MCAL_SPI_init+0x16c>)
 800395e:	4293      	cmp	r3, r2
 8003960:	d10c      	bne.n	800397c <MCAL_SPI_init+0x2c>
 8003962:	4a57      	ldr	r2, [pc, #348]	; (8003ac0 <MCAL_SPI_init+0x170>)
 8003964:	683b      	ldr	r3, [r7, #0]
 8003966:	4614      	mov	r4, r2
 8003968:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800396a:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800396e:	4b55      	ldr	r3, [pc, #340]	; (8003ac4 <MCAL_SPI_init+0x174>)
 8003970:	699b      	ldr	r3, [r3, #24]
 8003972:	4a54      	ldr	r2, [pc, #336]	; (8003ac4 <MCAL_SPI_init+0x174>)
 8003974:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8003978:	6193      	str	r3, [r2, #24]
 800397a:	e011      	b.n	80039a0 <MCAL_SPI_init+0x50>
 800397c:	687b      	ldr	r3, [r7, #4]
 800397e:	4a52      	ldr	r2, [pc, #328]	; (8003ac8 <MCAL_SPI_init+0x178>)
 8003980:	4293      	cmp	r3, r2
 8003982:	d10d      	bne.n	80039a0 <MCAL_SPI_init+0x50>
 8003984:	4b4e      	ldr	r3, [pc, #312]	; (8003ac0 <MCAL_SPI_init+0x170>)
 8003986:	683a      	ldr	r2, [r7, #0]
 8003988:	f103 0410 	add.w	r4, r3, #16
 800398c:	4613      	mov	r3, r2
 800398e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8003990:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8003994:	4b4b      	ldr	r3, [pc, #300]	; (8003ac4 <MCAL_SPI_init+0x174>)
 8003996:	69db      	ldr	r3, [r3, #28]
 8003998:	4a4a      	ldr	r2, [pc, #296]	; (8003ac4 <MCAL_SPI_init+0x174>)
 800399a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800399e:	61d3      	str	r3, [r2, #28]
 80039a0:	683b      	ldr	r3, [r7, #0]
 80039a2:	789b      	ldrb	r3, [r3, #2]
 80039a4:	f003 0301 	and.w	r3, r3, #1
 80039a8:	b2d9      	uxtb	r1, r3
 80039aa:	687a      	ldr	r2, [r7, #4]
 80039ac:	8813      	ldrh	r3, [r2, #0]
 80039ae:	f361 23cb 	bfi	r3, r1, #11, #1
 80039b2:	8013      	strh	r3, [r2, #0]
 80039b4:	683b      	ldr	r3, [r7, #0]
 80039b6:	799b      	ldrb	r3, [r3, #6]
 80039b8:	f003 0301 	and.w	r3, r3, #1
 80039bc:	b2d9      	uxtb	r1, r3
 80039be:	687a      	ldr	r2, [r7, #4]
 80039c0:	8813      	ldrh	r3, [r2, #0]
 80039c2:	f361 0341 	bfi	r3, r1, #1, #1
 80039c6:	8013      	strh	r3, [r2, #0]
 80039c8:	683b      	ldr	r3, [r7, #0]
 80039ca:	79db      	ldrb	r3, [r3, #7]
 80039cc:	f003 0301 	and.w	r3, r3, #1
 80039d0:	b2d9      	uxtb	r1, r3
 80039d2:	687a      	ldr	r2, [r7, #4]
 80039d4:	8813      	ldrh	r3, [r2, #0]
 80039d6:	f361 0300 	bfi	r3, r1, #0, #1
 80039da:	8013      	strh	r3, [r2, #0]
 80039dc:	683b      	ldr	r3, [r7, #0]
 80039de:	78db      	ldrb	r3, [r3, #3]
 80039e0:	f003 0301 	and.w	r3, r3, #1
 80039e4:	b2d9      	uxtb	r1, r3
 80039e6:	687a      	ldr	r2, [r7, #4]
 80039e8:	8813      	ldrh	r3, [r2, #0]
 80039ea:	f361 13c7 	bfi	r3, r1, #7, #1
 80039ee:	8013      	strh	r3, [r2, #0]
 80039f0:	683b      	ldr	r3, [r7, #0]
 80039f2:	791b      	ldrb	r3, [r3, #4]
 80039f4:	2b00      	cmp	r3, #0
 80039f6:	d105      	bne.n	8003a04 <MCAL_SPI_init+0xb4>
 80039f8:	687a      	ldr	r2, [r7, #4]
 80039fa:	8813      	ldrh	r3, [r2, #0]
 80039fc:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8003a00:	8013      	strh	r3, [r2, #0]
 8003a02:	e01c      	b.n	8003a3e <MCAL_SPI_init+0xee>
 8003a04:	683b      	ldr	r3, [r7, #0]
 8003a06:	791b      	ldrb	r3, [r3, #4]
 8003a08:	2b01      	cmp	r3, #1
 8003a0a:	d10a      	bne.n	8003a22 <MCAL_SPI_init+0xd2>
 8003a0c:	687a      	ldr	r2, [r7, #4]
 8003a0e:	8813      	ldrh	r3, [r2, #0]
 8003a10:	f36f 2349 	bfc	r3, #9, #1
 8003a14:	8013      	strh	r3, [r2, #0]
 8003a16:	687a      	ldr	r2, [r7, #4]
 8003a18:	7913      	ldrb	r3, [r2, #4]
 8003a1a:	f043 0304 	orr.w	r3, r3, #4
 8003a1e:	7113      	strb	r3, [r2, #4]
 8003a20:	e00d      	b.n	8003a3e <MCAL_SPI_init+0xee>
 8003a22:	683b      	ldr	r3, [r7, #0]
 8003a24:	791b      	ldrb	r3, [r3, #4]
 8003a26:	2b02      	cmp	r3, #2
 8003a28:	d109      	bne.n	8003a3e <MCAL_SPI_init+0xee>
 8003a2a:	687a      	ldr	r2, [r7, #4]
 8003a2c:	8813      	ldrh	r3, [r2, #0]
 8003a2e:	f36f 2349 	bfc	r3, #9, #1
 8003a32:	8013      	strh	r3, [r2, #0]
 8003a34:	687a      	ldr	r2, [r7, #4]
 8003a36:	7913      	ldrb	r3, [r2, #4]
 8003a38:	f36f 0382 	bfc	r3, #2, #1
 8003a3c:	7113      	strb	r3, [r2, #4]
 8003a3e:	683b      	ldr	r3, [r7, #0]
 8003a40:	785b      	ldrb	r3, [r3, #1]
 8003a42:	f003 0301 	and.w	r3, r3, #1
 8003a46:	b2d9      	uxtb	r1, r3
 8003a48:	687a      	ldr	r2, [r7, #4]
 8003a4a:	8813      	ldrh	r3, [r2, #0]
 8003a4c:	f361 0382 	bfi	r3, r1, #2, #1
 8003a50:	8013      	strh	r3, [r2, #0]
 8003a52:	683b      	ldr	r3, [r7, #0]
 8003a54:	795b      	ldrb	r3, [r3, #5]
 8003a56:	f003 0307 	and.w	r3, r3, #7
 8003a5a:	b2d9      	uxtb	r1, r3
 8003a5c:	687a      	ldr	r2, [r7, #4]
 8003a5e:	8813      	ldrh	r3, [r2, #0]
 8003a60:	f361 03c5 	bfi	r3, r1, #3, #3
 8003a64:	8013      	strh	r3, [r2, #0]
 8003a66:	683b      	ldr	r3, [r7, #0]
 8003a68:	7a1b      	ldrb	r3, [r3, #8]
 8003a6a:	2b01      	cmp	r3, #1
 8003a6c:	d114      	bne.n	8003a98 <MCAL_SPI_init+0x148>
 8003a6e:	687b      	ldr	r3, [r7, #4]
 8003a70:	4a12      	ldr	r2, [pc, #72]	; (8003abc <MCAL_SPI_init+0x16c>)
 8003a72:	4293      	cmp	r3, r2
 8003a74:	d106      	bne.n	8003a84 <MCAL_SPI_init+0x134>
 8003a76:	4b15      	ldr	r3, [pc, #84]	; (8003acc <MCAL_SPI_init+0x17c>)
 8003a78:	681b      	ldr	r3, [r3, #0]
 8003a7a:	4a14      	ldr	r2, [pc, #80]	; (8003acc <MCAL_SPI_init+0x17c>)
 8003a7c:	f043 0308 	orr.w	r3, r3, #8
 8003a80:	6013      	str	r3, [r2, #0]
 8003a82:	e009      	b.n	8003a98 <MCAL_SPI_init+0x148>
 8003a84:	687b      	ldr	r3, [r7, #4]
 8003a86:	4a10      	ldr	r2, [pc, #64]	; (8003ac8 <MCAL_SPI_init+0x178>)
 8003a88:	4293      	cmp	r3, r2
 8003a8a:	d105      	bne.n	8003a98 <MCAL_SPI_init+0x148>
 8003a8c:	4b0f      	ldr	r3, [pc, #60]	; (8003acc <MCAL_SPI_init+0x17c>)
 8003a8e:	681b      	ldr	r3, [r3, #0]
 8003a90:	4a0e      	ldr	r2, [pc, #56]	; (8003acc <MCAL_SPI_init+0x17c>)
 8003a92:	f043 0310 	orr.w	r3, r3, #16
 8003a96:	6013      	str	r3, [r2, #0]
 8003a98:	6878      	ldr	r0, [r7, #4]
 8003a9a:	f000 f853 	bl	8003b44 <MCAL_SET_GPIO>
 8003a9e:	683b      	ldr	r3, [r7, #0]
 8003aa0:	781b      	ldrb	r3, [r3, #0]
 8003aa2:	f003 0301 	and.w	r3, r3, #1
 8003aa6:	b2d9      	uxtb	r1, r3
 8003aa8:	687a      	ldr	r2, [r7, #4]
 8003aaa:	8813      	ldrh	r3, [r2, #0]
 8003aac:	f361 1386 	bfi	r3, r1, #6, #1
 8003ab0:	8013      	strh	r3, [r2, #0]
 8003ab2:	bf00      	nop
 8003ab4:	370c      	adds	r7, #12
 8003ab6:	46bd      	mov	sp, r7
 8003ab8:	bd90      	pop	{r4, r7, pc}
 8003aba:	bf00      	nop
 8003abc:	40013000 	.word	0x40013000
 8003ac0:	200041cc 	.word	0x200041cc
 8003ac4:	40021000 	.word	0x40021000
 8003ac8:	40003800 	.word	0x40003800
 8003acc:	e000e104 	.word	0xe000e104

08003ad0 <MCAL_SPI_SendData>:
 8003ad0:	b480      	push	{r7}
 8003ad2:	b085      	sub	sp, #20
 8003ad4:	af00      	add	r7, sp, #0
 8003ad6:	6078      	str	r0, [r7, #4]
 8003ad8:	460b      	mov	r3, r1
 8003ada:	70fb      	strb	r3, [r7, #3]
 8003adc:	2300      	movs	r3, #0
 8003ade:	60fb      	str	r3, [r7, #12]
 8003ae0:	687b      	ldr	r3, [r7, #4]
 8003ae2:	4a14      	ldr	r2, [pc, #80]	; (8003b34 <MCAL_SPI_SendData+0x64>)
 8003ae4:	4293      	cmp	r3, r2
 8003ae6:	d102      	bne.n	8003aee <MCAL_SPI_SendData+0x1e>
 8003ae8:	4b13      	ldr	r3, [pc, #76]	; (8003b38 <MCAL_SPI_SendData+0x68>)
 8003aea:	60fb      	str	r3, [r7, #12]
 8003aec:	e005      	b.n	8003afa <MCAL_SPI_SendData+0x2a>
 8003aee:	687b      	ldr	r3, [r7, #4]
 8003af0:	4a12      	ldr	r2, [pc, #72]	; (8003b3c <MCAL_SPI_SendData+0x6c>)
 8003af2:	4293      	cmp	r3, r2
 8003af4:	d101      	bne.n	8003afa <MCAL_SPI_SendData+0x2a>
 8003af6:	4b12      	ldr	r3, [pc, #72]	; (8003b40 <MCAL_SPI_SendData+0x70>)
 8003af8:	60fb      	str	r3, [r7, #12]
 8003afa:	68fb      	ldr	r3, [r7, #12]
 8003afc:	7a1b      	ldrb	r3, [r3, #8]
 8003afe:	2b01      	cmp	r3, #1
 8003b00:	d105      	bne.n	8003b0e <MCAL_SPI_SendData+0x3e>
 8003b02:	687a      	ldr	r2, [r7, #4]
 8003b04:	7913      	ldrb	r3, [r2, #4]
 8003b06:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003b0a:	7113      	strb	r3, [r2, #4]
 8003b0c:	e007      	b.n	8003b1e <MCAL_SPI_SendData+0x4e>
 8003b0e:	bf00      	nop
 8003b10:	687b      	ldr	r3, [r7, #4]
 8003b12:	689b      	ldr	r3, [r3, #8]
 8003b14:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8003b18:	b2db      	uxtb	r3, r3
 8003b1a:	2b00      	cmp	r3, #0
 8003b1c:	d0f8      	beq.n	8003b10 <MCAL_SPI_SendData+0x40>
 8003b1e:	78fa      	ldrb	r2, [r7, #3]
 8003b20:	687b      	ldr	r3, [r7, #4]
 8003b22:	60da      	str	r2, [r3, #12]
 8003b24:	687b      	ldr	r3, [r7, #4]
 8003b26:	68db      	ldr	r3, [r3, #12]
 8003b28:	b2db      	uxtb	r3, r3
 8003b2a:	4618      	mov	r0, r3
 8003b2c:	3714      	adds	r7, #20
 8003b2e:	46bd      	mov	sp, r7
 8003b30:	bc80      	pop	{r7}
 8003b32:	4770      	bx	lr
 8003b34:	40013000 	.word	0x40013000
 8003b38:	200041cc 	.word	0x200041cc
 8003b3c:	40003800 	.word	0x40003800
 8003b40:	200041dc 	.word	0x200041dc

08003b44 <MCAL_SET_GPIO>:
 8003b44:	b580      	push	{r7, lr}
 8003b46:	b096      	sub	sp, #88	; 0x58
 8003b48:	af00      	add	r7, sp, #0
 8003b4a:	6078      	str	r0, [r7, #4]
 8003b4c:	2300      	movs	r3, #0
 8003b4e:	657b      	str	r3, [r7, #84]	; 0x54
 8003b50:	687b      	ldr	r3, [r7, #4]
 8003b52:	4a6c      	ldr	r2, [pc, #432]	; (8003d04 <MCAL_SET_GPIO+0x1c0>)
 8003b54:	4293      	cmp	r3, r2
 8003b56:	d169      	bne.n	8003c2c <MCAL_SET_GPIO+0xe8>
 8003b58:	4b6b      	ldr	r3, [pc, #428]	; (8003d08 <MCAL_SET_GPIO+0x1c4>)
 8003b5a:	657b      	str	r3, [r7, #84]	; 0x54
 8003b5c:	4b6b      	ldr	r3, [pc, #428]	; (8003d0c <MCAL_SET_GPIO+0x1c8>)
 8003b5e:	699b      	ldr	r3, [r3, #24]
 8003b60:	4a6a      	ldr	r2, [pc, #424]	; (8003d0c <MCAL_SET_GPIO+0x1c8>)
 8003b62:	f043 0304 	orr.w	r3, r3, #4
 8003b66:	6193      	str	r3, [r2, #24]
 8003b68:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8003b6a:	791b      	ldrb	r3, [r3, #4]
 8003b6c:	2b00      	cmp	r3, #0
 8003b6e:	d108      	bne.n	8003b82 <MCAL_SET_GPIO+0x3e>
 8003b70:	4b67      	ldr	r3, [pc, #412]	; (8003d10 <MCAL_SET_GPIO+0x1cc>)
 8003b72:	681b      	ldr	r3, [r3, #0]
 8003b74:	653b      	str	r3, [r7, #80]	; 0x50
 8003b76:	4a63      	ldr	r2, [pc, #396]	; (8003d04 <MCAL_SET_GPIO+0x1c0>)
 8003b78:	8813      	ldrh	r3, [r2, #0]
 8003b7a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003b7e:	8013      	strh	r3, [r2, #0]
 8003b80:	e00e      	b.n	8003ba0 <MCAL_SET_GPIO+0x5c>
 8003b82:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8003b84:	791b      	ldrb	r3, [r3, #4]
 8003b86:	2b01      	cmp	r3, #1
 8003b88:	d103      	bne.n	8003b92 <MCAL_SET_GPIO+0x4e>
 8003b8a:	4b62      	ldr	r3, [pc, #392]	; (8003d14 <MCAL_SET_GPIO+0x1d0>)
 8003b8c:	681b      	ldr	r3, [r3, #0]
 8003b8e:	653b      	str	r3, [r7, #80]	; 0x50
 8003b90:	e006      	b.n	8003ba0 <MCAL_SET_GPIO+0x5c>
 8003b92:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8003b94:	791b      	ldrb	r3, [r3, #4]
 8003b96:	2b02      	cmp	r3, #2
 8003b98:	d102      	bne.n	8003ba0 <MCAL_SET_GPIO+0x5c>
 8003b9a:	4b5f      	ldr	r3, [pc, #380]	; (8003d18 <MCAL_SET_GPIO+0x1d4>)
 8003b9c:	681b      	ldr	r3, [r3, #0]
 8003b9e:	653b      	str	r3, [r7, #80]	; 0x50
 8003ba0:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8003ba4:	4619      	mov	r1, r3
 8003ba6:	485d      	ldr	r0, [pc, #372]	; (8003d1c <MCAL_SET_GPIO+0x1d8>)
 8003ba8:	f7ff f8d0 	bl	8002d4c <MCAL_GPIO_init>
 8003bac:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8003bae:	785b      	ldrb	r3, [r3, #1]
 8003bb0:	2b01      	cmp	r3, #1
 8003bb2:	d103      	bne.n	8003bbc <MCAL_SET_GPIO+0x78>
 8003bb4:	4b5a      	ldr	r3, [pc, #360]	; (8003d20 <MCAL_SET_GPIO+0x1dc>)
 8003bb6:	681b      	ldr	r3, [r3, #0]
 8003bb8:	653b      	str	r3, [r7, #80]	; 0x50
 8003bba:	e006      	b.n	8003bca <MCAL_SET_GPIO+0x86>
 8003bbc:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8003bbe:	785b      	ldrb	r3, [r3, #1]
 8003bc0:	2b00      	cmp	r3, #0
 8003bc2:	d102      	bne.n	8003bca <MCAL_SET_GPIO+0x86>
 8003bc4:	4b57      	ldr	r3, [pc, #348]	; (8003d24 <MCAL_SET_GPIO+0x1e0>)
 8003bc6:	681b      	ldr	r3, [r3, #0]
 8003bc8:	653b      	str	r3, [r7, #80]	; 0x50
 8003bca:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8003bce:	4619      	mov	r1, r3
 8003bd0:	4852      	ldr	r0, [pc, #328]	; (8003d1c <MCAL_SET_GPIO+0x1d8>)
 8003bd2:	f7ff f8bb 	bl	8002d4c <MCAL_GPIO_init>
 8003bd6:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8003bd8:	785b      	ldrb	r3, [r3, #1]
 8003bda:	2b01      	cmp	r3, #1
 8003bdc:	d103      	bne.n	8003be6 <MCAL_SET_GPIO+0xa2>
 8003bde:	4b52      	ldr	r3, [pc, #328]	; (8003d28 <MCAL_SET_GPIO+0x1e4>)
 8003be0:	681b      	ldr	r3, [r3, #0]
 8003be2:	653b      	str	r3, [r7, #80]	; 0x50
 8003be4:	e006      	b.n	8003bf4 <MCAL_SET_GPIO+0xb0>
 8003be6:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8003be8:	785b      	ldrb	r3, [r3, #1]
 8003bea:	2b00      	cmp	r3, #0
 8003bec:	d102      	bne.n	8003bf4 <MCAL_SET_GPIO+0xb0>
 8003bee:	4b4f      	ldr	r3, [pc, #316]	; (8003d2c <MCAL_SET_GPIO+0x1e8>)
 8003bf0:	681b      	ldr	r3, [r3, #0]
 8003bf2:	653b      	str	r3, [r7, #80]	; 0x50
 8003bf4:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8003bf8:	4619      	mov	r1, r3
 8003bfa:	4848      	ldr	r0, [pc, #288]	; (8003d1c <MCAL_SET_GPIO+0x1d8>)
 8003bfc:	f7ff f8a6 	bl	8002d4c <MCAL_GPIO_init>
 8003c00:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8003c02:	785b      	ldrb	r3, [r3, #1]
 8003c04:	2b01      	cmp	r3, #1
 8003c06:	d103      	bne.n	8003c10 <MCAL_SET_GPIO+0xcc>
 8003c08:	4b49      	ldr	r3, [pc, #292]	; (8003d30 <MCAL_SET_GPIO+0x1ec>)
 8003c0a:	681b      	ldr	r3, [r3, #0]
 8003c0c:	653b      	str	r3, [r7, #80]	; 0x50
 8003c0e:	e006      	b.n	8003c1e <MCAL_SET_GPIO+0xda>
 8003c10:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8003c12:	785b      	ldrb	r3, [r3, #1]
 8003c14:	2b00      	cmp	r3, #0
 8003c16:	d102      	bne.n	8003c1e <MCAL_SET_GPIO+0xda>
 8003c18:	4b46      	ldr	r3, [pc, #280]	; (8003d34 <MCAL_SET_GPIO+0x1f0>)
 8003c1a:	681b      	ldr	r3, [r3, #0]
 8003c1c:	653b      	str	r3, [r7, #80]	; 0x50
 8003c1e:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8003c22:	4619      	mov	r1, r3
 8003c24:	483d      	ldr	r0, [pc, #244]	; (8003d1c <MCAL_SET_GPIO+0x1d8>)
 8003c26:	f7ff f891 	bl	8002d4c <MCAL_GPIO_init>
 8003c2a:	e067      	b.n	8003cfc <MCAL_SET_GPIO+0x1b8>
 8003c2c:	687b      	ldr	r3, [r7, #4]
 8003c2e:	4a42      	ldr	r2, [pc, #264]	; (8003d38 <MCAL_SET_GPIO+0x1f4>)
 8003c30:	4293      	cmp	r3, r2
 8003c32:	d163      	bne.n	8003cfc <MCAL_SET_GPIO+0x1b8>
 8003c34:	4b41      	ldr	r3, [pc, #260]	; (8003d3c <MCAL_SET_GPIO+0x1f8>)
 8003c36:	657b      	str	r3, [r7, #84]	; 0x54
 8003c38:	4b34      	ldr	r3, [pc, #208]	; (8003d0c <MCAL_SET_GPIO+0x1c8>)
 8003c3a:	699b      	ldr	r3, [r3, #24]
 8003c3c:	4a33      	ldr	r2, [pc, #204]	; (8003d0c <MCAL_SET_GPIO+0x1c8>)
 8003c3e:	f043 0308 	orr.w	r3, r3, #8
 8003c42:	6193      	str	r3, [r2, #24]
 8003c44:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8003c46:	791b      	ldrb	r3, [r3, #4]
 8003c48:	2b00      	cmp	r3, #0
 8003c4a:	d103      	bne.n	8003c54 <MCAL_SET_GPIO+0x110>
 8003c4c:	4b3c      	ldr	r3, [pc, #240]	; (8003d40 <MCAL_SET_GPIO+0x1fc>)
 8003c4e:	681b      	ldr	r3, [r3, #0]
 8003c50:	653b      	str	r3, [r7, #80]	; 0x50
 8003c52:	e00e      	b.n	8003c72 <MCAL_SET_GPIO+0x12e>
 8003c54:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8003c56:	791b      	ldrb	r3, [r3, #4]
 8003c58:	2b01      	cmp	r3, #1
 8003c5a:	d103      	bne.n	8003c64 <MCAL_SET_GPIO+0x120>
 8003c5c:	4b38      	ldr	r3, [pc, #224]	; (8003d40 <MCAL_SET_GPIO+0x1fc>)
 8003c5e:	681b      	ldr	r3, [r3, #0]
 8003c60:	653b      	str	r3, [r7, #80]	; 0x50
 8003c62:	e006      	b.n	8003c72 <MCAL_SET_GPIO+0x12e>
 8003c64:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8003c66:	791b      	ldrb	r3, [r3, #4]
 8003c68:	2b02      	cmp	r3, #2
 8003c6a:	d102      	bne.n	8003c72 <MCAL_SET_GPIO+0x12e>
 8003c6c:	4b35      	ldr	r3, [pc, #212]	; (8003d44 <MCAL_SET_GPIO+0x200>)
 8003c6e:	681b      	ldr	r3, [r3, #0]
 8003c70:	653b      	str	r3, [r7, #80]	; 0x50
 8003c72:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8003c76:	4619      	mov	r1, r3
 8003c78:	4828      	ldr	r0, [pc, #160]	; (8003d1c <MCAL_SET_GPIO+0x1d8>)
 8003c7a:	f7ff f867 	bl	8002d4c <MCAL_GPIO_init>
 8003c7e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8003c80:	785b      	ldrb	r3, [r3, #1]
 8003c82:	2b01      	cmp	r3, #1
 8003c84:	d103      	bne.n	8003c8e <MCAL_SET_GPIO+0x14a>
 8003c86:	4b30      	ldr	r3, [pc, #192]	; (8003d48 <MCAL_SET_GPIO+0x204>)
 8003c88:	681b      	ldr	r3, [r3, #0]
 8003c8a:	653b      	str	r3, [r7, #80]	; 0x50
 8003c8c:	e006      	b.n	8003c9c <MCAL_SET_GPIO+0x158>
 8003c8e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8003c90:	785b      	ldrb	r3, [r3, #1]
 8003c92:	2b00      	cmp	r3, #0
 8003c94:	d102      	bne.n	8003c9c <MCAL_SET_GPIO+0x158>
 8003c96:	4b2d      	ldr	r3, [pc, #180]	; (8003d4c <MCAL_SET_GPIO+0x208>)
 8003c98:	681b      	ldr	r3, [r3, #0]
 8003c9a:	653b      	str	r3, [r7, #80]	; 0x50
 8003c9c:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8003ca0:	4619      	mov	r1, r3
 8003ca2:	481e      	ldr	r0, [pc, #120]	; (8003d1c <MCAL_SET_GPIO+0x1d8>)
 8003ca4:	f7ff f852 	bl	8002d4c <MCAL_GPIO_init>
 8003ca8:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8003caa:	785b      	ldrb	r3, [r3, #1]
 8003cac:	2b01      	cmp	r3, #1
 8003cae:	d103      	bne.n	8003cb8 <MCAL_SET_GPIO+0x174>
 8003cb0:	4b27      	ldr	r3, [pc, #156]	; (8003d50 <MCAL_SET_GPIO+0x20c>)
 8003cb2:	681b      	ldr	r3, [r3, #0]
 8003cb4:	653b      	str	r3, [r7, #80]	; 0x50
 8003cb6:	e006      	b.n	8003cc6 <MCAL_SET_GPIO+0x182>
 8003cb8:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8003cba:	785b      	ldrb	r3, [r3, #1]
 8003cbc:	2b00      	cmp	r3, #0
 8003cbe:	d102      	bne.n	8003cc6 <MCAL_SET_GPIO+0x182>
 8003cc0:	4b24      	ldr	r3, [pc, #144]	; (8003d54 <MCAL_SET_GPIO+0x210>)
 8003cc2:	681b      	ldr	r3, [r3, #0]
 8003cc4:	653b      	str	r3, [r7, #80]	; 0x50
 8003cc6:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8003cca:	4619      	mov	r1, r3
 8003ccc:	4813      	ldr	r0, [pc, #76]	; (8003d1c <MCAL_SET_GPIO+0x1d8>)
 8003cce:	f7ff f83d 	bl	8002d4c <MCAL_GPIO_init>
 8003cd2:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8003cd4:	785b      	ldrb	r3, [r3, #1]
 8003cd6:	2b01      	cmp	r3, #1
 8003cd8:	d103      	bne.n	8003ce2 <MCAL_SET_GPIO+0x19e>
 8003cda:	4b1f      	ldr	r3, [pc, #124]	; (8003d58 <MCAL_SET_GPIO+0x214>)
 8003cdc:	681b      	ldr	r3, [r3, #0]
 8003cde:	653b      	str	r3, [r7, #80]	; 0x50
 8003ce0:	e006      	b.n	8003cf0 <MCAL_SET_GPIO+0x1ac>
 8003ce2:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8003ce4:	785b      	ldrb	r3, [r3, #1]
 8003ce6:	2b00      	cmp	r3, #0
 8003ce8:	d102      	bne.n	8003cf0 <MCAL_SET_GPIO+0x1ac>
 8003cea:	4b1c      	ldr	r3, [pc, #112]	; (8003d5c <MCAL_SET_GPIO+0x218>)
 8003cec:	681b      	ldr	r3, [r3, #0]
 8003cee:	653b      	str	r3, [r7, #80]	; 0x50
 8003cf0:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8003cf4:	4619      	mov	r1, r3
 8003cf6:	4809      	ldr	r0, [pc, #36]	; (8003d1c <MCAL_SET_GPIO+0x1d8>)
 8003cf8:	f7ff f828 	bl	8002d4c <MCAL_GPIO_init>
 8003cfc:	bf00      	nop
 8003cfe:	3758      	adds	r7, #88	; 0x58
 8003d00:	46bd      	mov	sp, r7
 8003d02:	bd80      	pop	{r7, pc}
 8003d04:	40013000 	.word	0x40013000
 8003d08:	200041cc 	.word	0x200041cc
 8003d0c:	40021000 	.word	0x40021000
 8003d10:	0800573c 	.word	0x0800573c
 8003d14:	08005740 	.word	0x08005740
 8003d18:	08005744 	.word	0x08005744
 8003d1c:	40010800 	.word	0x40010800
 8003d20:	08005748 	.word	0x08005748
 8003d24:	0800574c 	.word	0x0800574c
 8003d28:	08005750 	.word	0x08005750
 8003d2c:	08005754 	.word	0x08005754
 8003d30:	08005758 	.word	0x08005758
 8003d34:	0800575c 	.word	0x0800575c
 8003d38:	40003800 	.word	0x40003800
 8003d3c:	200041dc 	.word	0x200041dc
 8003d40:	08005760 	.word	0x08005760
 8003d44:	08005764 	.word	0x08005764
 8003d48:	08005768 	.word	0x08005768
 8003d4c:	0800576c 	.word	0x0800576c
 8003d50:	08005770 	.word	0x08005770
 8003d54:	08005774 	.word	0x08005774
 8003d58:	08005778 	.word	0x08005778
 8003d5c:	0800577c 	.word	0x0800577c

08003d60 <SPI1_IRQHandler>:
 8003d60:	b580      	push	{r7, lr}
 8003d62:	b082      	sub	sp, #8
 8003d64:	af00      	add	r7, sp, #0
 8003d66:	1d3b      	adds	r3, r7, #4
 8003d68:	4905      	ldr	r1, [pc, #20]	; (8003d80 <SPI1_IRQHandler+0x20>)
 8003d6a:	4618      	mov	r0, r3
 8003d6c:	f000 f80c 	bl	8003d88 <get_flag_source>
 8003d70:	4b04      	ldr	r3, [pc, #16]	; (8003d84 <SPI1_IRQHandler+0x24>)
 8003d72:	68db      	ldr	r3, [r3, #12]
 8003d74:	7938      	ldrb	r0, [r7, #4]
 8003d76:	4798      	blx	r3
 8003d78:	bf00      	nop
 8003d7a:	3708      	adds	r7, #8
 8003d7c:	46bd      	mov	sp, r7
 8003d7e:	bd80      	pop	{r7, pc}
 8003d80:	40013000 	.word	0x40013000
 8003d84:	200041cc 	.word	0x200041cc

08003d88 <get_flag_source>:
 8003d88:	b480      	push	{r7}
 8003d8a:	b083      	sub	sp, #12
 8003d8c:	af00      	add	r7, sp, #0
 8003d8e:	6078      	str	r0, [r7, #4]
 8003d90:	6039      	str	r1, [r7, #0]
 8003d92:	683b      	ldr	r3, [r7, #0]
 8003d94:	689b      	ldr	r3, [r3, #8]
 8003d96:	f3c3 0300 	ubfx	r3, r3, #0, #1
 8003d9a:	b2db      	uxtb	r3, r3
 8003d9c:	2b00      	cmp	r3, #0
 8003d9e:	d00f      	beq.n	8003dc0 <get_flag_source+0x38>
 8003da0:	687a      	ldr	r2, [r7, #4]
 8003da2:	7813      	ldrb	r3, [r2, #0]
 8003da4:	f36f 0300 	bfc	r3, #0, #1
 8003da8:	7013      	strb	r3, [r2, #0]
 8003daa:	687a      	ldr	r2, [r7, #4]
 8003dac:	7813      	ldrb	r3, [r2, #0]
 8003dae:	f043 0302 	orr.w	r3, r3, #2
 8003db2:	7013      	strb	r3, [r2, #0]
 8003db4:	683a      	ldr	r2, [r7, #0]
 8003db6:	7913      	ldrb	r3, [r2, #4]
 8003db8:	f36f 1386 	bfc	r3, #6, #1
 8003dbc:	7113      	strb	r3, [r2, #4]
 8003dbe:	e015      	b.n	8003dec <get_flag_source+0x64>
 8003dc0:	683b      	ldr	r3, [r7, #0]
 8003dc2:	689b      	ldr	r3, [r3, #8]
 8003dc4:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8003dc8:	b2db      	uxtb	r3, r3
 8003dca:	2b00      	cmp	r3, #0
 8003dcc:	d00e      	beq.n	8003dec <get_flag_source+0x64>
 8003dce:	687a      	ldr	r2, [r7, #4]
 8003dd0:	7813      	ldrb	r3, [r2, #0]
 8003dd2:	f043 0301 	orr.w	r3, r3, #1
 8003dd6:	7013      	strb	r3, [r2, #0]
 8003dd8:	687a      	ldr	r2, [r7, #4]
 8003dda:	7813      	ldrb	r3, [r2, #0]
 8003ddc:	f36f 0341 	bfc	r3, #1, #1
 8003de0:	7013      	strb	r3, [r2, #0]
 8003de2:	683a      	ldr	r2, [r7, #0]
 8003de4:	7913      	ldrb	r3, [r2, #4]
 8003de6:	f36f 13c7 	bfc	r3, #7, #1
 8003dea:	7113      	strb	r3, [r2, #4]
 8003dec:	bf00      	nop
 8003dee:	370c      	adds	r7, #12
 8003df0:	46bd      	mov	sp, r7
 8003df2:	bc80      	pop	{r7}
 8003df4:	4770      	bx	lr
	...

08003df8 <MCAL_SET_TIMx_GPIO>:
 8003df8:	b580      	push	{r7, lr}
 8003dfa:	b084      	sub	sp, #16
 8003dfc:	af00      	add	r7, sp, #0
 8003dfe:	6078      	str	r0, [r7, #4]
 8003e00:	4b06      	ldr	r3, [pc, #24]	; (8003e1c <MCAL_SET_TIMx_GPIO+0x24>)
 8003e02:	681b      	ldr	r3, [r3, #0]
 8003e04:	60fb      	str	r3, [r7, #12]
 8003e06:	f107 030c 	add.w	r3, r7, #12
 8003e0a:	4619      	mov	r1, r3
 8003e0c:	4804      	ldr	r0, [pc, #16]	; (8003e20 <MCAL_SET_TIMx_GPIO+0x28>)
 8003e0e:	f7fe ff9d 	bl	8002d4c <MCAL_GPIO_init>
 8003e12:	bf00      	nop
 8003e14:	3710      	adds	r7, #16
 8003e16:	46bd      	mov	sp, r7
 8003e18:	bd80      	pop	{r7, pc}
 8003e1a:	bf00      	nop
 8003e1c:	08005780 	.word	0x08005780
 8003e20:	40010800 	.word	0x40010800

08003e24 <TIMER_1_8_start>:
 8003e24:	b590      	push	{r4, r7, lr}
 8003e26:	b083      	sub	sp, #12
 8003e28:	af00      	add	r7, sp, #0
 8003e2a:	6078      	str	r0, [r7, #4]
 8003e2c:	6039      	str	r1, [r7, #0]
 8003e2e:	4a3d      	ldr	r2, [pc, #244]	; (8003f24 <TIMER_1_8_start+0x100>)
 8003e30:	683b      	ldr	r3, [r7, #0]
 8003e32:	4614      	mov	r4, r2
 8003e34:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8003e36:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8003e3a:	4a3b      	ldr	r2, [pc, #236]	; (8003f28 <TIMER_1_8_start+0x104>)
 8003e3c:	687b      	ldr	r3, [r7, #4]
 8003e3e:	6013      	str	r3, [r2, #0]
 8003e40:	687b      	ldr	r3, [r7, #4]
 8003e42:	4a3a      	ldr	r2, [pc, #232]	; (8003f2c <TIMER_1_8_start+0x108>)
 8003e44:	4293      	cmp	r3, r2
 8003e46:	d105      	bne.n	8003e54 <TIMER_1_8_start+0x30>
 8003e48:	4b39      	ldr	r3, [pc, #228]	; (8003f30 <TIMER_1_8_start+0x10c>)
 8003e4a:	699b      	ldr	r3, [r3, #24]
 8003e4c:	4a38      	ldr	r2, [pc, #224]	; (8003f30 <TIMER_1_8_start+0x10c>)
 8003e4e:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8003e52:	6193      	str	r3, [r2, #24]
 8003e54:	683b      	ldr	r3, [r7, #0]
 8003e56:	881b      	ldrh	r3, [r3, #0]
 8003e58:	461a      	mov	r2, r3
 8003e5a:	687b      	ldr	r3, [r7, #4]
 8003e5c:	629a      	str	r2, [r3, #40]	; 0x28
 8003e5e:	687a      	ldr	r2, [r7, #4]
 8003e60:	6813      	ldr	r3, [r2, #0]
 8003e62:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003e66:	6013      	str	r3, [r2, #0]
 8003e68:	683b      	ldr	r3, [r7, #0]
 8003e6a:	885b      	ldrh	r3, [r3, #2]
 8003e6c:	461a      	mov	r2, r3
 8003e6e:	687b      	ldr	r3, [r7, #4]
 8003e70:	62da      	str	r2, [r3, #44]	; 0x2c
 8003e72:	683b      	ldr	r3, [r7, #0]
 8003e74:	889b      	ldrh	r3, [r3, #4]
 8003e76:	461a      	mov	r2, r3
 8003e78:	687b      	ldr	r3, [r7, #4]
 8003e7a:	631a      	str	r2, [r3, #48]	; 0x30
 8003e7c:	683b      	ldr	r3, [r7, #0]
 8003e7e:	7a5b      	ldrb	r3, [r3, #9]
 8003e80:	2b02      	cmp	r3, #2
 8003e82:	d01c      	beq.n	8003ebe <TIMER_1_8_start+0x9a>
 8003e84:	2b02      	cmp	r3, #2
 8003e86:	dc20      	bgt.n	8003eca <TIMER_1_8_start+0xa6>
 8003e88:	2b00      	cmp	r3, #0
 8003e8a:	d002      	beq.n	8003e92 <TIMER_1_8_start+0x6e>
 8003e8c:	2b01      	cmp	r3, #1
 8003e8e:	d00b      	beq.n	8003ea8 <TIMER_1_8_start+0x84>
 8003e90:	e01b      	b.n	8003eca <TIMER_1_8_start+0xa6>
 8003e92:	687a      	ldr	r2, [r7, #4]
 8003e94:	6813      	ldr	r3, [r2, #0]
 8003e96:	f36f 1346 	bfc	r3, #5, #2
 8003e9a:	6013      	str	r3, [r2, #0]
 8003e9c:	687a      	ldr	r2, [r7, #4]
 8003e9e:	6813      	ldr	r3, [r2, #0]
 8003ea0:	f36f 1304 	bfc	r3, #4, #1
 8003ea4:	6013      	str	r3, [r2, #0]
 8003ea6:	e013      	b.n	8003ed0 <TIMER_1_8_start+0xac>
 8003ea8:	687a      	ldr	r2, [r7, #4]
 8003eaa:	6813      	ldr	r3, [r2, #0]
 8003eac:	f36f 1346 	bfc	r3, #5, #2
 8003eb0:	6013      	str	r3, [r2, #0]
 8003eb2:	687a      	ldr	r2, [r7, #4]
 8003eb4:	6813      	ldr	r3, [r2, #0]
 8003eb6:	f043 0310 	orr.w	r3, r3, #16
 8003eba:	6013      	str	r3, [r2, #0]
 8003ebc:	e008      	b.n	8003ed0 <TIMER_1_8_start+0xac>
 8003ebe:	687a      	ldr	r2, [r7, #4]
 8003ec0:	6813      	ldr	r3, [r2, #0]
 8003ec2:	f043 0360 	orr.w	r3, r3, #96	; 0x60
 8003ec6:	6013      	str	r3, [r2, #0]
 8003ec8:	e002      	b.n	8003ed0 <TIMER_1_8_start+0xac>
 8003eca:	f7fe faa3 	bl	8002414 <ERROR_HANDLER>
 8003ece:	bf00      	nop
 8003ed0:	6878      	ldr	r0, [r7, #4]
 8003ed2:	f7ff ff91 	bl	8003df8 <MCAL_SET_TIMx_GPIO>
 8003ed6:	687a      	ldr	r2, [r7, #4]
 8003ed8:	6813      	ldr	r3, [r2, #0]
 8003eda:	f043 0301 	orr.w	r3, r3, #1
 8003ede:	6013      	str	r3, [r2, #0]
 8003ee0:	683b      	ldr	r3, [r7, #0]
 8003ee2:	7a1b      	ldrb	r3, [r3, #8]
 8003ee4:	2b00      	cmp	r3, #0
 8003ee6:	d10b      	bne.n	8003f00 <TIMER_1_8_start+0xdc>
 8003ee8:	687a      	ldr	r2, [r7, #4]
 8003eea:	68d3      	ldr	r3, [r2, #12]
 8003eec:	f043 0301 	orr.w	r3, r3, #1
 8003ef0:	60d3      	str	r3, [r2, #12]
 8003ef2:	4b10      	ldr	r3, [pc, #64]	; (8003f34 <TIMER_1_8_start+0x110>)
 8003ef4:	681b      	ldr	r3, [r3, #0]
 8003ef6:	4a0f      	ldr	r2, [pc, #60]	; (8003f34 <TIMER_1_8_start+0x110>)
 8003ef8:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8003efc:	6013      	str	r3, [r2, #0]
 8003efe:	e00c      	b.n	8003f1a <TIMER_1_8_start+0xf6>
 8003f00:	bf00      	nop
 8003f02:	687b      	ldr	r3, [r7, #4]
 8003f04:	691b      	ldr	r3, [r3, #16]
 8003f06:	f3c3 0300 	ubfx	r3, r3, #0, #1
 8003f0a:	b2db      	uxtb	r3, r3
 8003f0c:	2b00      	cmp	r3, #0
 8003f0e:	d0f8      	beq.n	8003f02 <TIMER_1_8_start+0xde>
 8003f10:	687a      	ldr	r2, [r7, #4]
 8003f12:	6913      	ldr	r3, [r2, #16]
 8003f14:	f36f 0300 	bfc	r3, #0, #1
 8003f18:	6113      	str	r3, [r2, #16]
 8003f1a:	bf00      	nop
 8003f1c:	370c      	adds	r7, #12
 8003f1e:	46bd      	mov	sp, r7
 8003f20:	bd90      	pop	{r4, r7, pc}
 8003f22:	bf00      	nop
 8003f24:	200041ec 	.word	0x200041ec
 8003f28:	200041fc 	.word	0x200041fc
 8003f2c:	40012c00 	.word	0x40012c00
 8003f30:	40021000 	.word	0x40021000
 8003f34:	e000e100 	.word	0xe000e100

08003f38 <TIM1_UP_IRQHandler>:
 8003f38:	b580      	push	{r7, lr}
 8003f3a:	af00      	add	r7, sp, #0
 8003f3c:	4b05      	ldr	r3, [pc, #20]	; (8003f54 <TIM1_UP_IRQHandler+0x1c>)
 8003f3e:	68db      	ldr	r3, [r3, #12]
 8003f40:	4798      	blx	r3
 8003f42:	4b05      	ldr	r3, [pc, #20]	; (8003f58 <TIM1_UP_IRQHandler+0x20>)
 8003f44:	681a      	ldr	r2, [r3, #0]
 8003f46:	6913      	ldr	r3, [r2, #16]
 8003f48:	f36f 0300 	bfc	r3, #0, #1
 8003f4c:	6113      	str	r3, [r2, #16]
 8003f4e:	bf00      	nop
 8003f50:	bd80      	pop	{r7, pc}
 8003f52:	bf00      	nop
 8003f54:	200041ec 	.word	0x200041ec
 8003f58:	200041fc 	.word	0x200041fc

08003f5c <TIM1_CC_IRQHandler>:
 8003f5c:	b580      	push	{r7, lr}
 8003f5e:	af00      	add	r7, sp, #0
 8003f60:	4b05      	ldr	r3, [pc, #20]	; (8003f78 <TIM1_CC_IRQHandler+0x1c>)
 8003f62:	68db      	ldr	r3, [r3, #12]
 8003f64:	4798      	blx	r3
 8003f66:	4b05      	ldr	r3, [pc, #20]	; (8003f7c <TIM1_CC_IRQHandler+0x20>)
 8003f68:	681a      	ldr	r2, [r3, #0]
 8003f6a:	6913      	ldr	r3, [r2, #16]
 8003f6c:	f36f 0341 	bfc	r3, #1, #1
 8003f70:	6113      	str	r3, [r2, #16]
 8003f72:	bf00      	nop
 8003f74:	bd80      	pop	{r7, pc}
 8003f76:	bf00      	nop
 8003f78:	200041ec 	.word	0x200041ec
 8003f7c:	200041fc 	.word	0x200041fc

08003f80 <TIM1_BRK_IRQHandler>:
 8003f80:	b580      	push	{r7, lr}
 8003f82:	af00      	add	r7, sp, #0
 8003f84:	4b05      	ldr	r3, [pc, #20]	; (8003f9c <TIM1_BRK_IRQHandler+0x1c>)
 8003f86:	68db      	ldr	r3, [r3, #12]
 8003f88:	4798      	blx	r3
 8003f8a:	4b05      	ldr	r3, [pc, #20]	; (8003fa0 <TIM1_BRK_IRQHandler+0x20>)
 8003f8c:	681a      	ldr	r2, [r3, #0]
 8003f8e:	6913      	ldr	r3, [r2, #16]
 8003f90:	f36f 0300 	bfc	r3, #0, #1
 8003f94:	6113      	str	r3, [r2, #16]
 8003f96:	bf00      	nop
 8003f98:	bd80      	pop	{r7, pc}
 8003f9a:	bf00      	nop
 8003f9c:	200041ec 	.word	0x200041ec
 8003fa0:	200041fc 	.word	0x200041fc

08003fa4 <TIM1_TRG_COM_IRQHandler>:
 8003fa4:	b580      	push	{r7, lr}
 8003fa6:	af00      	add	r7, sp, #0
 8003fa8:	4b05      	ldr	r3, [pc, #20]	; (8003fc0 <TIM1_TRG_COM_IRQHandler+0x1c>)
 8003faa:	68db      	ldr	r3, [r3, #12]
 8003fac:	4798      	blx	r3
 8003fae:	4b05      	ldr	r3, [pc, #20]	; (8003fc4 <TIM1_TRG_COM_IRQHandler+0x20>)
 8003fb0:	681a      	ldr	r2, [r3, #0]
 8003fb2:	6913      	ldr	r3, [r2, #16]
 8003fb4:	f36f 0300 	bfc	r3, #0, #1
 8003fb8:	6113      	str	r3, [r2, #16]
 8003fba:	bf00      	nop
 8003fbc:	bd80      	pop	{r7, pc}
 8003fbe:	bf00      	nop
 8003fc0:	200041ec 	.word	0x200041ec
 8003fc4:	200041fc 	.word	0x200041fc

08003fc8 <_TIM1_delay_us>:
 8003fc8:	b580      	push	{r7, lr}
 8003fca:	b086      	sub	sp, #24
 8003fcc:	af00      	add	r7, sp, #0
 8003fce:	4603      	mov	r3, r0
 8003fd0:	80fb      	strh	r3, [r7, #6]
 8003fd2:	f7ff fca9 	bl	8003928 <MCAL_GET_PCLCK2>
 8003fd6:	4603      	mov	r3, r0
 8003fd8:	4a0f      	ldr	r2, [pc, #60]	; (8004018 <_TIM1_delay_us+0x50>)
 8003fda:	fba2 2303 	umull	r2, r3, r2, r3
 8003fde:	0c9b      	lsrs	r3, r3, #18
 8003fe0:	b29b      	uxth	r3, r3
 8003fe2:	3b01      	subs	r3, #1
 8003fe4:	b29b      	uxth	r3, r3
 8003fe6:	813b      	strh	r3, [r7, #8]
 8003fe8:	88fb      	ldrh	r3, [r7, #6]
 8003fea:	3b01      	subs	r3, #1
 8003fec:	b29b      	uxth	r3, r3
 8003fee:	817b      	strh	r3, [r7, #10]
 8003ff0:	2300      	movs	r3, #0
 8003ff2:	81bb      	strh	r3, [r7, #12]
 8003ff4:	2300      	movs	r3, #0
 8003ff6:	81fb      	strh	r3, [r7, #14]
 8003ff8:	2301      	movs	r3, #1
 8003ffa:	743b      	strb	r3, [r7, #16]
 8003ffc:	2300      	movs	r3, #0
 8003ffe:	747b      	strb	r3, [r7, #17]
 8004000:	2300      	movs	r3, #0
 8004002:	617b      	str	r3, [r7, #20]
 8004004:	f107 0308 	add.w	r3, r7, #8
 8004008:	4619      	mov	r1, r3
 800400a:	4804      	ldr	r0, [pc, #16]	; (800401c <_TIM1_delay_us+0x54>)
 800400c:	f7ff ff0a 	bl	8003e24 <TIMER_1_8_start>
 8004010:	bf00      	nop
 8004012:	3718      	adds	r7, #24
 8004014:	46bd      	mov	sp, r7
 8004016:	bd80      	pop	{r7, pc}
 8004018:	431bde83 	.word	0x431bde83
 800401c:	40012c00 	.word	0x40012c00

08004020 <_TIM1_delay_ms>:
 8004020:	b580      	push	{r7, lr}
 8004022:	b084      	sub	sp, #16
 8004024:	af00      	add	r7, sp, #0
 8004026:	4603      	mov	r3, r0
 8004028:	80fb      	strh	r3, [r7, #6]
 800402a:	2300      	movs	r3, #0
 800402c:	60fb      	str	r3, [r7, #12]
 800402e:	e006      	b.n	800403e <_TIM1_delay_ms+0x1e>
 8004030:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004034:	f7ff ffc8 	bl	8003fc8 <_TIM1_delay_us>
 8004038:	68fb      	ldr	r3, [r7, #12]
 800403a:	3301      	adds	r3, #1
 800403c:	60fb      	str	r3, [r7, #12]
 800403e:	88fb      	ldrh	r3, [r7, #6]
 8004040:	68fa      	ldr	r2, [r7, #12]
 8004042:	429a      	cmp	r2, r3
 8004044:	d3f4      	bcc.n	8004030 <_TIM1_delay_ms+0x10>
 8004046:	bf00      	nop
 8004048:	bf00      	nop
 800404a:	3710      	adds	r7, #16
 800404c:	46bd      	mov	sp, r7
 800404e:	bd80      	pop	{r7, pc}

08004050 <MCAL_USART_init>:
 *  Created on: Aug 8, 2023
 *      Author: Ahmed
 */
#include "USART_Driver.h"
USART_Config_t G_P_config[3];
void MCAL_USART_init(USART_REG *USARTx,USART_Config_t *PIN){
 8004050:	b5b0      	push	{r4, r5, r7, lr}
 8004052:	b082      	sub	sp, #8
 8004054:	af00      	add	r7, sp, #0
 8004056:	6078      	str	r0, [r7, #4]
 8004058:	6039      	str	r1, [r7, #0]
	if(USARTx==USART1){ // MAKE A BACKUP AND ENABLE THE CLOCK
 800405a:	687b      	ldr	r3, [r7, #4]
 800405c:	4aa9      	ldr	r2, [pc, #676]	; (8004304 <MCAL_USART_init+0x2b4>)
 800405e:	4293      	cmp	r3, r2
 8004060:	d10c      	bne.n	800407c <MCAL_USART_init+0x2c>
		G_P_config[0]=*PIN;
 8004062:	4aa9      	ldr	r2, [pc, #676]	; (8004308 <MCAL_USART_init+0x2b8>)
 8004064:	683b      	ldr	r3, [r7, #0]
 8004066:	4614      	mov	r4, r2
 8004068:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800406a:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
		RCC->APB2ENR |=(1<<14);
 800406e:	4ba7      	ldr	r3, [pc, #668]	; (800430c <MCAL_USART_init+0x2bc>)
 8004070:	699b      	ldr	r3, [r3, #24]
 8004072:	4aa6      	ldr	r2, [pc, #664]	; (800430c <MCAL_USART_init+0x2bc>)
 8004074:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8004078:	6193      	str	r3, [r2, #24]
 800407a:	e024      	b.n	80040c6 <MCAL_USART_init+0x76>
	}else if(USARTx==USART2){
 800407c:	687b      	ldr	r3, [r7, #4]
 800407e:	4aa4      	ldr	r2, [pc, #656]	; (8004310 <MCAL_USART_init+0x2c0>)
 8004080:	4293      	cmp	r3, r2
 8004082:	d10e      	bne.n	80040a2 <MCAL_USART_init+0x52>
		G_P_config[1]=*PIN;
 8004084:	4ba0      	ldr	r3, [pc, #640]	; (8004308 <MCAL_USART_init+0x2b8>)
 8004086:	683a      	ldr	r2, [r7, #0]
 8004088:	f103 0410 	add.w	r4, r3, #16
 800408c:	4613      	mov	r3, r2
 800408e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8004090:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
		RCC->APB1ENR |=(1<<17);
 8004094:	4b9d      	ldr	r3, [pc, #628]	; (800430c <MCAL_USART_init+0x2bc>)
 8004096:	69db      	ldr	r3, [r3, #28]
 8004098:	4a9c      	ldr	r2, [pc, #624]	; (800430c <MCAL_USART_init+0x2bc>)
 800409a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800409e:	61d3      	str	r3, [r2, #28]
 80040a0:	e011      	b.n	80040c6 <MCAL_USART_init+0x76>
}else if(USARTx==USART3){
 80040a2:	687b      	ldr	r3, [r7, #4]
 80040a4:	4a9b      	ldr	r2, [pc, #620]	; (8004314 <MCAL_USART_init+0x2c4>)
 80040a6:	4293      	cmp	r3, r2
 80040a8:	d10d      	bne.n	80040c6 <MCAL_USART_init+0x76>
		G_P_config[2]=*PIN;
 80040aa:	4b97      	ldr	r3, [pc, #604]	; (8004308 <MCAL_USART_init+0x2b8>)
 80040ac:	683a      	ldr	r2, [r7, #0]
 80040ae:	f103 0420 	add.w	r4, r3, #32
 80040b2:	4613      	mov	r3, r2
 80040b4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80040b6:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
		RCC->APB1ENR |=(1<<18);
 80040ba:	4b94      	ldr	r3, [pc, #592]	; (800430c <MCAL_USART_init+0x2bc>)
 80040bc:	69db      	ldr	r3, [r3, #28]
 80040be:	4a93      	ldr	r2, [pc, #588]	; (800430c <MCAL_USART_init+0x2bc>)
 80040c0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80040c4:	61d3      	str	r3, [r2, #28]


	}
	// 1. Enable the USART by writing the UE bit in USART_CR1 register to 1.
	USARTx->CR1 |=(1<<13);
 80040c6:	687b      	ldr	r3, [r7, #4]
 80040c8:	68db      	ldr	r3, [r3, #12]
 80040ca:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
 80040ce:	687b      	ldr	r3, [r7, #4]
 80040d0:	60da      	str	r2, [r3, #12]
	//2. Program the M bit in USART_CR1 to define the word length.
	USARTx->CR1 |=(PIN->Word<<12);
 80040d2:	687b      	ldr	r3, [r7, #4]
 80040d4:	68db      	ldr	r3, [r3, #12]
 80040d6:	683a      	ldr	r2, [r7, #0]
 80040d8:	7912      	ldrb	r2, [r2, #4]
 80040da:	0312      	lsls	r2, r2, #12
 80040dc:	431a      	orrs	r2, r3
 80040de:	687b      	ldr	r3, [r7, #4]
 80040e0:	60da      	str	r2, [r3, #12]
	//3. Program the number of stop bits in USART_CR2
	USARTx->CR2 |=(PIN->STOP<<12);
 80040e2:	687b      	ldr	r3, [r7, #4]
 80040e4:	691b      	ldr	r3, [r3, #16]
 80040e6:	683a      	ldr	r2, [r7, #0]
 80040e8:	79d2      	ldrb	r2, [r2, #7]
 80040ea:	0312      	lsls	r2, r2, #12
 80040ec:	431a      	orrs	r2, r3
 80040ee:	687b      	ldr	r3, [r7, #4]
 80040f0:	611a      	str	r2, [r3, #16]
	if(PIN->MODE ==Asynchronous){
 80040f2:	683b      	ldr	r3, [r7, #0]
 80040f4:	7a5b      	ldrb	r3, [r3, #9]
 80040f6:	2b00      	cmp	r3, #0
 80040f8:	d10b      	bne.n	8004112 <MCAL_USART_init+0xc2>
		//	6. Set the TE bit in USART_CR1 to send an idle frame as first transmission
		USARTx->CR1 |=(1<<3);
 80040fa:	687b      	ldr	r3, [r7, #4]
 80040fc:	68db      	ldr	r3, [r3, #12]
 80040fe:	f043 0208 	orr.w	r2, r3, #8
 8004102:	687b      	ldr	r3, [r7, #4]
 8004104:	60da      	str	r2, [r3, #12]
		//	7. Set the RE bit in USART_CR1 to send an idle frame as first transmission
		USARTx->CR1 |=(1<<2);
 8004106:	687b      	ldr	r3, [r7, #4]
 8004108:	68db      	ldr	r3, [r3, #12]
 800410a:	f043 0204 	orr.w	r2, r3, #4
 800410e:	687b      	ldr	r3, [r7, #4]
 8004110:	60da      	str	r2, [r3, #12]
	}else{ // will modified later

	}
	//	8. Set the CTSE&RTSE bit in USART_CR3 to enable CTS&RTS hardware flow control

	switch( PIN->HW ){
 8004112:	683b      	ldr	r3, [r7, #0]
 8004114:	7a1b      	ldrb	r3, [r3, #8]
 8004116:	2b03      	cmp	r3, #3
 8004118:	d826      	bhi.n	8004168 <MCAL_USART_init+0x118>
 800411a:	a201      	add	r2, pc, #4	; (adr r2, 8004120 <MCAL_USART_init+0xd0>)
 800411c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004120:	08004131 	.word	0x08004131
 8004124:	0800413f 	.word	0x0800413f
 8004128:	0800414d 	.word	0x0800414d
 800412c:	0800415b 	.word	0x0800415b
	case Disabled:
		USARTx->CR3 &=~(RTS_EN |CTS_EN);
 8004130:	687b      	ldr	r3, [r7, #4]
 8004132:	695b      	ldr	r3, [r3, #20]
 8004134:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8004138:	687b      	ldr	r3, [r7, #4]
 800413a:	615a      	str	r2, [r3, #20]
		break;
 800413c:	e014      	b.n	8004168 <MCAL_USART_init+0x118>
	case RTSE:
		USARTx->CR3 |=RTS_EN;
 800413e:	687b      	ldr	r3, [r7, #4]
 8004140:	695b      	ldr	r3, [r3, #20]
 8004142:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8004146:	687b      	ldr	r3, [r7, #4]
 8004148:	615a      	str	r2, [r3, #20]
		break;
 800414a:	e00d      	b.n	8004168 <MCAL_USART_init+0x118>
	case CTSE:
		USARTx->CR3 |=CTS_EN;
 800414c:	687b      	ldr	r3, [r7, #4]
 800414e:	695b      	ldr	r3, [r3, #20]
 8004150:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 8004154:	687b      	ldr	r3, [r7, #4]
 8004156:	615a      	str	r2, [r3, #20]
		break;
 8004158:	e006      	b.n	8004168 <MCAL_USART_init+0x118>
	case BOTH:
		USARTx->CR3 |=CTS_EN |RTS_EN;
 800415a:	687b      	ldr	r3, [r7, #4]
 800415c:	695b      	ldr	r3, [r3, #20]
 800415e:	f443 7240 	orr.w	r2, r3, #768	; 0x300
 8004162:	687b      	ldr	r3, [r7, #4]
 8004164:	615a      	str	r2, [r3, #20]
		break;
 8004166:	bf00      	nop

	}
	//	9. Set the PCE &PS bit in USART_CR1 to send an idle frame as first transmission
	USARTx->CR1 |=(PIN->Parity<<9);
 8004168:	687b      	ldr	r3, [r7, #4]
 800416a:	68db      	ldr	r3, [r3, #12]
 800416c:	683a      	ldr	r2, [r7, #0]
 800416e:	7952      	ldrb	r2, [r2, #5]
 8004170:	0252      	lsls	r2, r2, #9
 8004172:	431a      	orrs	r2, r3
 8004174:	687b      	ldr	r3, [r7, #4]
 8004176:	60da      	str	r2, [r3, #12]
	if(PIN->MEC ==Interrupt){
 8004178:	683b      	ldr	r3, [r7, #0]
 800417a:	799b      	ldrb	r3, [r3, #6]
 800417c:	2b01      	cmp	r3, #1
 800417e:	d125      	bne.n	80041cc <MCAL_USART_init+0x17c>



		//ENABLE NVIC 	ISER1 32-63
		if(USARTx==USART1){
 8004180:	687b      	ldr	r3, [r7, #4]
 8004182:	4a60      	ldr	r2, [pc, #384]	; (8004304 <MCAL_USART_init+0x2b4>)
 8004184:	4293      	cmp	r3, r2
 8004186:	d106      	bne.n	8004196 <MCAL_USART_init+0x146>

			NVIC_ISER1 |=(1<<(USART1_IRQ-32));
 8004188:	4b63      	ldr	r3, [pc, #396]	; (8004318 <MCAL_USART_init+0x2c8>)
 800418a:	681b      	ldr	r3, [r3, #0]
 800418c:	4a62      	ldr	r2, [pc, #392]	; (8004318 <MCAL_USART_init+0x2c8>)
 800418e:	f043 0320 	orr.w	r3, r3, #32
 8004192:	6013      	str	r3, [r2, #0]
 8004194:	e014      	b.n	80041c0 <MCAL_USART_init+0x170>
		}
		else if(USARTx==USART2){
 8004196:	687b      	ldr	r3, [r7, #4]
 8004198:	4a5d      	ldr	r2, [pc, #372]	; (8004310 <MCAL_USART_init+0x2c0>)
 800419a:	4293      	cmp	r3, r2
 800419c:	d106      	bne.n	80041ac <MCAL_USART_init+0x15c>
			NVIC_ISER1 |=(1<<(USART2_IRQ-32));
 800419e:	4b5e      	ldr	r3, [pc, #376]	; (8004318 <MCAL_USART_init+0x2c8>)
 80041a0:	681b      	ldr	r3, [r3, #0]
 80041a2:	4a5d      	ldr	r2, [pc, #372]	; (8004318 <MCAL_USART_init+0x2c8>)
 80041a4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80041a8:	6013      	str	r3, [r2, #0]
 80041aa:	e009      	b.n	80041c0 <MCAL_USART_init+0x170>

		}
		else if(USARTx==USART3){
 80041ac:	687b      	ldr	r3, [r7, #4]
 80041ae:	4a59      	ldr	r2, [pc, #356]	; (8004314 <MCAL_USART_init+0x2c4>)
 80041b0:	4293      	cmp	r3, r2
 80041b2:	d105      	bne.n	80041c0 <MCAL_USART_init+0x170>
			NVIC_ISER1 |=(1<<(USART3_IRQ-32));
 80041b4:	4b58      	ldr	r3, [pc, #352]	; (8004318 <MCAL_USART_init+0x2c8>)
 80041b6:	681b      	ldr	r3, [r3, #0]
 80041b8:	4a57      	ldr	r2, [pc, #348]	; (8004318 <MCAL_USART_init+0x2c8>)
 80041ba:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80041be:	6013      	str	r3, [r2, #0]

		}
		//Bit 7 TXEIE: TXE interrupt enable				//		Bit 5 RXNEIE: RXNE interrupt enable

				USARTx->CR1 |=(1<<5) ;
 80041c0:	687b      	ldr	r3, [r7, #4]
 80041c2:	68db      	ldr	r3, [r3, #12]
 80041c4:	f043 0220 	orr.w	r2, r3, #32
 80041c8:	687b      	ldr	r3, [r7, #4]
 80041ca:	60da      	str	r2, [r3, #12]

		}
	if(USARTx==USART1){ // MAKE A BACKUP AND ENABLE THE CLOCK
 80041cc:	687b      	ldr	r3, [r7, #4]
 80041ce:	4a4d      	ldr	r2, [pc, #308]	; (8004304 <MCAL_USART_init+0x2b4>)
 80041d0:	4293      	cmp	r3, r2
 80041d2:	d12d      	bne.n	8004230 <MCAL_USART_init+0x1e0>
				USARTx->BRR=BRR(MCAL_GET_PCLCK2(),PIN->Baud_Rate);
 80041d4:	f7ff fba8 	bl	8003928 <MCAL_GET_PCLCK2>
 80041d8:	4602      	mov	r2, r0
 80041da:	683b      	ldr	r3, [r7, #0]
 80041dc:	681b      	ldr	r3, [r3, #0]
 80041de:	011b      	lsls	r3, r3, #4
 80041e0:	fbb2 f3f3 	udiv	r3, r2, r3
 80041e4:	011c      	lsls	r4, r3, #4
 80041e6:	f7ff fb9f 	bl	8003928 <MCAL_GET_PCLCK2>
 80041ea:	4602      	mov	r2, r0
 80041ec:	4613      	mov	r3, r2
 80041ee:	009b      	lsls	r3, r3, #2
 80041f0:	4413      	add	r3, r2
 80041f2:	009a      	lsls	r2, r3, #2
 80041f4:	441a      	add	r2, r3
 80041f6:	683b      	ldr	r3, [r7, #0]
 80041f8:	681b      	ldr	r3, [r3, #0]
 80041fa:	009b      	lsls	r3, r3, #2
 80041fc:	fbb2 f5f3 	udiv	r5, r2, r3
 8004200:	f7ff fb92 	bl	8003928 <MCAL_GET_PCLCK2>
 8004204:	4602      	mov	r2, r0
 8004206:	683b      	ldr	r3, [r7, #0]
 8004208:	681b      	ldr	r3, [r3, #0]
 800420a:	011b      	lsls	r3, r3, #4
 800420c:	fbb2 f3f3 	udiv	r3, r2, r3
 8004210:	2264      	movs	r2, #100	; 0x64
 8004212:	fb02 f303 	mul.w	r3, r2, r3
 8004216:	1aeb      	subs	r3, r5, r3
 8004218:	011b      	lsls	r3, r3, #4
 800421a:	4a40      	ldr	r2, [pc, #256]	; (800431c <MCAL_USART_init+0x2cc>)
 800421c:	fba2 2303 	umull	r2, r3, r2, r3
 8004220:	095b      	lsrs	r3, r3, #5
 8004222:	f003 030f 	and.w	r3, r3, #15
 8004226:	ea44 0203 	orr.w	r2, r4, r3
 800422a:	687b      	ldr	r3, [r7, #4]
 800422c:	609a      	str	r2, [r3, #8]
 800422e:	e062      	b.n	80042f6 <MCAL_USART_init+0x2a6>
			}else if(USARTx==USART2){
 8004230:	687b      	ldr	r3, [r7, #4]
 8004232:	4a37      	ldr	r2, [pc, #220]	; (8004310 <MCAL_USART_init+0x2c0>)
 8004234:	4293      	cmp	r3, r2
 8004236:	d12d      	bne.n	8004294 <MCAL_USART_init+0x244>
				USARTx->BRR=	BRR(MCAL_GET_PCLCK1(),PIN->Baud_Rate);
 8004238:	f7ff fb62 	bl	8003900 <MCAL_GET_PCLCK1>
 800423c:	4602      	mov	r2, r0
 800423e:	683b      	ldr	r3, [r7, #0]
 8004240:	681b      	ldr	r3, [r3, #0]
 8004242:	011b      	lsls	r3, r3, #4
 8004244:	fbb2 f3f3 	udiv	r3, r2, r3
 8004248:	011c      	lsls	r4, r3, #4
 800424a:	f7ff fb59 	bl	8003900 <MCAL_GET_PCLCK1>
 800424e:	4602      	mov	r2, r0
 8004250:	4613      	mov	r3, r2
 8004252:	009b      	lsls	r3, r3, #2
 8004254:	4413      	add	r3, r2
 8004256:	009a      	lsls	r2, r3, #2
 8004258:	441a      	add	r2, r3
 800425a:	683b      	ldr	r3, [r7, #0]
 800425c:	681b      	ldr	r3, [r3, #0]
 800425e:	009b      	lsls	r3, r3, #2
 8004260:	fbb2 f5f3 	udiv	r5, r2, r3
 8004264:	f7ff fb4c 	bl	8003900 <MCAL_GET_PCLCK1>
 8004268:	4602      	mov	r2, r0
 800426a:	683b      	ldr	r3, [r7, #0]
 800426c:	681b      	ldr	r3, [r3, #0]
 800426e:	011b      	lsls	r3, r3, #4
 8004270:	fbb2 f3f3 	udiv	r3, r2, r3
 8004274:	2264      	movs	r2, #100	; 0x64
 8004276:	fb02 f303 	mul.w	r3, r2, r3
 800427a:	1aeb      	subs	r3, r5, r3
 800427c:	011b      	lsls	r3, r3, #4
 800427e:	4a27      	ldr	r2, [pc, #156]	; (800431c <MCAL_USART_init+0x2cc>)
 8004280:	fba2 2303 	umull	r2, r3, r2, r3
 8004284:	095b      	lsrs	r3, r3, #5
 8004286:	f003 030f 	and.w	r3, r3, #15
 800428a:	ea44 0203 	orr.w	r2, r4, r3
 800428e:	687b      	ldr	r3, [r7, #4]
 8004290:	609a      	str	r2, [r3, #8]
 8004292:	e030      	b.n	80042f6 <MCAL_USART_init+0x2a6>

		}else if(USARTx==USART3){
 8004294:	687b      	ldr	r3, [r7, #4]
 8004296:	4a1f      	ldr	r2, [pc, #124]	; (8004314 <MCAL_USART_init+0x2c4>)
 8004298:	4293      	cmp	r3, r2
 800429a:	d12c      	bne.n	80042f6 <MCAL_USART_init+0x2a6>
			USARTx->BRR=	BRR(MCAL_GET_PCLCK1(),PIN->Baud_Rate);
 800429c:	f7ff fb30 	bl	8003900 <MCAL_GET_PCLCK1>
 80042a0:	4602      	mov	r2, r0
 80042a2:	683b      	ldr	r3, [r7, #0]
 80042a4:	681b      	ldr	r3, [r3, #0]
 80042a6:	011b      	lsls	r3, r3, #4
 80042a8:	fbb2 f3f3 	udiv	r3, r2, r3
 80042ac:	011c      	lsls	r4, r3, #4
 80042ae:	f7ff fb27 	bl	8003900 <MCAL_GET_PCLCK1>
 80042b2:	4602      	mov	r2, r0
 80042b4:	4613      	mov	r3, r2
 80042b6:	009b      	lsls	r3, r3, #2
 80042b8:	4413      	add	r3, r2
 80042ba:	009a      	lsls	r2, r3, #2
 80042bc:	441a      	add	r2, r3
 80042be:	683b      	ldr	r3, [r7, #0]
 80042c0:	681b      	ldr	r3, [r3, #0]
 80042c2:	009b      	lsls	r3, r3, #2
 80042c4:	fbb2 f5f3 	udiv	r5, r2, r3
 80042c8:	f7ff fb1a 	bl	8003900 <MCAL_GET_PCLCK1>
 80042cc:	4602      	mov	r2, r0
 80042ce:	683b      	ldr	r3, [r7, #0]
 80042d0:	681b      	ldr	r3, [r3, #0]
 80042d2:	011b      	lsls	r3, r3, #4
 80042d4:	fbb2 f3f3 	udiv	r3, r2, r3
 80042d8:	2264      	movs	r2, #100	; 0x64
 80042da:	fb02 f303 	mul.w	r3, r2, r3
 80042de:	1aeb      	subs	r3, r5, r3
 80042e0:	011b      	lsls	r3, r3, #4
 80042e2:	4a0e      	ldr	r2, [pc, #56]	; (800431c <MCAL_USART_init+0x2cc>)
 80042e4:	fba2 2303 	umull	r2, r3, r2, r3
 80042e8:	095b      	lsrs	r3, r3, #5
 80042ea:	f003 030f 	and.w	r3, r3, #15
 80042ee:	ea44 0203 	orr.w	r2, r4, r3
 80042f2:	687b      	ldr	r3, [r7, #4]
 80042f4:	609a      	str	r2, [r3, #8]
		}
	SET_GPIO(USARTx);
 80042f6:	6878      	ldr	r0, [r7, #4]
 80042f8:	f000 f89c 	bl	8004434 <SET_GPIO>
	}
 80042fc:	bf00      	nop
 80042fe:	3708      	adds	r7, #8
 8004300:	46bd      	mov	sp, r7
 8004302:	bdb0      	pop	{r4, r5, r7, pc}
 8004304:	40013800 	.word	0x40013800
 8004308:	20004278 	.word	0x20004278
 800430c:	40021000 	.word	0x40021000
 8004310:	40004400 	.word	0x40004400
 8004314:	40004800 	.word	0x40004800
 8004318:	e000e104 	.word	0xe000e104
 800431c:	51eb851f 	.word	0x51eb851f

08004320 <MCAL_USART_SendData>:
		RCC	->APB1RSTR |=(1<<18);
		NVIC_ICER1 |=(1<<(USART3_IRQ-32));
	}
	}

void MCAL_USART_SendData(USART_REG *USARTx,uint8_t data){
 8004320:	b480      	push	{r7}
 8004322:	b085      	sub	sp, #20
 8004324:	af00      	add	r7, sp, #0
 8004326:	6078      	str	r0, [r7, #4]
 8004328:	460b      	mov	r3, r1
 800432a:	70fb      	strb	r3, [r7, #3]
	USART_Config_t * L_P_config_pin=NULL;
 800432c:	2300      	movs	r3, #0
 800432e:	60fb      	str	r3, [r7, #12]
//	USARTx->DR=0;
	if(USARTx==USART1){
 8004330:	687b      	ldr	r3, [r7, #4]
 8004332:	4a15      	ldr	r2, [pc, #84]	; (8004388 <MCAL_USART_SendData+0x68>)
 8004334:	4293      	cmp	r3, r2
 8004336:	d102      	bne.n	800433e <MCAL_USART_SendData+0x1e>
		L_P_config_pin=&G_P_config[0];
 8004338:	4b14      	ldr	r3, [pc, #80]	; (800438c <MCAL_USART_SendData+0x6c>)
 800433a:	60fb      	str	r3, [r7, #12]
 800433c:	e00c      	b.n	8004358 <MCAL_USART_SendData+0x38>
	}		else if(USARTx==USART2){
 800433e:	687b      	ldr	r3, [r7, #4]
 8004340:	4a13      	ldr	r2, [pc, #76]	; (8004390 <MCAL_USART_SendData+0x70>)
 8004342:	4293      	cmp	r3, r2
 8004344:	d102      	bne.n	800434c <MCAL_USART_SendData+0x2c>
		L_P_config_pin=&G_P_config[1];
 8004346:	4b13      	ldr	r3, [pc, #76]	; (8004394 <MCAL_USART_SendData+0x74>)
 8004348:	60fb      	str	r3, [r7, #12]
 800434a:	e005      	b.n	8004358 <MCAL_USART_SendData+0x38>
	}
	else if(USARTx==USART3){
 800434c:	687b      	ldr	r3, [r7, #4]
 800434e:	4a12      	ldr	r2, [pc, #72]	; (8004398 <MCAL_USART_SendData+0x78>)
 8004350:	4293      	cmp	r3, r2
 8004352:	d101      	bne.n	8004358 <MCAL_USART_SendData+0x38>
		L_P_config_pin=&G_P_config[2];
 8004354:	4b11      	ldr	r3, [pc, #68]	; (800439c <MCAL_USART_SendData+0x7c>)
 8004356:	60fb      	str	r3, [r7, #12]
	}
	while(!(USARTx->SR & (1<<7)));
 8004358:	bf00      	nop
 800435a:	687b      	ldr	r3, [r7, #4]
 800435c:	681b      	ldr	r3, [r3, #0]
 800435e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004362:	2b00      	cmp	r3, #0
 8004364:	d0f9      	beq.n	800435a <MCAL_USART_SendData+0x3a>



	// check if the word size if 9B or 8B
	if(L_P_config_pin->Word ==NINE_BITS)
 8004366:	68fb      	ldr	r3, [r7, #12]
 8004368:	791b      	ldrb	r3, [r3, #4]
 800436a:	2b01      	cmp	r3, #1
 800436c:	d103      	bne.n	8004376 <MCAL_USART_SendData+0x56>
	{
		USARTx->DR =((uint8_t)data & (uint8_t)0x1FF);
 800436e:	78fa      	ldrb	r2, [r7, #3]
 8004370:	687b      	ldr	r3, [r7, #4]
 8004372:	605a      	str	r2, [r3, #4]
	}else{
		USARTx->DR =((uint8_t)data & (uint8_t)0xFF);

	}

}
 8004374:	e002      	b.n	800437c <MCAL_USART_SendData+0x5c>
		USARTx->DR =((uint8_t)data & (uint8_t)0xFF);
 8004376:	78fa      	ldrb	r2, [r7, #3]
 8004378:	687b      	ldr	r3, [r7, #4]
 800437a:	605a      	str	r2, [r3, #4]
}
 800437c:	bf00      	nop
 800437e:	3714      	adds	r7, #20
 8004380:	46bd      	mov	sp, r7
 8004382:	bc80      	pop	{r7}
 8004384:	4770      	bx	lr
 8004386:	bf00      	nop
 8004388:	40013800 	.word	0x40013800
 800438c:	20004278 	.word	0x20004278
 8004390:	40004400 	.word	0x40004400
 8004394:	20004288 	.word	0x20004288
 8004398:	40004800 	.word	0x40004800
 800439c:	20004298 	.word	0x20004298

080043a0 <MCAL_USART_ReciveData>:
uint16_t MCAL_USART_ReciveData(USART_REG *USARTx){
 80043a0:	b480      	push	{r7}
 80043a2:	b085      	sub	sp, #20
 80043a4:	af00      	add	r7, sp, #0
 80043a6:	6078      	str	r0, [r7, #4]
	USART_Config_t * L_P_config_pin=NULL;
 80043a8:	2300      	movs	r3, #0
 80043aa:	60fb      	str	r3, [r7, #12]
	if(USARTx==USART1){
 80043ac:	687b      	ldr	r3, [r7, #4]
 80043ae:	4a1b      	ldr	r2, [pc, #108]	; (800441c <MCAL_USART_ReciveData+0x7c>)
 80043b0:	4293      	cmp	r3, r2
 80043b2:	d102      	bne.n	80043ba <MCAL_USART_ReciveData+0x1a>
		L_P_config_pin=&G_P_config[0];
 80043b4:	4b1a      	ldr	r3, [pc, #104]	; (8004420 <MCAL_USART_ReciveData+0x80>)
 80043b6:	60fb      	str	r3, [r7, #12]
 80043b8:	e00c      	b.n	80043d4 <MCAL_USART_ReciveData+0x34>
	}		else if(USARTx==USART2){
 80043ba:	687b      	ldr	r3, [r7, #4]
 80043bc:	4a19      	ldr	r2, [pc, #100]	; (8004424 <MCAL_USART_ReciveData+0x84>)
 80043be:	4293      	cmp	r3, r2
 80043c0:	d102      	bne.n	80043c8 <MCAL_USART_ReciveData+0x28>
		L_P_config_pin=&G_P_config[1];
 80043c2:	4b19      	ldr	r3, [pc, #100]	; (8004428 <MCAL_USART_ReciveData+0x88>)
 80043c4:	60fb      	str	r3, [r7, #12]
 80043c6:	e005      	b.n	80043d4 <MCAL_USART_ReciveData+0x34>
	}
	else if(USARTx==USART3){
 80043c8:	687b      	ldr	r3, [r7, #4]
 80043ca:	4a18      	ldr	r2, [pc, #96]	; (800442c <MCAL_USART_ReciveData+0x8c>)
 80043cc:	4293      	cmp	r3, r2
 80043ce:	d101      	bne.n	80043d4 <MCAL_USART_ReciveData+0x34>
		L_P_config_pin=&G_P_config[2];
 80043d0:	4b17      	ldr	r3, [pc, #92]	; (8004430 <MCAL_USART_ReciveData+0x90>)
 80043d2:	60fb      	str	r3, [r7, #12]
	}

		if(L_P_config_pin->MEC ==POLLING){
 80043d4:	68fb      	ldr	r3, [r7, #12]
 80043d6:	799b      	ldrb	r3, [r3, #6]
 80043d8:	2b00      	cmp	r3, #0
 80043da:	d107      	bne.n	80043ec <MCAL_USART_ReciveData+0x4c>
			while(!(USARTx->SR & (1<<5)));
 80043dc:	bf00      	nop
 80043de:	687b      	ldr	r3, [r7, #4]
 80043e0:	681b      	ldr	r3, [r3, #0]
 80043e2:	f003 0320 	and.w	r3, r3, #32
 80043e6:	2b00      	cmp	r3, #0
 80043e8:	d0f9      	beq.n	80043de <MCAL_USART_ReciveData+0x3e>
 80043ea:	e002      	b.n	80043f2 <MCAL_USART_ReciveData+0x52>
		}else if(L_P_config_pin->MEC ==Interrupt){ // Do nothing the cpu will jump to isr
 80043ec:	68fb      	ldr	r3, [r7, #12]
 80043ee:	799b      	ldrb	r3, [r3, #6]
 80043f0:	2b01      	cmp	r3, #1

		}else if(L_P_config_pin->MEC ==DMA){ // will modified later

		}
		if(L_P_config_pin->Parity ==Parity_DISABLE){
 80043f2:	68fb      	ldr	r3, [r7, #12]
 80043f4:	795b      	ldrb	r3, [r3, #5]
 80043f6:	2b00      	cmp	r3, #0
 80043f8:	d104      	bne.n	8004404 <MCAL_USART_ReciveData+0x64>
			return ((uint8_t)USARTx->DR& (uint8_t)0xFF);
 80043fa:	687b      	ldr	r3, [r7, #4]
 80043fc:	685b      	ldr	r3, [r3, #4]
 80043fe:	b2db      	uxtb	r3, r3
 8004400:	b29b      	uxth	r3, r3
 8004402:	e006      	b.n	8004412 <MCAL_USART_ReciveData+0x72>
		}else{
			return ((uint8_t)USARTx->DR &(uint8_t)0x7F);
 8004404:	687b      	ldr	r3, [r7, #4]
 8004406:	685b      	ldr	r3, [r3, #4]
 8004408:	b2db      	uxtb	r3, r3
 800440a:	b29b      	uxth	r3, r3
 800440c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8004410:	b29b      	uxth	r3, r3

		}

}
 8004412:	4618      	mov	r0, r3
 8004414:	3714      	adds	r7, #20
 8004416:	46bd      	mov	sp, r7
 8004418:	bc80      	pop	{r7}
 800441a:	4770      	bx	lr
 800441c:	40013800 	.word	0x40013800
 8004420:	20004278 	.word	0x20004278
 8004424:	40004400 	.word	0x40004400
 8004428:	20004288 	.word	0x20004288
 800442c:	40004800 	.word	0x40004800
 8004430:	20004298 	.word	0x20004298

08004434 <SET_GPIO>:

void SET_GPIO(USART_REG *USARTx){
 8004434:	b580      	push	{r7, lr}
 8004436:	b084      	sub	sp, #16
 8004438:	af00      	add	r7, sp, #0
 800443a:	6078      	str	r0, [r7, #4]
	PIN_config GPIO={PIN_9,OUTPUT_AF_PP,SPEED_2}; // CONFIGRATION OF TX PIN
 800443c:	4b2c      	ldr	r3, [pc, #176]	; (80044f0 <SET_GPIO+0xbc>)
 800443e:	681b      	ldr	r3, [r3, #0]
 8004440:	60fb      	str	r3, [r7, #12]
	if(USARTx==USART1){
 8004442:	687b      	ldr	r3, [r7, #4]
 8004444:	4a2b      	ldr	r2, [pc, #172]	; (80044f4 <SET_GPIO+0xc0>)
 8004446:	4293      	cmp	r3, r2
 8004448:	d115      	bne.n	8004476 <SET_GPIO+0x42>
		RCC->APB2ENR |=(1<<2); // Enable Colck to write on GPIOA
 800444a:	4b2b      	ldr	r3, [pc, #172]	; (80044f8 <SET_GPIO+0xc4>)
 800444c:	699b      	ldr	r3, [r3, #24]
 800444e:	4a2a      	ldr	r2, [pc, #168]	; (80044f8 <SET_GPIO+0xc4>)
 8004450:	f043 0304 	orr.w	r3, r3, #4
 8004454:	6193      	str	r3, [r2, #24]
		MCAL_GPIO_init(GPIOA, &GPIO);
 8004456:	f107 030c 	add.w	r3, r7, #12
 800445a:	4619      	mov	r1, r3
 800445c:	4827      	ldr	r0, [pc, #156]	; (80044fc <SET_GPIO+0xc8>)
 800445e:	f7fe fc75 	bl	8002d4c <MCAL_GPIO_init>
		GPIO =(PIN_config) {PIN_10,INPUT_FI,0}; //CONFIGRATION OF RX PIN
 8004462:	4b27      	ldr	r3, [pc, #156]	; (8004500 <SET_GPIO+0xcc>)
 8004464:	681b      	ldr	r3, [r3, #0]
 8004466:	60fb      	str	r3, [r7, #12]
		MCAL_GPIO_init(GPIOA, &GPIO);
 8004468:	f107 030c 	add.w	r3, r7, #12
 800446c:	4619      	mov	r1, r3
 800446e:	4823      	ldr	r0, [pc, #140]	; (80044fc <SET_GPIO+0xc8>)
 8004470:	f7fe fc6c 	bl	8002d4c <MCAL_GPIO_init>
		GPIO=(PIN_config){PIN_10,OUTPUT_AF_PP,SPEED_2};// CONFIGRATION OF TX PIN
		MCAL_GPIO_init(GPIOB, &GPIO);
		GPIO =(PIN_config) {PIN_11,INPUT_FI,0}; //CONFIGRATION OF RX PIN
		MCAL_GPIO_init(GPIOB, &GPIO);
		}
}
 8004474:	e038      	b.n	80044e8 <SET_GPIO+0xb4>
	else if(USARTx==USART2){
 8004476:	687b      	ldr	r3, [r7, #4]
 8004478:	4a22      	ldr	r2, [pc, #136]	; (8004504 <SET_GPIO+0xd0>)
 800447a:	4293      	cmp	r3, r2
 800447c:	d118      	bne.n	80044b0 <SET_GPIO+0x7c>
		RCC->APB2ENR |=(1<<2); // Enable Colck to write on GPIOA
 800447e:	4b1e      	ldr	r3, [pc, #120]	; (80044f8 <SET_GPIO+0xc4>)
 8004480:	699b      	ldr	r3, [r3, #24]
 8004482:	4a1d      	ldr	r2, [pc, #116]	; (80044f8 <SET_GPIO+0xc4>)
 8004484:	f043 0304 	orr.w	r3, r3, #4
 8004488:	6193      	str	r3, [r2, #24]
		GPIO=(PIN_config){PIN_2,OUTPUT_AF_PP,SPEED_2};// CONFIGRATION OF TX PIN
 800448a:	4b1f      	ldr	r3, [pc, #124]	; (8004508 <SET_GPIO+0xd4>)
 800448c:	681b      	ldr	r3, [r3, #0]
 800448e:	60fb      	str	r3, [r7, #12]
		MCAL_GPIO_init(GPIOA, &GPIO);
 8004490:	f107 030c 	add.w	r3, r7, #12
 8004494:	4619      	mov	r1, r3
 8004496:	4819      	ldr	r0, [pc, #100]	; (80044fc <SET_GPIO+0xc8>)
 8004498:	f7fe fc58 	bl	8002d4c <MCAL_GPIO_init>
		GPIO =(PIN_config) {PIN_3,INPUT_FI,0}; //CONFIGRATION OF RX PIN
 800449c:	4b1b      	ldr	r3, [pc, #108]	; (800450c <SET_GPIO+0xd8>)
 800449e:	681b      	ldr	r3, [r3, #0]
 80044a0:	60fb      	str	r3, [r7, #12]
		MCAL_GPIO_init(GPIOA, &GPIO);
 80044a2:	f107 030c 	add.w	r3, r7, #12
 80044a6:	4619      	mov	r1, r3
 80044a8:	4814      	ldr	r0, [pc, #80]	; (80044fc <SET_GPIO+0xc8>)
 80044aa:	f7fe fc4f 	bl	8002d4c <MCAL_GPIO_init>
}
 80044ae:	e01b      	b.n	80044e8 <SET_GPIO+0xb4>
	else if(USARTx==USART3){
 80044b0:	687b      	ldr	r3, [r7, #4]
 80044b2:	4a17      	ldr	r2, [pc, #92]	; (8004510 <SET_GPIO+0xdc>)
 80044b4:	4293      	cmp	r3, r2
 80044b6:	d117      	bne.n	80044e8 <SET_GPIO+0xb4>
		RCC->APB2ENR |=(1<<3); // Enable Colck to write on GPIOA
 80044b8:	4b0f      	ldr	r3, [pc, #60]	; (80044f8 <SET_GPIO+0xc4>)
 80044ba:	699b      	ldr	r3, [r3, #24]
 80044bc:	4a0e      	ldr	r2, [pc, #56]	; (80044f8 <SET_GPIO+0xc4>)
 80044be:	f043 0308 	orr.w	r3, r3, #8
 80044c2:	6193      	str	r3, [r2, #24]
		GPIO=(PIN_config){PIN_10,OUTPUT_AF_PP,SPEED_2};// CONFIGRATION OF TX PIN
 80044c4:	4b13      	ldr	r3, [pc, #76]	; (8004514 <SET_GPIO+0xe0>)
 80044c6:	681b      	ldr	r3, [r3, #0]
 80044c8:	60fb      	str	r3, [r7, #12]
		MCAL_GPIO_init(GPIOB, &GPIO);
 80044ca:	f107 030c 	add.w	r3, r7, #12
 80044ce:	4619      	mov	r1, r3
 80044d0:	4811      	ldr	r0, [pc, #68]	; (8004518 <SET_GPIO+0xe4>)
 80044d2:	f7fe fc3b 	bl	8002d4c <MCAL_GPIO_init>
		GPIO =(PIN_config) {PIN_11,INPUT_FI,0}; //CONFIGRATION OF RX PIN
 80044d6:	4b11      	ldr	r3, [pc, #68]	; (800451c <SET_GPIO+0xe8>)
 80044d8:	681b      	ldr	r3, [r3, #0]
 80044da:	60fb      	str	r3, [r7, #12]
		MCAL_GPIO_init(GPIOB, &GPIO);
 80044dc:	f107 030c 	add.w	r3, r7, #12
 80044e0:	4619      	mov	r1, r3
 80044e2:	480d      	ldr	r0, [pc, #52]	; (8004518 <SET_GPIO+0xe4>)
 80044e4:	f7fe fc32 	bl	8002d4c <MCAL_GPIO_init>
}
 80044e8:	bf00      	nop
 80044ea:	3710      	adds	r7, #16
 80044ec:	46bd      	mov	sp, r7
 80044ee:	bd80      	pop	{r7, pc}
 80044f0:	08005784 	.word	0x08005784
 80044f4:	40013800 	.word	0x40013800
 80044f8:	40021000 	.word	0x40021000
 80044fc:	40010800 	.word	0x40010800
 8004500:	08005788 	.word	0x08005788
 8004504:	40004400 	.word	0x40004400
 8004508:	0800578c 	.word	0x0800578c
 800450c:	08005790 	.word	0x08005790
 8004510:	40004800 	.word	0x40004800
 8004514:	08005794 	.word	0x08005794
 8004518:	40010c00 	.word	0x40010c00
 800451c:	08005798 	.word	0x08005798

08004520 <USART1_IRQHandler>:
void USART1_IRQHandler(void){
 8004520:	b580      	push	{r7, lr}
 8004522:	af00      	add	r7, sp, #0
	if( UART_STATUS_CHECK(USART1)){
 8004524:	4b05      	ldr	r3, [pc, #20]	; (800453c <USART1_IRQHandler+0x1c>)
 8004526:	681b      	ldr	r3, [r3, #0]
 8004528:	f003 0320 	and.w	r3, r3, #32
 800452c:	2b00      	cmp	r3, #0
 800452e:	d002      	beq.n	8004536 <USART1_IRQHandler+0x16>
		G_P_config[0].P_Call_Back();
 8004530:	4b03      	ldr	r3, [pc, #12]	; (8004540 <USART1_IRQHandler+0x20>)
 8004532:	68db      	ldr	r3, [r3, #12]
 8004534:	4798      	blx	r3

	}
}
 8004536:	bf00      	nop
 8004538:	bd80      	pop	{r7, pc}
 800453a:	bf00      	nop
 800453c:	40013800 	.word	0x40013800
 8004540:	20004278 	.word	0x20004278

08004544 <USART2_IRQHandler>:
void USART2_IRQHandler(void){
 8004544:	b580      	push	{r7, lr}
 8004546:	af00      	add	r7, sp, #0
	if( UART_STATUS_CHECK(USART2)){
 8004548:	4b05      	ldr	r3, [pc, #20]	; (8004560 <USART2_IRQHandler+0x1c>)
 800454a:	681b      	ldr	r3, [r3, #0]
 800454c:	f003 0320 	and.w	r3, r3, #32
 8004550:	2b00      	cmp	r3, #0
 8004552:	d002      	beq.n	800455a <USART2_IRQHandler+0x16>
		G_P_config[1].P_Call_Back();
 8004554:	4b03      	ldr	r3, [pc, #12]	; (8004564 <USART2_IRQHandler+0x20>)
 8004556:	69db      	ldr	r3, [r3, #28]
 8004558:	4798      	blx	r3
	}
}void USART3_IRQHandler(void){
 800455a:	bf00      	nop
 800455c:	bd80      	pop	{r7, pc}
 800455e:	bf00      	nop
 8004560:	40004400 	.word	0x40004400
 8004564:	20004278 	.word	0x20004278

08004568 <USART3_IRQHandler>:
 8004568:	b580      	push	{r7, lr}
 800456a:	af00      	add	r7, sp, #0
	if( UART_STATUS_CHECK(USART3)){
 800456c:	4b05      	ldr	r3, [pc, #20]	; (8004584 <USART3_IRQHandler+0x1c>)
 800456e:	681b      	ldr	r3, [r3, #0]
 8004570:	f003 0320 	and.w	r3, r3, #32
 8004574:	2b00      	cmp	r3, #0
 8004576:	d002      	beq.n	800457e <USART3_IRQHandler+0x16>
		G_P_config[2].P_Call_Back();
 8004578:	4b03      	ldr	r3, [pc, #12]	; (8004588 <USART3_IRQHandler+0x20>)
 800457a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800457c:	4798      	blx	r3
	}
}
 800457e:	bf00      	nop
 8004580:	bd80      	pop	{r7, pc}
 8004582:	bf00      	nop
 8004584:	40004800 	.word	0x40004800
 8004588:	20004278 	.word	0x20004278

0800458c <Error_Handller>:
 * @param [in] - void
 * @param [out] - Void
 * @retval -
 * Note-
 */
void Error_Handller(){
 800458c:	b480      	push	{r7}
 800458e:	af00      	add	r7, sp, #0
	while(1);
 8004590:	e7fe      	b.n	8004590 <Error_Handller+0x4>
	...

08004594 <Sys_Clk_init>:
 * @param [in] - void
 * @param [out] - Void
 * @retval -
 * Note-
 */
void Sys_Clk_init(){
 8004594:	b480      	push	{r7}
 8004596:	af00      	add	r7, sp, #0
	// system speed 36Mhz
	RCC->CFGR |=(0b0101 <<18); //1111: PLL input clock x 16
 8004598:	4b0a      	ldr	r3, [pc, #40]	; (80045c4 <Sys_Clk_init+0x30>)
 800459a:	685b      	ldr	r3, [r3, #4]
 800459c:	4a09      	ldr	r2, [pc, #36]	; (80045c4 <Sys_Clk_init+0x30>)
 800459e:	f443 13a0 	orr.w	r3, r3, #1310720	; 0x140000
 80045a2:	6053      	str	r3, [r2, #4]
	//	RCC->CFGR |=(0b100<<8); //100: HCLK divided by 2
	//	RCC->CFGR |=(1 <<16); //PLL entry clock source
	//	RCC->CR|=(1<<16); //HSE clock enable

	RCC->CR|=(1<<24); //PLL ON
 80045a4:	4b07      	ldr	r3, [pc, #28]	; (80045c4 <Sys_Clk_init+0x30>)
 80045a6:	681b      	ldr	r3, [r3, #0]
 80045a8:	4a06      	ldr	r2, [pc, #24]	; (80045c4 <Sys_Clk_init+0x30>)
 80045aa:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80045ae:	6013      	str	r3, [r2, #0]
	RCC->CFGR |=(0b10 <<0); //10: PLL selected as system clock
 80045b0:	4b04      	ldr	r3, [pc, #16]	; (80045c4 <Sys_Clk_init+0x30>)
 80045b2:	685b      	ldr	r3, [r3, #4]
 80045b4:	4a03      	ldr	r2, [pc, #12]	; (80045c4 <Sys_Clk_init+0x30>)
 80045b6:	f043 0302 	orr.w	r3, r3, #2
 80045ba:	6053      	str	r3, [r2, #4]


}
 80045bc:	bf00      	nop
 80045be:	46bd      	mov	sp, r7
 80045c0:	bc80      	pop	{r7}
 80045c2:	4770      	bx	lr
 80045c4:	40021000 	.word	0x40021000

080045c8 <HALL_EFFECT_TIMER_ENABLE>:
 * @param [in] - void
 * @param [out] - Void
 * @retval -
 * Note-
 */
void HALL_EFFECT_TIMER_ENABLE(){
 80045c8:	b480      	push	{r7}
 80045ca:	af00      	add	r7, sp, #0
	HALL_TIMER_EN ^=1;
 80045cc:	4b05      	ldr	r3, [pc, #20]	; (80045e4 <HALL_EFFECT_TIMER_ENABLE+0x1c>)
 80045ce:	781b      	ldrb	r3, [r3, #0]
 80045d0:	f083 0301 	eor.w	r3, r3, #1
 80045d4:	b2da      	uxtb	r2, r3
 80045d6:	4b03      	ldr	r3, [pc, #12]	; (80045e4 <HALL_EFFECT_TIMER_ENABLE+0x1c>)
 80045d8:	701a      	strb	r2, [r3, #0]

}
 80045da:	bf00      	nop
 80045dc:	46bd      	mov	sp, r7
 80045de:	bc80      	pop	{r7}
 80045e0:	4770      	bx	lr
 80045e2:	bf00      	nop
 80045e4:	20004205 	.word	0x20004205

080045e8 <HALL_EFFECT_HANDLLER>:
 * @param [out] - Void
 * @retval -
 * Note- this fun called every rissing edege from hall effect sensor
 * and update the HALL_EFFECT_KM_H every 1sec and caluclate it from HALL_EFFECT_N_PULSES
 */
void HALL_EFFECT_HANDLLER(){
 80045e8:	b580      	push	{r7, lr}
 80045ea:	af00      	add	r7, sp, #0
	if(HALL_TIMER_EN){
 80045ec:	4b1b      	ldr	r3, [pc, #108]	; (800465c <HALL_EFFECT_HANDLLER+0x74>)
 80045ee:	781b      	ldrb	r3, [r3, #0]
 80045f0:	2b00      	cmp	r3, #0
 80045f2:	d005      	beq.n	8004600 <HALL_EFFECT_HANDLLER+0x18>
		HALL_EFFECT_COUNTER++;
 80045f4:	4b1a      	ldr	r3, [pc, #104]	; (8004660 <HALL_EFFECT_HANDLLER+0x78>)
 80045f6:	681b      	ldr	r3, [r3, #0]
 80045f8:	3301      	adds	r3, #1
 80045fa:	4a19      	ldr	r2, [pc, #100]	; (8004660 <HALL_EFFECT_HANDLLER+0x78>)
 80045fc:	6013      	str	r3, [r2, #0]
			_TIM1_delay_ms(1);
			HALL_EFFECT_COUNTER=0;
		}
	}

}
 80045fe:	e02a      	b.n	8004656 <HALL_EFFECT_HANDLLER+0x6e>
		if(HALL_EFFECT_COUNTER){
 8004600:	4b17      	ldr	r3, [pc, #92]	; (8004660 <HALL_EFFECT_HANDLLER+0x78>)
 8004602:	681b      	ldr	r3, [r3, #0]
 8004604:	2b00      	cmp	r3, #0
 8004606:	d026      	beq.n	8004656 <HALL_EFFECT_HANDLLER+0x6e>
			HALL_EFFECT_N_PULSES=HALL_EFFECT_COUNTER;
 8004608:	4b15      	ldr	r3, [pc, #84]	; (8004660 <HALL_EFFECT_HANDLLER+0x78>)
 800460a:	681b      	ldr	r3, [r3, #0]
 800460c:	4a15      	ldr	r2, [pc, #84]	; (8004664 <HALL_EFFECT_HANDLLER+0x7c>)
 800460e:	6013      	str	r3, [r2, #0]
			HALL_EFFECT_RPS=((HALL_EFFECT_N_PULSES*HALL_EFFECT_TIME_CONVERSION)/HALL_EFFECT_REV_PER_PULSES);
 8004610:	4b14      	ldr	r3, [pc, #80]	; (8004664 <HALL_EFFECT_HANDLLER+0x7c>)
 8004612:	681b      	ldr	r3, [r3, #0]
 8004614:	089b      	lsrs	r3, r3, #2
 8004616:	4a14      	ldr	r2, [pc, #80]	; (8004668 <HALL_EFFECT_HANDLLER+0x80>)
 8004618:	fba2 2303 	umull	r2, r3, r2, r3
 800461c:	461a      	mov	r2, r3
 800461e:	4b13      	ldr	r3, [pc, #76]	; (800466c <HALL_EFFECT_HANDLLER+0x84>)
 8004620:	601a      	str	r2, [r3, #0]
			HALL_EFFECT_RPM=HALL_EFFECT_RPS *60;
 8004622:	4b12      	ldr	r3, [pc, #72]	; (800466c <HALL_EFFECT_HANDLLER+0x84>)
 8004624:	681a      	ldr	r2, [r3, #0]
 8004626:	4613      	mov	r3, r2
 8004628:	011b      	lsls	r3, r3, #4
 800462a:	1a9b      	subs	r3, r3, r2
 800462c:	009b      	lsls	r3, r3, #2
 800462e:	461a      	mov	r2, r3
 8004630:	4b0f      	ldr	r3, [pc, #60]	; (8004670 <HALL_EFFECT_HANDLLER+0x88>)
 8004632:	601a      	str	r2, [r3, #0]
			HALL_EFFECT_KM_H=((HALL_EFFECT_RPM*PI*MOTOR_SHAFT_RADIUS)/(2500000));
 8004634:	4b0e      	ldr	r3, [pc, #56]	; (8004670 <HALL_EFFECT_HANDLLER+0x88>)
 8004636:	681b      	ldr	r3, [r3, #0]
 8004638:	4a0e      	ldr	r2, [pc, #56]	; (8004674 <HALL_EFFECT_HANDLLER+0x8c>)
 800463a:	fb02 f303 	mul.w	r3, r2, r3
 800463e:	4a0e      	ldr	r2, [pc, #56]	; (8004678 <HALL_EFFECT_HANDLLER+0x90>)
 8004640:	fba2 2303 	umull	r2, r3, r2, r3
 8004644:	0d1b      	lsrs	r3, r3, #20
 8004646:	4a0d      	ldr	r2, [pc, #52]	; (800467c <HALL_EFFECT_HANDLLER+0x94>)
 8004648:	6013      	str	r3, [r2, #0]
			_TIM1_delay_ms(1);
 800464a:	2001      	movs	r0, #1
 800464c:	f7ff fce8 	bl	8004020 <_TIM1_delay_ms>
			HALL_EFFECT_COUNTER=0;
 8004650:	4b03      	ldr	r3, [pc, #12]	; (8004660 <HALL_EFFECT_HANDLLER+0x78>)
 8004652:	2200      	movs	r2, #0
 8004654:	601a      	str	r2, [r3, #0]
}
 8004656:	bf00      	nop
 8004658:	bd80      	pop	{r7, pc}
 800465a:	bf00      	nop
 800465c:	20004205 	.word	0x20004205
 8004660:	20004208 	.word	0x20004208
 8004664:	2000420c 	.word	0x2000420c
 8004668:	24924925 	.word	0x24924925
 800466c:	20004210 	.word	0x20004210
 8004670:	20004214 	.word	0x20004214
 8004674:	000113fa 	.word	0x000113fa
 8004678:	6b5fca6b 	.word	0x6b5fca6b
 800467c:	20004218 	.word	0x20004218

08004680 <HALL_EFECT_Init>:
 * @param [in] - void
 * @param [out] - Void
 * @retval -
 * Note-
 */
void HALL_EFECT_Init(){
 8004680:	b580      	push	{r7, lr}
 8004682:	b08a      	sub	sp, #40	; 0x28
 8004684:	af00      	add	r7, sp, #0
	{
		GP_TIMERx_config GP_sitting={(MCAL_GET_H_CLCK()/1000) // to get tick every 1ms
 8004686:	f7ff f927 	bl	80038d8 <MCAL_GET_H_CLCK>
 800468a:	4602      	mov	r2, r0
 800468c:	4b1a      	ldr	r3, [pc, #104]	; (80046f8 <HALL_EFECT_Init+0x78>)
 800468e:	fba3 2302 	umull	r2, r3, r3, r2
 8004692:	099b      	lsrs	r3, r3, #6
 8004694:	b29b      	uxth	r3, r3
 8004696:	833b      	strh	r3, [r7, #24]
 8004698:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800469c:	837b      	strh	r3, [r7, #26]
 800469e:	2300      	movs	r3, #0
 80046a0:	83bb      	strh	r3, [r7, #28]
 80046a2:	2300      	movs	r3, #0
 80046a4:	83fb      	strh	r3, [r7, #30]
 80046a6:	2300      	movs	r3, #0
 80046a8:	f887 3020 	strb.w	r3, [r7, #32]
 80046ac:	2300      	movs	r3, #0
 80046ae:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
 80046b2:	4b12      	ldr	r3, [pc, #72]	; (80046fc <HALL_EFECT_Init+0x7c>)
 80046b4:	627b      	str	r3, [r7, #36]	; 0x24
				,1000 //to get interrupt every 1SEC
				,0,0,INT_EN,NORMAL,HALL_EFFECT_TIMER_ENABLE};
		GP_TIMERx_NORMAL_config GP_sitting_NORMA={Up};
 80046b6:	2300      	movs	r3, #0
 80046b8:	753b      	strb	r3, [r7, #20]
		GP_TIMx_start(HALL_EFFECT_TIMx_instant,&GP_sitting,&GP_sitting_NORMA);
 80046ba:	f107 0214 	add.w	r2, r7, #20
 80046be:	f107 0318 	add.w	r3, r7, #24
 80046c2:	4619      	mov	r1, r3
 80046c4:	480e      	ldr	r0, [pc, #56]	; (8004700 <HALL_EFECT_Init+0x80>)
 80046c6:	f7fe fe3d 	bl	8003344 <GP_TIMx_start>
	}


	{
		EXTI_config_t HALL_EFFECT_SITTING={HALL_EFFECT_EXTI_LINE,RISEING,ENABLE,HALL_EFFECT_HANDLLER};
 80046ca:	230c      	movs	r3, #12
 80046cc:	803b      	strh	r3, [r7, #0]
 80046ce:	4b0d      	ldr	r3, [pc, #52]	; (8004704 <HALL_EFECT_Init+0x84>)
 80046d0:	607b      	str	r3, [r7, #4]
 80046d2:	230c      	movs	r3, #12
 80046d4:	813b      	strh	r3, [r7, #8]
 80046d6:	2328      	movs	r3, #40	; 0x28
 80046d8:	817b      	strh	r3, [r7, #10]
 80046da:	2301      	movs	r3, #1
 80046dc:	733b      	strb	r3, [r7, #12]
 80046de:	2301      	movs	r3, #1
 80046e0:	737b      	strb	r3, [r7, #13]
 80046e2:	4b09      	ldr	r3, [pc, #36]	; (8004708 <HALL_EFECT_Init+0x88>)
 80046e4:	613b      	str	r3, [r7, #16]
		MCAL_EXTI_init(&HALL_EFFECT_SITTING);
 80046e6:	463b      	mov	r3, r7
 80046e8:	4618      	mov	r0, r3
 80046ea:	f7fe f927 	bl	800293c <MCAL_EXTI_init>

	}
}
 80046ee:	bf00      	nop
 80046f0:	3728      	adds	r7, #40	; 0x28
 80046f2:	46bd      	mov	sp, r7
 80046f4:	bd80      	pop	{r7, pc}
 80046f6:	bf00      	nop
 80046f8:	10624dd3 	.word	0x10624dd3
 80046fc:	080045c9 	.word	0x080045c9
 8004700:	40000400 	.word	0x40000400
 8004704:	40010c00 	.word	0x40010c00
 8004708:	080045e9 	.word	0x080045e9

0800470c <DMS_Handller_TASK>:
 * @param [in] - void
 * @param [out] - Void
 * @retval -
 * Note-
 */
void DMS_Handller_TASK(){
 800470c:	b580      	push	{r7, lr}
 800470e:	af00      	add	r7, sp, #0


	while(1){
		DMS_DATA=DMS_read();
 8004710:	f7fc fdbc 	bl	800128c <DMS_read>
 8004714:	4603      	mov	r3, r0
 8004716:	461a      	mov	r2, r3
 8004718:	4b1c      	ldr	r3, [pc, #112]	; (800478c <DMS_Handller_TASK+0x80>)
 800471a:	701a      	strb	r2, [r3, #0]
		if(DMS_WAIT_COUNTER ==1){
 800471c:	4b1c      	ldr	r3, [pc, #112]	; (8004790 <DMS_Handller_TASK+0x84>)
 800471e:	781b      	ldrb	r3, [r3, #0]
 8004720:	2b01      	cmp	r3, #1
 8004722:	d10a      	bne.n	800473a <DMS_Handller_TASK+0x2e>
			MCAL_USART_SendData(TSR_UART_INSTANT, DMS_WAIT);
 8004724:	2121      	movs	r1, #33	; 0x21
 8004726:	481b      	ldr	r0, [pc, #108]	; (8004794 <DMS_Handller_TASK+0x88>)
 8004728:	f7ff fdfa 	bl	8004320 <MCAL_USART_SendData>
//			DMS_WAIT_COUNTER=0;
			DMS__one_COUNTER=0;
 800472c:	4b1a      	ldr	r3, [pc, #104]	; (8004798 <DMS_Handller_TASK+0x8c>)
 800472e:	2200      	movs	r2, #0
 8004730:	701a      	strb	r2, [r3, #0]
			DMS__zero_COUNTER=0;
 8004732:	4b1a      	ldr	r3, [pc, #104]	; (800479c <DMS_Handller_TASK+0x90>)
 8004734:	2200      	movs	r2, #0
 8004736:	701a      	strb	r2, [r3, #0]
 8004738:	e7ea      	b.n	8004710 <DMS_Handller_TASK+0x4>

		}else if(DMS_DATA==0){
 800473a:	4b14      	ldr	r3, [pc, #80]	; (800478c <DMS_Handller_TASK+0x80>)
 800473c:	781b      	ldrb	r3, [r3, #0]
 800473e:	2b00      	cmp	r3, #0
 8004740:	d111      	bne.n	8004766 <DMS_Handller_TASK+0x5a>
//			DMS_WAIT_COUNTER=0;
			DMS__one_COUNTER=0;
 8004742:	4b15      	ldr	r3, [pc, #84]	; (8004798 <DMS_Handller_TASK+0x8c>)
 8004744:	2200      	movs	r2, #0
 8004746:	701a      	strb	r2, [r3, #0]
			if(  DMS__zero_COUNTER==0){
 8004748:	4b14      	ldr	r3, [pc, #80]	; (800479c <DMS_Handller_TASK+0x90>)
 800474a:	781b      	ldrb	r3, [r3, #0]
 800474c:	2b00      	cmp	r3, #0
 800474e:	d1df      	bne.n	8004710 <DMS_Handller_TASK+0x4>
				MCAL_USART_SendData(TSR_UART_INSTANT, DMS_TAKE_ACTION);
 8004750:	2166      	movs	r1, #102	; 0x66
 8004752:	4810      	ldr	r0, [pc, #64]	; (8004794 <DMS_Handller_TASK+0x88>)
 8004754:	f7ff fde4 	bl	8004320 <MCAL_USART_SendData>
				DMS__zero_COUNTER++;
 8004758:	4b10      	ldr	r3, [pc, #64]	; (800479c <DMS_Handller_TASK+0x90>)
 800475a:	781b      	ldrb	r3, [r3, #0]
 800475c:	3301      	adds	r3, #1
 800475e:	b2da      	uxtb	r2, r3
 8004760:	4b0e      	ldr	r3, [pc, #56]	; (800479c <DMS_Handller_TASK+0x90>)
 8004762:	701a      	strb	r2, [r3, #0]
 8004764:	e7d4      	b.n	8004710 <DMS_Handller_TASK+0x4>
			}

		}else{
//			DMS_WAIT_COUNTER=0;
			DMS__zero_COUNTER=0;
 8004766:	4b0d      	ldr	r3, [pc, #52]	; (800479c <DMS_Handller_TASK+0x90>)
 8004768:	2200      	movs	r2, #0
 800476a:	701a      	strb	r2, [r3, #0]
			if(DMS__one_COUNTER==0){
 800476c:	4b0a      	ldr	r3, [pc, #40]	; (8004798 <DMS_Handller_TASK+0x8c>)
 800476e:	781b      	ldrb	r3, [r3, #0]
 8004770:	2b00      	cmp	r3, #0
 8004772:	d1cd      	bne.n	8004710 <DMS_Handller_TASK+0x4>
				MCAL_USART_SendData(TSR_UART_INSTANT, DMS_Release_ACTION);
 8004774:	2155      	movs	r1, #85	; 0x55
 8004776:	4807      	ldr	r0, [pc, #28]	; (8004794 <DMS_Handller_TASK+0x88>)
 8004778:	f7ff fdd2 	bl	8004320 <MCAL_USART_SendData>
				DMS__one_COUNTER++;
 800477c:	4b06      	ldr	r3, [pc, #24]	; (8004798 <DMS_Handller_TASK+0x8c>)
 800477e:	781b      	ldrb	r3, [r3, #0]
 8004780:	3301      	adds	r3, #1
 8004782:	b2da      	uxtb	r2, r3
 8004784:	4b04      	ldr	r3, [pc, #16]	; (8004798 <DMS_Handller_TASK+0x8c>)
 8004786:	701a      	strb	r2, [r3, #0]
		DMS_DATA=DMS_read();
 8004788:	e7c2      	b.n	8004710 <DMS_Handller_TASK+0x4>
 800478a:	bf00      	nop
 800478c:	20004232 	.word	0x20004232
 8004790:	20004233 	.word	0x20004233
 8004794:	40013800 	.word	0x40013800
 8004798:	20004231 	.word	0x20004231
 800479c:	20004230 	.word	0x20004230

080047a0 <ACC_CONVERT_ADC_TODICMAL>:
 * @retval -
 * Note-
 */


uint8_t ACC_CONVERT_ADC_TODICMAL(uint16_t ACC_THROTTEL_){
 80047a0:	b480      	push	{r7}
 80047a2:	b085      	sub	sp, #20
 80047a4:	af00      	add	r7, sp, #0
 80047a6:	4603      	mov	r3, r0
 80047a8:	80fb      	strh	r3, [r7, #6]
	uint8_t ACC_DICIMAL_VAL=((((ACC_THROTTEL_-ACC_TROTTEL_MIN_ADC_VAL)*(ACC_DAC_MAX_DECIMAL-ACC_DAC_MIN_DECIMAL))/(ACC_TROTTEL_Max_ADC_VAL-ACC_TROTTEL_MIN_ADC_VAL))+ACC_DAC_MIN_DECIMAL);
 80047aa:	88fb      	ldrh	r3, [r7, #6]
 80047ac:	f5a3 6296 	sub.w	r2, r3, #1200	; 0x4b0
 80047b0:	4613      	mov	r3, r2
 80047b2:	005b      	lsls	r3, r3, #1
 80047b4:	4413      	add	r3, r2
 80047b6:	019b      	lsls	r3, r3, #6
 80047b8:	1a9b      	subs	r3, r3, r2
 80047ba:	4a08      	ldr	r2, [pc, #32]	; (80047dc <ACC_CONVERT_ADC_TODICMAL+0x3c>)
 80047bc:	fb82 1203 	smull	r1, r2, r2, r3
 80047c0:	441a      	add	r2, r3
 80047c2:	1292      	asrs	r2, r2, #10
 80047c4:	17db      	asrs	r3, r3, #31
 80047c6:	1ad3      	subs	r3, r2, r3
 80047c8:	b2db      	uxtb	r3, r3
 80047ca:	3340      	adds	r3, #64	; 0x40
 80047cc:	73fb      	strb	r3, [r7, #15]

	return ACC_DICIMAL_VAL;
 80047ce:	7bfb      	ldrb	r3, [r7, #15]

}
 80047d0:	4618      	mov	r0, r3
 80047d2:	3714      	adds	r7, #20
 80047d4:	46bd      	mov	sp, r7
 80047d6:	bc80      	pop	{r7}
 80047d8:	4770      	bx	lr
 80047da:	bf00      	nop
 80047dc:	ec2a6fa1 	.word	0xec2a6fa1

080047e0 <ACC_ADC_CallBack>:
 * @param [in] - void
 * @param [out] - void
 * @retval -
 * Note- the ADC must work as interrupt otherwise this fun will not work
 */
void ACC_ADC_CallBack(){
 80047e0:	b580      	push	{r7, lr}
 80047e2:	af00      	add	r7, sp, #0
	ADC_read(ADC1,ACC_THROTTEL_CHx,&ACC_THROTTEL_DATA);
 80047e4:	4a03      	ldr	r2, [pc, #12]	; (80047f4 <ACC_ADC_CallBack+0x14>)
 80047e6:	2100      	movs	r1, #0
 80047e8:	4803      	ldr	r0, [pc, #12]	; (80047f8 <ACC_ADC_CallBack+0x18>)
 80047ea:	f7fd fd73 	bl	80022d4 <ADC_read>

}
 80047ee:	bf00      	nop
 80047f0:	bd80      	pop	{r7, pc}
 80047f2:	bf00      	nop
 80047f4:	20004228 	.word	0x20004228
 80047f8:	40012400 	.word	0x40012400

080047fc <ACC_throtel_init>:
 * @param [in] - void
 * @param [out] - void
 * @retval -
 * Note-
 */
void ACC_throtel_init(){
 80047fc:	b580      	push	{r7, lr}
 80047fe:	b086      	sub	sp, #24
 8004800:	af00      	add	r7, sp, #0
	ADC_Analog_WDG AWDG={0,0,0,0};
 8004802:	f107 0310 	add.w	r3, r7, #16
 8004806:	2200      	movs	r2, #0
 8004808:	601a      	str	r2, [r3, #0]
 800480a:	809a      	strh	r2, [r3, #4]
	ADC_CONFIG config={ACC_THROTTEL_CHx,ADC_Continuous_conversion,ADC_1_5_cycles,ADC_Polling,&AWDG,ACC_ADC_CallBack};
 800480c:	2300      	movs	r3, #0
 800480e:	713b      	strb	r3, [r7, #4]
 8004810:	2301      	movs	r3, #1
 8004812:	717b      	strb	r3, [r7, #5]
 8004814:	2300      	movs	r3, #0
 8004816:	71bb      	strb	r3, [r7, #6]
 8004818:	2300      	movs	r3, #0
 800481a:	71fb      	strb	r3, [r7, #7]
 800481c:	f107 0310 	add.w	r3, r7, #16
 8004820:	60bb      	str	r3, [r7, #8]
 8004822:	4b0b      	ldr	r3, [pc, #44]	; (8004850 <ACC_throtel_init+0x54>)
 8004824:	60fb      	str	r3, [r7, #12]
	ADC_init(ADC1,&config);
 8004826:	1d3b      	adds	r3, r7, #4
 8004828:	4619      	mov	r1, r3
 800482a:	480a      	ldr	r0, [pc, #40]	; (8004854 <ACC_throtel_init+0x58>)
 800482c:	f7fd fbc6 	bl	8001fbc <ADC_init>
	//	ADC_interrupt_Enable(ADC1);
	PIN_config PINx={ACC_BOTTON_PIN,INPUT_PD,0};
 8004830:	2300      	movs	r3, #0
 8004832:	803b      	strh	r3, [r7, #0]
 8004834:	2303      	movs	r3, #3
 8004836:	70bb      	strb	r3, [r7, #2]
 8004838:	2300      	movs	r3, #0
 800483a:	70fb      	strb	r3, [r7, #3]
	MCAL_GPIO_init(ACC_BOTTON_PORT, &PINx);
 800483c:	463b      	mov	r3, r7
 800483e:	4619      	mov	r1, r3
 8004840:	4805      	ldr	r0, [pc, #20]	; (8004858 <ACC_throtel_init+0x5c>)
 8004842:	f7fe fa83 	bl	8002d4c <MCAL_GPIO_init>

}
 8004846:	bf00      	nop
 8004848:	3718      	adds	r7, #24
 800484a:	46bd      	mov	sp, r7
 800484c:	bd80      	pop	{r7, pc}
 800484e:	bf00      	nop
 8004850:	080047e1 	.word	0x080047e1
 8004854:	40012400 	.word	0x40012400
 8004858:	40010c00 	.word	0x40010c00

0800485c <ACC_DAC_init>:
 * @param [in] - void
 * @param [out] - void
 * @retval -
 * Note-
 */
void ACC_DAC_init(){
 800485c:	b580      	push	{r7, lr}
 800485e:	b082      	sub	sp, #8
 8004860:	af00      	add	r7, sp, #0
	PIN_config PINx={ACC_DAC_0,OUTPUT_PP,SPEED_10};
 8004862:	4b22      	ldr	r3, [pc, #136]	; (80048ec <ACC_DAC_init+0x90>)
 8004864:	681b      	ldr	r3, [r3, #0]
 8004866:	607b      	str	r3, [r7, #4]
	MCAL_GPIO_init(GPIOA, &PINx);
 8004868:	1d3b      	adds	r3, r7, #4
 800486a:	4619      	mov	r1, r3
 800486c:	4820      	ldr	r0, [pc, #128]	; (80048f0 <ACC_DAC_init+0x94>)
 800486e:	f7fe fa6d 	bl	8002d4c <MCAL_GPIO_init>
	PINx=(PIN_config){ACC_DAC_1,OUTPUT_PP,SPEED_10};
 8004872:	4b20      	ldr	r3, [pc, #128]	; (80048f4 <ACC_DAC_init+0x98>)
 8004874:	681b      	ldr	r3, [r3, #0]
 8004876:	607b      	str	r3, [r7, #4]
	MCAL_GPIO_init(GPIOB, &PINx);
 8004878:	1d3b      	adds	r3, r7, #4
 800487a:	4619      	mov	r1, r3
 800487c:	481e      	ldr	r0, [pc, #120]	; (80048f8 <ACC_DAC_init+0x9c>)
 800487e:	f7fe fa65 	bl	8002d4c <MCAL_GPIO_init>
	PINx=(PIN_config){ACC_DAC_2,OUTPUT_PP,SPEED_10};
 8004882:	4b1e      	ldr	r3, [pc, #120]	; (80048fc <ACC_DAC_init+0xa0>)
 8004884:	681b      	ldr	r3, [r3, #0]
 8004886:	607b      	str	r3, [r7, #4]
	MCAL_GPIO_init(GPIOB, &PINx);
 8004888:	1d3b      	adds	r3, r7, #4
 800488a:	4619      	mov	r1, r3
 800488c:	481a      	ldr	r0, [pc, #104]	; (80048f8 <ACC_DAC_init+0x9c>)
 800488e:	f7fe fa5d 	bl	8002d4c <MCAL_GPIO_init>
	PINx=(PIN_config){ACC_DAC_3,OUTPUT_PP,SPEED_10};
 8004892:	4b1b      	ldr	r3, [pc, #108]	; (8004900 <ACC_DAC_init+0xa4>)
 8004894:	681b      	ldr	r3, [r3, #0]
 8004896:	607b      	str	r3, [r7, #4]
	MCAL_GPIO_init(GPIOB, &PINx);
 8004898:	1d3b      	adds	r3, r7, #4
 800489a:	4619      	mov	r1, r3
 800489c:	4816      	ldr	r0, [pc, #88]	; (80048f8 <ACC_DAC_init+0x9c>)
 800489e:	f7fe fa55 	bl	8002d4c <MCAL_GPIO_init>
	PINx=(PIN_config){ACC_DAC_4,OUTPUT_PP,SPEED_10};
 80048a2:	4b18      	ldr	r3, [pc, #96]	; (8004904 <ACC_DAC_init+0xa8>)
 80048a4:	681b      	ldr	r3, [r3, #0]
 80048a6:	607b      	str	r3, [r7, #4]
	MCAL_GPIO_init(GPIOB, &PINx);
 80048a8:	1d3b      	adds	r3, r7, #4
 80048aa:	4619      	mov	r1, r3
 80048ac:	4812      	ldr	r0, [pc, #72]	; (80048f8 <ACC_DAC_init+0x9c>)
 80048ae:	f7fe fa4d 	bl	8002d4c <MCAL_GPIO_init>
	PINx=(PIN_config){ACC_DAC_5,OUTPUT_PP,SPEED_10};
 80048b2:	4b15      	ldr	r3, [pc, #84]	; (8004908 <ACC_DAC_init+0xac>)
 80048b4:	681b      	ldr	r3, [r3, #0]
 80048b6:	607b      	str	r3, [r7, #4]
	MCAL_GPIO_init(GPIOB, &PINx);
 80048b8:	1d3b      	adds	r3, r7, #4
 80048ba:	4619      	mov	r1, r3
 80048bc:	480e      	ldr	r0, [pc, #56]	; (80048f8 <ACC_DAC_init+0x9c>)
 80048be:	f7fe fa45 	bl	8002d4c <MCAL_GPIO_init>
	PINx=(PIN_config){ACC_DAC_6,OUTPUT_PP,SPEED_10};
 80048c2:	4b12      	ldr	r3, [pc, #72]	; (800490c <ACC_DAC_init+0xb0>)
 80048c4:	681b      	ldr	r3, [r3, #0]
 80048c6:	607b      	str	r3, [r7, #4]
	MCAL_GPIO_init(GPIOB, &PINx);
 80048c8:	1d3b      	adds	r3, r7, #4
 80048ca:	4619      	mov	r1, r3
 80048cc:	480a      	ldr	r0, [pc, #40]	; (80048f8 <ACC_DAC_init+0x9c>)
 80048ce:	f7fe fa3d 	bl	8002d4c <MCAL_GPIO_init>
	PINx=(PIN_config){ACC_DAC_7,OUTPUT_PP,SPEED_10};
 80048d2:	4b0f      	ldr	r3, [pc, #60]	; (8004910 <ACC_DAC_init+0xb4>)
 80048d4:	681b      	ldr	r3, [r3, #0]
 80048d6:	607b      	str	r3, [r7, #4]
	MCAL_GPIO_init(GPIOB, &PINx);
 80048d8:	1d3b      	adds	r3, r7, #4
 80048da:	4619      	mov	r1, r3
 80048dc:	4806      	ldr	r0, [pc, #24]	; (80048f8 <ACC_DAC_init+0x9c>)
 80048de:	f7fe fa35 	bl	8002d4c <MCAL_GPIO_init>

}
 80048e2:	bf00      	nop
 80048e4:	3708      	adds	r7, #8
 80048e6:	46bd      	mov	sp, r7
 80048e8:	bd80      	pop	{r7, pc}
 80048ea:	bf00      	nop
 80048ec:	0800579c 	.word	0x0800579c
 80048f0:	40010800 	.word	0x40010800
 80048f4:	080057a0 	.word	0x080057a0
 80048f8:	40010c00 	.word	0x40010c00
 80048fc:	080057a4 	.word	0x080057a4
 8004900:	080057a8 	.word	0x080057a8
 8004904:	080057ac 	.word	0x080057ac
 8004908:	080057b0 	.word	0x080057b0
 800490c:	080057b4 	.word	0x080057b4
 8004910:	080057b8 	.word	0x080057b8

08004914 <ACC_FROM_ADC_TO_DAC>:
 * @retval -
 * Note- the DAC designed is 8-bit dac so the value should be between 0-255
 * and we need the volt not be less 0.8 so decimal_val sould be between 64-255
 */

void ACC_FROM_ADC_TO_DAC(uint16_t decimal_val){
 8004914:	b580      	push	{r7, lr}
 8004916:	b082      	sub	sp, #8
 8004918:	af00      	add	r7, sp, #0
 800491a:	4603      	mov	r3, r0
 800491c:	80fb      	strh	r3, [r7, #6]
	//	uint16_t PWM_V=(uint16_t)(((ADC_VAL-ACC_TROTTEL_MIN_ADC_VAL)*100)/(ACC_TROTTEL_Max_ADC_VAL_shifted));
	/*MY CLOCK IS 28Mhz so i the prescaler will be 27
	 * and i need to proudce and it will make tick every 1us and i need 3KHZ PWM so the ARR= will be 333.33
	 * */
	//	PWM_V=((PWM_V*35)/100);
	MCAL_write_PIN(GPIOA, ACC_DAC_0, ((decimal_val >>0) &1));
 800491e:	88fb      	ldrh	r3, [r7, #6]
 8004920:	b2db      	uxtb	r3, r3
 8004922:	f003 0301 	and.w	r3, r3, #1
 8004926:	b2db      	uxtb	r3, r3
 8004928:	461a      	mov	r2, r3
 800492a:	210f      	movs	r1, #15
 800492c:	482d      	ldr	r0, [pc, #180]	; (80049e4 <ACC_FROM_ADC_TO_DAC+0xd0>)
 800492e:	f7fe faf7 	bl	8002f20 <MCAL_write_PIN>
	MCAL_write_PIN(GPIOB, ACC_DAC_1, ((decimal_val >>1) &1));
 8004932:	88fb      	ldrh	r3, [r7, #6]
 8004934:	085b      	lsrs	r3, r3, #1
 8004936:	b29b      	uxth	r3, r3
 8004938:	b2db      	uxtb	r3, r3
 800493a:	f003 0301 	and.w	r3, r3, #1
 800493e:	b2db      	uxtb	r3, r3
 8004940:	461a      	mov	r2, r3
 8004942:	2103      	movs	r1, #3
 8004944:	4828      	ldr	r0, [pc, #160]	; (80049e8 <ACC_FROM_ADC_TO_DAC+0xd4>)
 8004946:	f7fe faeb 	bl	8002f20 <MCAL_write_PIN>
	MCAL_write_PIN(GPIOB, ACC_DAC_2, ((decimal_val >>2) &1));
 800494a:	88fb      	ldrh	r3, [r7, #6]
 800494c:	089b      	lsrs	r3, r3, #2
 800494e:	b29b      	uxth	r3, r3
 8004950:	b2db      	uxtb	r3, r3
 8004952:	f003 0301 	and.w	r3, r3, #1
 8004956:	b2db      	uxtb	r3, r3
 8004958:	461a      	mov	r2, r3
 800495a:	2104      	movs	r1, #4
 800495c:	4822      	ldr	r0, [pc, #136]	; (80049e8 <ACC_FROM_ADC_TO_DAC+0xd4>)
 800495e:	f7fe fadf 	bl	8002f20 <MCAL_write_PIN>
	MCAL_write_PIN(GPIOB, ACC_DAC_3, ((decimal_val >>3) &1));
 8004962:	88fb      	ldrh	r3, [r7, #6]
 8004964:	08db      	lsrs	r3, r3, #3
 8004966:	b29b      	uxth	r3, r3
 8004968:	b2db      	uxtb	r3, r3
 800496a:	f003 0301 	and.w	r3, r3, #1
 800496e:	b2db      	uxtb	r3, r3
 8004970:	461a      	mov	r2, r3
 8004972:	2105      	movs	r1, #5
 8004974:	481c      	ldr	r0, [pc, #112]	; (80049e8 <ACC_FROM_ADC_TO_DAC+0xd4>)
 8004976:	f7fe fad3 	bl	8002f20 <MCAL_write_PIN>
	MCAL_write_PIN(GPIOB, ACC_DAC_4, ((decimal_val >>4) &1));
 800497a:	88fb      	ldrh	r3, [r7, #6]
 800497c:	091b      	lsrs	r3, r3, #4
 800497e:	b29b      	uxth	r3, r3
 8004980:	b2db      	uxtb	r3, r3
 8004982:	f003 0301 	and.w	r3, r3, #1
 8004986:	b2db      	uxtb	r3, r3
 8004988:	461a      	mov	r2, r3
 800498a:	2106      	movs	r1, #6
 800498c:	4816      	ldr	r0, [pc, #88]	; (80049e8 <ACC_FROM_ADC_TO_DAC+0xd4>)
 800498e:	f7fe fac7 	bl	8002f20 <MCAL_write_PIN>
	MCAL_write_PIN(GPIOB, ACC_DAC_5, ((decimal_val >>5) &1));
 8004992:	88fb      	ldrh	r3, [r7, #6]
 8004994:	095b      	lsrs	r3, r3, #5
 8004996:	b29b      	uxth	r3, r3
 8004998:	b2db      	uxtb	r3, r3
 800499a:	f003 0301 	and.w	r3, r3, #1
 800499e:	b2db      	uxtb	r3, r3
 80049a0:	461a      	mov	r2, r3
 80049a2:	2107      	movs	r1, #7
 80049a4:	4810      	ldr	r0, [pc, #64]	; (80049e8 <ACC_FROM_ADC_TO_DAC+0xd4>)
 80049a6:	f7fe fabb 	bl	8002f20 <MCAL_write_PIN>
	MCAL_write_PIN(GPIOB, ACC_DAC_6, ((decimal_val >>6) &1));
 80049aa:	88fb      	ldrh	r3, [r7, #6]
 80049ac:	099b      	lsrs	r3, r3, #6
 80049ae:	b29b      	uxth	r3, r3
 80049b0:	b2db      	uxtb	r3, r3
 80049b2:	f003 0301 	and.w	r3, r3, #1
 80049b6:	b2db      	uxtb	r3, r3
 80049b8:	461a      	mov	r2, r3
 80049ba:	2108      	movs	r1, #8
 80049bc:	480a      	ldr	r0, [pc, #40]	; (80049e8 <ACC_FROM_ADC_TO_DAC+0xd4>)
 80049be:	f7fe faaf 	bl	8002f20 <MCAL_write_PIN>
	MCAL_write_PIN(GPIOB, ACC_DAC_7, ((decimal_val >>7) &1));
 80049c2:	88fb      	ldrh	r3, [r7, #6]
 80049c4:	09db      	lsrs	r3, r3, #7
 80049c6:	b29b      	uxth	r3, r3
 80049c8:	b2db      	uxtb	r3, r3
 80049ca:	f003 0301 	and.w	r3, r3, #1
 80049ce:	b2db      	uxtb	r3, r3
 80049d0:	461a      	mov	r2, r3
 80049d2:	2109      	movs	r1, #9
 80049d4:	4804      	ldr	r0, [pc, #16]	; (80049e8 <ACC_FROM_ADC_TO_DAC+0xd4>)
 80049d6:	f7fe faa3 	bl	8002f20 <MCAL_write_PIN>

}
 80049da:	bf00      	nop
 80049dc:	3708      	adds	r7, #8
 80049de:	46bd      	mov	sp, r7
 80049e0:	bd80      	pop	{r7, pc}
 80049e2:	bf00      	nop
 80049e4:	40010800 	.word	0x40010800
 80049e8:	40010c00 	.word	0x40010c00

080049ec <ACC_Handller_TASK>:
 * @param [in] - void
 * @param [out] - Void
 * @retval -
 * Note-
 */
void ACC_Handller_TASK(){
 80049ec:	b480      	push	{r7}
 80049ee:	af00      	add	r7, sp, #0
	while(1){

		//      ACC_AMP=500;
		if((LUNA_AMP>=100) && (LUNA_AMP<=65535) ){
 80049f0:	4b22      	ldr	r3, [pc, #136]	; (8004a7c <ACC_Handller_TASK+0x90>)
 80049f2:	881b      	ldrh	r3, [r3, #0]
 80049f4:	2b63      	cmp	r3, #99	; 0x63
 80049f6:	d931      	bls.n	8004a5c <ACC_Handller_TASK+0x70>
			if(LUNA_dis ==0x00){
 80049f8:	4b21      	ldr	r3, [pc, #132]	; (8004a80 <ACC_Handller_TASK+0x94>)
 80049fa:	881b      	ldrh	r3, [r3, #0]
 80049fc:	2b00      	cmp	r3, #0
 80049fe:	d10b      	bne.n	8004a18 <ACC_Handller_TASK+0x2c>
				if(GR_DMS_FLAG_send == DMS_EYES_CLOSED_FORCE_STOP)
 8004a00:	4b20      	ldr	r3, [pc, #128]	; (8004a84 <ACC_Handller_TASK+0x98>)
 8004a02:	781b      	ldrb	r3, [r3, #0]
 8004a04:	2b07      	cmp	r3, #7
 8004a06:	d103      	bne.n	8004a10 <ACC_Handller_TASK+0x24>
					ACC_ACTION=ACC_CAR_STOP;
 8004a08:	4b1f      	ldr	r3, [pc, #124]	; (8004a88 <ACC_Handller_TASK+0x9c>)
 8004a0a:	2201      	movs	r2, #1
 8004a0c:	701a      	strb	r2, [r3, #0]
 8004a0e:	e7ef      	b.n	80049f0 <ACC_Handller_TASK+0x4>
				else{
					ACC_ACTION=ACC_CAR_GO;
 8004a10:	4b1d      	ldr	r3, [pc, #116]	; (8004a88 <ACC_Handller_TASK+0x9c>)
 8004a12:	2200      	movs	r2, #0
 8004a14:	701a      	strb	r2, [r3, #0]
 8004a16:	e7eb      	b.n	80049f0 <ACC_Handller_TASK+0x4>
				}

			}else if(((GR_DMS_FLAG_send == DMS_EYES_CLOSED_FORCE_STOP) ||(LUNA_dis <= ACC_distance_stop) )){
 8004a18:	4b1a      	ldr	r3, [pc, #104]	; (8004a84 <ACC_Handller_TASK+0x98>)
 8004a1a:	781b      	ldrb	r3, [r3, #0]
 8004a1c:	2b07      	cmp	r3, #7
 8004a1e:	d005      	beq.n	8004a2c <ACC_Handller_TASK+0x40>
 8004a20:	4b17      	ldr	r3, [pc, #92]	; (8004a80 <ACC_Handller_TASK+0x94>)
 8004a22:	881a      	ldrh	r2, [r3, #0]
 8004a24:	4b19      	ldr	r3, [pc, #100]	; (8004a8c <ACC_Handller_TASK+0xa0>)
 8004a26:	881b      	ldrh	r3, [r3, #0]
 8004a28:	429a      	cmp	r2, r3
 8004a2a:	d803      	bhi.n	8004a34 <ACC_Handller_TASK+0x48>

				ACC_ACTION=ACC_CAR_STOP;
 8004a2c:	4b16      	ldr	r3, [pc, #88]	; (8004a88 <ACC_Handller_TASK+0x9c>)
 8004a2e:	2201      	movs	r2, #1
 8004a30:	701a      	strb	r2, [r3, #0]
 8004a32:	e022      	b.n	8004a7a <ACC_Handller_TASK+0x8e>

			}else if((LUNA_dis > ACC_distance_stop) &&(LUNA_dis <ACC_distance_slowdown)){
 8004a34:	4b12      	ldr	r3, [pc, #72]	; (8004a80 <ACC_Handller_TASK+0x94>)
 8004a36:	881a      	ldrh	r2, [r3, #0]
 8004a38:	4b14      	ldr	r3, [pc, #80]	; (8004a8c <ACC_Handller_TASK+0xa0>)
 8004a3a:	881b      	ldrh	r3, [r3, #0]
 8004a3c:	429a      	cmp	r2, r3
 8004a3e:	d909      	bls.n	8004a54 <ACC_Handller_TASK+0x68>
 8004a40:	4b0f      	ldr	r3, [pc, #60]	; (8004a80 <ACC_Handller_TASK+0x94>)
 8004a42:	881a      	ldrh	r2, [r3, #0]
 8004a44:	4b12      	ldr	r3, [pc, #72]	; (8004a90 <ACC_Handller_TASK+0xa4>)
 8004a46:	881b      	ldrh	r3, [r3, #0]
 8004a48:	429a      	cmp	r2, r3
 8004a4a:	d203      	bcs.n	8004a54 <ACC_Handller_TASK+0x68>
				ACC_ACTION=ACC_CAR_SLOW_DOWN;
 8004a4c:	4b0e      	ldr	r3, [pc, #56]	; (8004a88 <ACC_Handller_TASK+0x9c>)
 8004a4e:	2202      	movs	r2, #2
 8004a50:	701a      	strb	r2, [r3, #0]
 8004a52:	e012      	b.n	8004a7a <ACC_Handller_TASK+0x8e>


			}else{
				ACC_ACTION=ACC_CAR_GO;
 8004a54:	4b0c      	ldr	r3, [pc, #48]	; (8004a88 <ACC_Handller_TASK+0x9c>)
 8004a56:	2200      	movs	r2, #0
 8004a58:	701a      	strb	r2, [r3, #0]
 8004a5a:	e7c9      	b.n	80049f0 <ACC_Handller_TASK+0x4>


		}
		// if the Signal strength indicator not strong dequeue its disance value
		else{
			if(LUNA_dis ==0x00){
 8004a5c:	4b08      	ldr	r3, [pc, #32]	; (8004a80 <ACC_Handller_TASK+0x94>)
 8004a5e:	881b      	ldrh	r3, [r3, #0]
 8004a60:	2b00      	cmp	r3, #0
 8004a62:	d1c5      	bne.n	80049f0 <ACC_Handller_TASK+0x4>
				if(GR_DMS_FLAG_send == DMS_EYES_CLOSED_FORCE_STOP)
 8004a64:	4b07      	ldr	r3, [pc, #28]	; (8004a84 <ACC_Handller_TASK+0x98>)
 8004a66:	781b      	ldrb	r3, [r3, #0]
 8004a68:	2b07      	cmp	r3, #7
 8004a6a:	d103      	bne.n	8004a74 <ACC_Handller_TASK+0x88>
					ACC_ACTION=ACC_CAR_STOP;
 8004a6c:	4b06      	ldr	r3, [pc, #24]	; (8004a88 <ACC_Handller_TASK+0x9c>)
 8004a6e:	2201      	movs	r2, #1
 8004a70:	701a      	strb	r2, [r3, #0]
 8004a72:	e7bd      	b.n	80049f0 <ACC_Handller_TASK+0x4>
				else
					ACC_ACTION=ACC_CAR_GO;
 8004a74:	4b04      	ldr	r3, [pc, #16]	; (8004a88 <ACC_Handller_TASK+0x9c>)
 8004a76:	2200      	movs	r2, #0
 8004a78:	701a      	strb	r2, [r3, #0]
		if((LUNA_AMP>=100) && (LUNA_AMP<=65535) ){
 8004a7a:	e7b9      	b.n	80049f0 <ACC_Handller_TASK+0x4>
 8004a7c:	20003ffa 	.word	0x20003ffa
 8004a80:	20003ff8 	.word	0x20003ff8
 8004a84:	20004238 	.word	0x20004238
 8004a88:	2000004a 	.word	0x2000004a
 8004a8c:	2000004c 	.word	0x2000004c
 8004a90:	2000004e 	.word	0x2000004e

08004a94 <ACC_throttel_Handller_TASK>:
 * @param [out] - Void
 * @retval -
 * Note- ACC_DICIMAL_VAL is a global variable and update every 1ms from ACC_STATE_READ_TASK
 */

void ACC_throttel_Handller_TASK(){
 8004a94:	b580      	push	{r7, lr}
 8004a96:	af00      	add	r7, sp, #0

	while(1){

		if(ACC_ST==ACC_ON){
 8004a98:	4b36      	ldr	r3, [pc, #216]	; (8004b74 <ACC_throttel_Handller_TASK+0xe0>)
 8004a9a:	781b      	ldrb	r3, [r3, #0]
 8004a9c:	2b01      	cmp	r3, #1
 8004a9e:	d13e      	bne.n	8004b1e <ACC_throttel_Handller_TASK+0x8a>
			if(ACC_counter ==0){
 8004aa0:	4b35      	ldr	r3, [pc, #212]	; (8004b78 <ACC_throttel_Handller_TASK+0xe4>)
 8004aa2:	781b      	ldrb	r3, [r3, #0]
 8004aa4:	2b00      	cmp	r3, #0
 8004aa6:	d10e      	bne.n	8004ac6 <ACC_throttel_Handller_TASK+0x32>
				ADC_SAVED=ACC_CONVERT_ADC_TODICMAL(ACC_THROTTEL_DATA);
 8004aa8:	4b34      	ldr	r3, [pc, #208]	; (8004b7c <ACC_throttel_Handller_TASK+0xe8>)
 8004aaa:	881b      	ldrh	r3, [r3, #0]
 8004aac:	4618      	mov	r0, r3
 8004aae:	f7ff fe77 	bl	80047a0 <ACC_CONVERT_ADC_TODICMAL>
 8004ab2:	4603      	mov	r3, r0
 8004ab4:	b29a      	uxth	r2, r3
 8004ab6:	4b32      	ldr	r3, [pc, #200]	; (8004b80 <ACC_throttel_Handller_TASK+0xec>)
 8004ab8:	801a      	strh	r2, [r3, #0]
				ACC_counter++;
 8004aba:	4b2f      	ldr	r3, [pc, #188]	; (8004b78 <ACC_throttel_Handller_TASK+0xe4>)
 8004abc:	781b      	ldrb	r3, [r3, #0]
 8004abe:	3301      	adds	r3, #1
 8004ac0:	b2da      	uxtb	r2, r3
 8004ac2:	4b2d      	ldr	r3, [pc, #180]	; (8004b78 <ACC_throttel_Handller_TASK+0xe4>)
 8004ac4:	701a      	strb	r2, [r3, #0]
			}
			if(ADC_SAVED<=ACC_DICIMAL_VAL){
 8004ac6:	4b2f      	ldr	r3, [pc, #188]	; (8004b84 <ACC_throttel_Handller_TASK+0xf0>)
 8004ac8:	781b      	ldrb	r3, [r3, #0]
 8004aca:	b29a      	uxth	r2, r3
 8004acc:	4b2c      	ldr	r3, [pc, #176]	; (8004b80 <ACC_throttel_Handller_TASK+0xec>)
 8004ace:	881b      	ldrh	r3, [r3, #0]
 8004ad0:	429a      	cmp	r2, r3
 8004ad2:	d306      	bcc.n	8004ae2 <ACC_throttel_Handller_TASK+0x4e>
				ACC_FROM_ADC_TO_DAC(ACC_DICIMAL_VAL);
 8004ad4:	4b2b      	ldr	r3, [pc, #172]	; (8004b84 <ACC_throttel_Handller_TASK+0xf0>)
 8004ad6:	781b      	ldrb	r3, [r3, #0]
 8004ad8:	b29b      	uxth	r3, r3
 8004ada:	4618      	mov	r0, r3
 8004adc:	f7ff ff1a 	bl	8004914 <ACC_FROM_ADC_TO_DAC>
 8004ae0:	e7da      	b.n	8004a98 <ACC_throttel_Handller_TASK+0x4>
			}else{

				if(ACC_ACTION ==ACC_CAR_STOP){
 8004ae2:	4b29      	ldr	r3, [pc, #164]	; (8004b88 <ACC_throttel_Handller_TASK+0xf4>)
 8004ae4:	781b      	ldrb	r3, [r3, #0]
 8004ae6:	2b01      	cmp	r3, #1
 8004ae8:	d103      	bne.n	8004af2 <ACC_throttel_Handller_TASK+0x5e>
					ACC_FROM_ADC_TO_DAC(ACC_DAC_MIN_DECIMAL);
 8004aea:	2040      	movs	r0, #64	; 0x40
 8004aec:	f7ff ff12 	bl	8004914 <ACC_FROM_ADC_TO_DAC>
 8004af0:	e7d2      	b.n	8004a98 <ACC_throttel_Handller_TASK+0x4>
				}else if(ACC_ACTION ==ACC_CAR_SLOW_DOWN){
 8004af2:	4b25      	ldr	r3, [pc, #148]	; (8004b88 <ACC_throttel_Handller_TASK+0xf4>)
 8004af4:	781b      	ldrb	r3, [r3, #0]
 8004af6:	2b02      	cmp	r3, #2
 8004af8:	d107      	bne.n	8004b0a <ACC_throttel_Handller_TASK+0x76>

					ACC_FROM_ADC_TO_DAC((ADC_SAVED/2));
 8004afa:	4b21      	ldr	r3, [pc, #132]	; (8004b80 <ACC_throttel_Handller_TASK+0xec>)
 8004afc:	881b      	ldrh	r3, [r3, #0]
 8004afe:	085b      	lsrs	r3, r3, #1
 8004b00:	b29b      	uxth	r3, r3
 8004b02:	4618      	mov	r0, r3
 8004b04:	f7ff ff06 	bl	8004914 <ACC_FROM_ADC_TO_DAC>
 8004b08:	e7c6      	b.n	8004a98 <ACC_throttel_Handller_TASK+0x4>
				}else if(ACC_ACTION ==ACC_CAR_GO){
 8004b0a:	4b1f      	ldr	r3, [pc, #124]	; (8004b88 <ACC_throttel_Handller_TASK+0xf4>)
 8004b0c:	781b      	ldrb	r3, [r3, #0]
 8004b0e:	2b00      	cmp	r3, #0
 8004b10:	d1c2      	bne.n	8004a98 <ACC_throttel_Handller_TASK+0x4>
					ACC_FROM_ADC_TO_DAC(ADC_SAVED);
 8004b12:	4b1b      	ldr	r3, [pc, #108]	; (8004b80 <ACC_throttel_Handller_TASK+0xec>)
 8004b14:	881b      	ldrh	r3, [r3, #0]
 8004b16:	4618      	mov	r0, r3
 8004b18:	f7ff fefc 	bl	8004914 <ACC_FROM_ADC_TO_DAC>
 8004b1c:	e7bc      	b.n	8004a98 <ACC_throttel_Handller_TASK+0x4>

				}
			}


		}else if(ACC_ST==ACC_OFF){
 8004b1e:	4b15      	ldr	r3, [pc, #84]	; (8004b74 <ACC_throttel_Handller_TASK+0xe0>)
 8004b20:	781b      	ldrb	r3, [r3, #0]
 8004b22:	2b00      	cmp	r3, #0
 8004b24:	d1b8      	bne.n	8004a98 <ACC_throttel_Handller_TASK+0x4>
			ACC_counter=0;
 8004b26:	4b14      	ldr	r3, [pc, #80]	; (8004b78 <ACC_throttel_Handller_TASK+0xe4>)
 8004b28:	2200      	movs	r2, #0
 8004b2a:	701a      	strb	r2, [r3, #0]
			ADC_SAVED=0;
 8004b2c:	4b14      	ldr	r3, [pc, #80]	; (8004b80 <ACC_throttel_Handller_TASK+0xec>)
 8004b2e:	2200      	movs	r2, #0
 8004b30:	801a      	strh	r2, [r3, #0]
			if(ACC_ACTION ==ACC_CAR_STOP){
 8004b32:	4b15      	ldr	r3, [pc, #84]	; (8004b88 <ACC_throttel_Handller_TASK+0xf4>)
 8004b34:	781b      	ldrb	r3, [r3, #0]
 8004b36:	2b01      	cmp	r3, #1
 8004b38:	d103      	bne.n	8004b42 <ACC_throttel_Handller_TASK+0xae>
				ACC_FROM_ADC_TO_DAC(ACC_DAC_MIN_DECIMAL);
 8004b3a:	2040      	movs	r0, #64	; 0x40
 8004b3c:	f7ff feea 	bl	8004914 <ACC_FROM_ADC_TO_DAC>
 8004b40:	e7aa      	b.n	8004a98 <ACC_throttel_Handller_TASK+0x4>
			}else if(ACC_ACTION ==ACC_CAR_SLOW_DOWN){
 8004b42:	4b11      	ldr	r3, [pc, #68]	; (8004b88 <ACC_throttel_Handller_TASK+0xf4>)
 8004b44:	781b      	ldrb	r3, [r3, #0]
 8004b46:	2b02      	cmp	r3, #2
 8004b48:	d108      	bne.n	8004b5c <ACC_throttel_Handller_TASK+0xc8>
				ACC_FROM_ADC_TO_DAC((ACC_DICIMAL_VAL/2));
 8004b4a:	4b0e      	ldr	r3, [pc, #56]	; (8004b84 <ACC_throttel_Handller_TASK+0xf0>)
 8004b4c:	781b      	ldrb	r3, [r3, #0]
 8004b4e:	085b      	lsrs	r3, r3, #1
 8004b50:	b2db      	uxtb	r3, r3
 8004b52:	b29b      	uxth	r3, r3
 8004b54:	4618      	mov	r0, r3
 8004b56:	f7ff fedd 	bl	8004914 <ACC_FROM_ADC_TO_DAC>
 8004b5a:	e79d      	b.n	8004a98 <ACC_throttel_Handller_TASK+0x4>
			}else if(ACC_ACTION ==ACC_CAR_GO){
 8004b5c:	4b0a      	ldr	r3, [pc, #40]	; (8004b88 <ACC_throttel_Handller_TASK+0xf4>)
 8004b5e:	781b      	ldrb	r3, [r3, #0]
 8004b60:	2b00      	cmp	r3, #0
 8004b62:	d199      	bne.n	8004a98 <ACC_throttel_Handller_TASK+0x4>
				ACC_FROM_ADC_TO_DAC(ACC_DICIMAL_VAL);
 8004b64:	4b07      	ldr	r3, [pc, #28]	; (8004b84 <ACC_throttel_Handller_TASK+0xf0>)
 8004b66:	781b      	ldrb	r3, [r3, #0]
 8004b68:	b29b      	uxth	r3, r3
 8004b6a:	4618      	mov	r0, r3
 8004b6c:	f7ff fed2 	bl	8004914 <ACC_FROM_ADC_TO_DAC>
		if(ACC_ST==ACC_ON){
 8004b70:	e792      	b.n	8004a98 <ACC_throttel_Handller_TASK+0x4>
 8004b72:	bf00      	nop
 8004b74:	20004227 	.word	0x20004227
 8004b78:	2000422b 	.word	0x2000422b
 8004b7c:	20004228 	.word	0x20004228
 8004b80:	2000422c 	.word	0x2000422c
 8004b84:	2000422a 	.word	0x2000422a
 8004b88:	2000004a 	.word	0x2000004a

08004b8c <ACC_STATE_READ_TASK>:
 * @param [out] - Void
 * @retval -
 * Note-
 */

void ACC_STATE_READ_TASK(){
 8004b8c:	b580      	push	{r7, lr}
 8004b8e:	af00      	add	r7, sp, #0
	while(1){

		//		LUNA_dist();
		if(MCAL_Read_PIN(ACC_BOTTON_PORT, ACC_BOTTON_PIN)){
 8004b90:	2100      	movs	r1, #0
 8004b92:	4846      	ldr	r0, [pc, #280]	; (8004cac <ACC_STATE_READ_TASK+0x120>)
 8004b94:	f7fe f9ec 	bl	8002f70 <MCAL_Read_PIN>
 8004b98:	4603      	mov	r3, r0
 8004b9a:	2b00      	cmp	r3, #0
 8004b9c:	d00d      	beq.n	8004bba <ACC_STATE_READ_TASK+0x2e>
			_TIM1_delay_ms(30);
 8004b9e:	201e      	movs	r0, #30
 8004ba0:	f7ff fa3e 	bl	8004020 <_TIM1_delay_ms>
			if(MCAL_Read_PIN(ACC_BOTTON_PORT, ACC_BOTTON_PIN)){
 8004ba4:	2100      	movs	r1, #0
 8004ba6:	4841      	ldr	r0, [pc, #260]	; (8004cac <ACC_STATE_READ_TASK+0x120>)
 8004ba8:	f7fe f9e2 	bl	8002f70 <MCAL_Read_PIN>
 8004bac:	4603      	mov	r3, r0
 8004bae:	2b00      	cmp	r3, #0
 8004bb0:	d006      	beq.n	8004bc0 <ACC_STATE_READ_TASK+0x34>
				ACC_ST=1;
 8004bb2:	4b3f      	ldr	r3, [pc, #252]	; (8004cb0 <ACC_STATE_READ_TASK+0x124>)
 8004bb4:	2201      	movs	r2, #1
 8004bb6:	701a      	strb	r2, [r3, #0]
 8004bb8:	e002      	b.n	8004bc0 <ACC_STATE_READ_TASK+0x34>


			}
		}else{
			ACC_ST=0;
 8004bba:	4b3d      	ldr	r3, [pc, #244]	; (8004cb0 <ACC_STATE_READ_TASK+0x124>)
 8004bbc:	2200      	movs	r2, #0
 8004bbe:	701a      	strb	r2, [r3, #0]

		}
		ADC_read(ADC1,ACC_THROTTEL_CHx,&ACC_THROTTEL_DATA);
 8004bc0:	4a3c      	ldr	r2, [pc, #240]	; (8004cb4 <ACC_STATE_READ_TASK+0x128>)
 8004bc2:	2100      	movs	r1, #0
 8004bc4:	483c      	ldr	r0, [pc, #240]	; (8004cb8 <ACC_STATE_READ_TASK+0x12c>)
 8004bc6:	f7fd fb85 	bl	80022d4 <ADC_read>
		if((ACC_THROTTEL_DATA<ACC_TROTTEL_MIN_ADC_VAL) || (GR_DMS_FLAG_send == DMS_EYES_CLOSED_FORCE_STOP)){
 8004bca:	4b3a      	ldr	r3, [pc, #232]	; (8004cb4 <ACC_STATE_READ_TASK+0x128>)
 8004bcc:	881b      	ldrh	r3, [r3, #0]
 8004bce:	f5b3 6f96 	cmp.w	r3, #1200	; 0x4b0
 8004bd2:	d303      	bcc.n	8004bdc <ACC_STATE_READ_TASK+0x50>
 8004bd4:	4b39      	ldr	r3, [pc, #228]	; (8004cbc <ACC_STATE_READ_TASK+0x130>)
 8004bd6:	781b      	ldrb	r3, [r3, #0]
 8004bd8:	2b07      	cmp	r3, #7
 8004bda:	d116      	bne.n	8004c0a <ACC_STATE_READ_TASK+0x7e>
			ACC_DICIMAL_VAL=64;
 8004bdc:	4b38      	ldr	r3, [pc, #224]	; (8004cc0 <ACC_STATE_READ_TASK+0x134>)
 8004bde:	2240      	movs	r2, #64	; 0x40
 8004be0:	701a      	strb	r2, [r3, #0]
			if(ADC_SAVED ==0){
 8004be2:	4b38      	ldr	r3, [pc, #224]	; (8004cc4 <ACC_STATE_READ_TASK+0x138>)
 8004be4:	881b      	ldrh	r3, [r3, #0]
 8004be6:	2b00      	cmp	r3, #0
 8004be8:	d134      	bne.n	8004c54 <ACC_STATE_READ_TASK+0xc8>
			HALL_EFFECT_KM_H=0;
 8004bea:	4b37      	ldr	r3, [pc, #220]	; (8004cc8 <ACC_STATE_READ_TASK+0x13c>)
 8004bec:	2200      	movs	r2, #0
 8004bee:	601a      	str	r2, [r3, #0]
			HALL_EFFECT_N_PULSES=0;
 8004bf0:	4b36      	ldr	r3, [pc, #216]	; (8004ccc <ACC_STATE_READ_TASK+0x140>)
 8004bf2:	2200      	movs	r2, #0
 8004bf4:	601a      	str	r2, [r3, #0]
			HALL_EFFECT_RPS=0;
 8004bf6:	4b36      	ldr	r3, [pc, #216]	; (8004cd0 <ACC_STATE_READ_TASK+0x144>)
 8004bf8:	2200      	movs	r2, #0
 8004bfa:	601a      	str	r2, [r3, #0]
			HALL_EFFECT_RPM=0;
 8004bfc:	4b35      	ldr	r3, [pc, #212]	; (8004cd4 <ACC_STATE_READ_TASK+0x148>)
 8004bfe:	2200      	movs	r2, #0
 8004c00:	601a      	str	r2, [r3, #0]
			DMS_WAIT_COUNTER=1;
 8004c02:	4b35      	ldr	r3, [pc, #212]	; (8004cd8 <ACC_STATE_READ_TASK+0x14c>)
 8004c04:	2201      	movs	r2, #1
 8004c06:	701a      	strb	r2, [r3, #0]
			if(ADC_SAVED ==0){
 8004c08:	e024      	b.n	8004c54 <ACC_STATE_READ_TASK+0xc8>

			}
		}else if(ACC_THROTTEL_DATA>ACC_TROTTEL_Max_ADC_VAL){
 8004c0a:	4b2a      	ldr	r3, [pc, #168]	; (8004cb4 <ACC_STATE_READ_TASK+0x128>)
 8004c0c:	881b      	ldrh	r3, [r3, #0]
 8004c0e:	f640 1206 	movw	r2, #2310	; 0x906
 8004c12:	4293      	cmp	r3, r2
 8004c14:	d906      	bls.n	8004c24 <ACC_STATE_READ_TASK+0x98>
			DMS_WAIT_COUNTER=0;
 8004c16:	4b30      	ldr	r3, [pc, #192]	; (8004cd8 <ACC_STATE_READ_TASK+0x14c>)
 8004c18:	2200      	movs	r2, #0
 8004c1a:	701a      	strb	r2, [r3, #0]
			ACC_DICIMAL_VAL=255;
 8004c1c:	4b28      	ldr	r3, [pc, #160]	; (8004cc0 <ACC_STATE_READ_TASK+0x134>)
 8004c1e:	22ff      	movs	r2, #255	; 0xff
 8004c20:	701a      	strb	r2, [r3, #0]
 8004c22:	e017      	b.n	8004c54 <ACC_STATE_READ_TASK+0xc8>
		else{
			//		uint32_t step1=((uint32_t)(ACC_THROTTEL_DATA-ACC_TROTTEL_MIN_ADC_VAL)*(ACC_DAC_MAX_DECIMAL-ACC_DAC_MIN_DECIMAL)); //884.3
			//		uint32_t step2=(ACC_TROTTEL_Max_ADC_VAL-ACC_TROTTEL_MIN_ADC_VAL);//1539
			//		uint32_t step3=(step1/step2);
			//		ACC_DICIMAL_VAL=step3+ACC_DAC_MIN_DECIMAL;
			ACC_DICIMAL_VAL=((((ACC_THROTTEL_DATA-ACC_TROTTEL_MIN_ADC_VAL)*(ACC_DAC_MAX_DECIMAL-ACC_DAC_MIN_DECIMAL))/(ACC_TROTTEL_Max_ADC_VAL-ACC_TROTTEL_MIN_ADC_VAL))+ACC_DAC_MIN_DECIMAL);
 8004c24:	4b23      	ldr	r3, [pc, #140]	; (8004cb4 <ACC_STATE_READ_TASK+0x128>)
 8004c26:	881b      	ldrh	r3, [r3, #0]
 8004c28:	f5a3 6296 	sub.w	r2, r3, #1200	; 0x4b0
 8004c2c:	4613      	mov	r3, r2
 8004c2e:	005b      	lsls	r3, r3, #1
 8004c30:	4413      	add	r3, r2
 8004c32:	019b      	lsls	r3, r3, #6
 8004c34:	1a9b      	subs	r3, r3, r2
 8004c36:	4a29      	ldr	r2, [pc, #164]	; (8004cdc <ACC_STATE_READ_TASK+0x150>)
 8004c38:	fb82 1203 	smull	r1, r2, r2, r3
 8004c3c:	441a      	add	r2, r3
 8004c3e:	1292      	asrs	r2, r2, #10
 8004c40:	17db      	asrs	r3, r3, #31
 8004c42:	1ad3      	subs	r3, r2, r3
 8004c44:	b2db      	uxtb	r3, r3
 8004c46:	3340      	adds	r3, #64	; 0x40
 8004c48:	b2da      	uxtb	r2, r3
 8004c4a:	4b1d      	ldr	r3, [pc, #116]	; (8004cc0 <ACC_STATE_READ_TASK+0x134>)
 8004c4c:	701a      	strb	r2, [r3, #0]
			DMS_WAIT_COUNTER=0;
 8004c4e:	4b22      	ldr	r3, [pc, #136]	; (8004cd8 <ACC_STATE_READ_TASK+0x14c>)
 8004c50:	2200      	movs	r2, #0
 8004c52:	701a      	strb	r2, [r3, #0]

		}


		if(HALL_EFFECT_KM_H <=10){
 8004c54:	4b1c      	ldr	r3, [pc, #112]	; (8004cc8 <ACC_STATE_READ_TASK+0x13c>)
 8004c56:	681b      	ldr	r3, [r3, #0]
 8004c58:	2b0a      	cmp	r3, #10
 8004c5a:	d807      	bhi.n	8004c6c <ACC_STATE_READ_TASK+0xe0>
			ACC_distance_stop=Distance_SET;
 8004c5c:	4b20      	ldr	r3, [pc, #128]	; (8004ce0 <ACC_STATE_READ_TASK+0x154>)
 8004c5e:	22c8      	movs	r2, #200	; 0xc8
 8004c60:	801a      	strh	r2, [r3, #0]
			ACC_distance_slowdown=MAX_Distance_SET;
 8004c62:	4b20      	ldr	r3, [pc, #128]	; (8004ce4 <ACC_STATE_READ_TASK+0x158>)
 8004c64:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8004c68:	801a      	strh	r2, [r3, #0]
 8004c6a:	e791      	b.n	8004b90 <ACC_STATE_READ_TASK+0x4>
		}else if(HALL_EFFECT_KM_H >10 && HALL_EFFECT_KM_H<=40){
 8004c6c:	4b16      	ldr	r3, [pc, #88]	; (8004cc8 <ACC_STATE_READ_TASK+0x13c>)
 8004c6e:	681b      	ldr	r3, [r3, #0]
 8004c70:	2b0a      	cmp	r3, #10
 8004c72:	d90c      	bls.n	8004c8e <ACC_STATE_READ_TASK+0x102>
 8004c74:	4b14      	ldr	r3, [pc, #80]	; (8004cc8 <ACC_STATE_READ_TASK+0x13c>)
 8004c76:	681b      	ldr	r3, [r3, #0]
 8004c78:	2b28      	cmp	r3, #40	; 0x28
 8004c7a:	d808      	bhi.n	8004c8e <ACC_STATE_READ_TASK+0x102>
			ACC_distance_stop=500;
 8004c7c:	4b18      	ldr	r3, [pc, #96]	; (8004ce0 <ACC_STATE_READ_TASK+0x154>)
 8004c7e:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8004c82:	801a      	strh	r2, [r3, #0]
			ACC_distance_slowdown=700;
 8004c84:	4b17      	ldr	r3, [pc, #92]	; (8004ce4 <ACC_STATE_READ_TASK+0x158>)
 8004c86:	f44f 722f 	mov.w	r2, #700	; 0x2bc
 8004c8a:	801a      	strh	r2, [r3, #0]
 8004c8c:	e00c      	b.n	8004ca8 <ACC_STATE_READ_TASK+0x11c>
		}else if(HALL_EFFECT_KM_H > 60){
 8004c8e:	4b0e      	ldr	r3, [pc, #56]	; (8004cc8 <ACC_STATE_READ_TASK+0x13c>)
 8004c90:	681b      	ldr	r3, [r3, #0]
 8004c92:	2b3c      	cmp	r3, #60	; 0x3c
 8004c94:	f67f af7c 	bls.w	8004b90 <ACC_STATE_READ_TASK+0x4>
			ACC_distance_stop=850;
 8004c98:	4b11      	ldr	r3, [pc, #68]	; (8004ce0 <ACC_STATE_READ_TASK+0x154>)
 8004c9a:	f240 3252 	movw	r2, #850	; 0x352
 8004c9e:	801a      	strh	r2, [r3, #0]
			ACC_distance_slowdown=900;
 8004ca0:	4b10      	ldr	r3, [pc, #64]	; (8004ce4 <ACC_STATE_READ_TASK+0x158>)
 8004ca2:	f44f 7261 	mov.w	r2, #900	; 0x384
 8004ca6:	801a      	strh	r2, [r3, #0]
		if(MCAL_Read_PIN(ACC_BOTTON_PORT, ACC_BOTTON_PIN)){
 8004ca8:	e772      	b.n	8004b90 <ACC_STATE_READ_TASK+0x4>
 8004caa:	bf00      	nop
 8004cac:	40010c00 	.word	0x40010c00
 8004cb0:	20004227 	.word	0x20004227
 8004cb4:	20004228 	.word	0x20004228
 8004cb8:	40012400 	.word	0x40012400
 8004cbc:	20004238 	.word	0x20004238
 8004cc0:	2000422a 	.word	0x2000422a
 8004cc4:	2000422c 	.word	0x2000422c
 8004cc8:	20004218 	.word	0x20004218
 8004ccc:	2000420c 	.word	0x2000420c
 8004cd0:	20004210 	.word	0x20004210
 8004cd4:	20004214 	.word	0x20004214
 8004cd8:	20004233 	.word	0x20004233
 8004cdc:	ec2a6fa1 	.word	0xec2a6fa1
 8004ce0:	2000004c 	.word	0x2000004c
 8004ce4:	2000004e 	.word	0x2000004e

08004ce8 <TFT_Handller_TASK>:
 * @param [out] - Void
 * @retval -
 * Note- it must to change the Priority of this task while sending the data to TFT screen to make sure
 * that there is no data corruption
 */
void TFT_Handller_TASK(){
 8004ce8:	b580      	push	{r7, lr}
 8004cea:	af00      	add	r7, sp, #0
	while(1){
		//	  if(GR_TSR_FLAG_OLED_send !=0x99){
		vTaskPrioritySet(TSR_Handller_TASK_Handle,3);
 8004cec:	4b25      	ldr	r3, [pc, #148]	; (8004d84 <TFT_Handller_TASK+0x9c>)
 8004cee:	681b      	ldr	r3, [r3, #0]
 8004cf0:	2103      	movs	r1, #3
 8004cf2:	4618      	mov	r0, r3
 8004cf4:	f7fb fbf4 	bl	80004e0 <vTaskPrioritySet>
		TFT_send_ACC_image(HALL_EFFECT_KM_H);
 8004cf8:	4b23      	ldr	r3, [pc, #140]	; (8004d88 <TFT_Handller_TASK+0xa0>)
 8004cfa:	681b      	ldr	r3, [r3, #0]
 8004cfc:	b2db      	uxtb	r3, r3
 8004cfe:	4618      	mov	r0, r3
 8004d00:	f7fc ffb6 	bl	8001c70 <TFT_send_ACC_image>
		vTaskPrioritySet(TSR_Handller_TASK_Handle,2);
 8004d04:	4b1f      	ldr	r3, [pc, #124]	; (8004d84 <TFT_Handller_TASK+0x9c>)
 8004d06:	681b      	ldr	r3, [r3, #0]
 8004d08:	2102      	movs	r1, #2
 8004d0a:	4618      	mov	r0, r3
 8004d0c:	f7fb fbe8 	bl	80004e0 <vTaskPrioritySet>

		vTaskPrioritySet(TSR_Handller_TASK_Handle,3);
 8004d10:	4b1c      	ldr	r3, [pc, #112]	; (8004d84 <TFT_Handller_TASK+0x9c>)
 8004d12:	681b      	ldr	r3, [r3, #0]
 8004d14:	2103      	movs	r1, #3
 8004d16:	4618      	mov	r0, r3
 8004d18:	f7fb fbe2 	bl	80004e0 <vTaskPrioritySet>
		TFT_send_TSR_image(GR_TSR_FLAG_OLED_send);
 8004d1c:	4b1b      	ldr	r3, [pc, #108]	; (8004d8c <TFT_Handller_TASK+0xa4>)
 8004d1e:	781b      	ldrb	r3, [r3, #0]
 8004d20:	4618      	mov	r0, r3
 8004d22:	f7fc ff0d 	bl	8001b40 <TFT_send_TSR_image>
		vTaskPrioritySet(TSR_Handller_TASK_Handle,2);
 8004d26:	4b17      	ldr	r3, [pc, #92]	; (8004d84 <TFT_Handller_TASK+0x9c>)
 8004d28:	681b      	ldr	r3, [r3, #0]
 8004d2a:	2102      	movs	r1, #2
 8004d2c:	4618      	mov	r0, r3
 8004d2e:	f7fb fbd7 	bl	80004e0 <vTaskPrioritySet>

		vTaskPrioritySet(TSR_Handller_TASK_Handle,3);
 8004d32:	4b14      	ldr	r3, [pc, #80]	; (8004d84 <TFT_Handller_TASK+0x9c>)
 8004d34:	681b      	ldr	r3, [r3, #0]
 8004d36:	2103      	movs	r1, #3
 8004d38:	4618      	mov	r0, r3
 8004d3a:	f7fb fbd1 	bl	80004e0 <vTaskPrioritySet>
		TFT_cruise_control_ICON_Print(ACC_ST);
 8004d3e:	4b14      	ldr	r3, [pc, #80]	; (8004d90 <TFT_Handller_TASK+0xa8>)
 8004d40:	781b      	ldrb	r3, [r3, #0]
 8004d42:	4618      	mov	r0, r3
 8004d44:	f7fc feb4 	bl	8001ab0 <TFT_cruise_control_ICON_Print>
		vTaskPrioritySet(TSR_Handller_TASK_Handle,2);
 8004d48:	4b0e      	ldr	r3, [pc, #56]	; (8004d84 <TFT_Handller_TASK+0x9c>)
 8004d4a:	681b      	ldr	r3, [r3, #0]
 8004d4c:	2102      	movs	r1, #2
 8004d4e:	4618      	mov	r0, r3
 8004d50:	f7fb fbc6 	bl	80004e0 <vTaskPrioritySet>

		vTaskPrioritySet(TSR_Handller_TASK_Handle,3);
 8004d54:	4b0b      	ldr	r3, [pc, #44]	; (8004d84 <TFT_Handller_TASK+0x9c>)
 8004d56:	681b      	ldr	r3, [r3, #0]
 8004d58:	2103      	movs	r1, #3
 8004d5a:	4618      	mov	r0, r3
 8004d5c:	f7fb fbc0 	bl	80004e0 <vTaskPrioritySet>
		TFT_HOD_ICON_Print(!(DMS_DATA));
 8004d60:	4b0c      	ldr	r3, [pc, #48]	; (8004d94 <TFT_Handller_TASK+0xac>)
 8004d62:	781b      	ldrb	r3, [r3, #0]
 8004d64:	2b00      	cmp	r3, #0
 8004d66:	bf0c      	ite	eq
 8004d68:	2301      	moveq	r3, #1
 8004d6a:	2300      	movne	r3, #0
 8004d6c:	b2db      	uxtb	r3, r3
 8004d6e:	4618      	mov	r0, r3
 8004d70:	f7fc fec2 	bl	8001af8 <TFT_HOD_ICON_Print>
		vTaskPrioritySet(TSR_Handller_TASK_Handle,2);
 8004d74:	4b03      	ldr	r3, [pc, #12]	; (8004d84 <TFT_Handller_TASK+0x9c>)
 8004d76:	681b      	ldr	r3, [r3, #0]
 8004d78:	2102      	movs	r1, #2
 8004d7a:	4618      	mov	r0, r3
 8004d7c:	f7fb fbb0 	bl	80004e0 <vTaskPrioritySet>
		vTaskPrioritySet(TSR_Handller_TASK_Handle,3);
 8004d80:	e7b4      	b.n	8004cec <TFT_Handller_TASK+0x4>
 8004d82:	bf00      	nop
 8004d84:	200042ac 	.word	0x200042ac
 8004d88:	20004218 	.word	0x20004218
 8004d8c:	20000049 	.word	0x20000049
 8004d90:	20004227 	.word	0x20004227
 8004d94:	20004232 	.word	0x20004232

08004d98 <TSR_call_Back>:
 * @param [in] - void
 * @param [out] - Void
 * @retval -
 * Note-
 */
void TSR_call_Back(void){
 8004d98:	b580      	push	{r7, lr}
 8004d9a:	af00      	add	r7, sp, #0
	PC_Uart_Flag=  MCAL_USART_ReciveData(TSR_UART_INSTANT);
 8004d9c:	4894      	ldr	r0, [pc, #592]	; (8004ff0 <TSR_call_Back+0x258>)
 8004d9e:	f7ff faff 	bl	80043a0 <MCAL_USART_ReciveData>
 8004da2:	4603      	mov	r3, r0
 8004da4:	b2da      	uxtb	r2, r3
 8004da6:	4b93      	ldr	r3, [pc, #588]	; (8004ff4 <TSR_call_Back+0x25c>)
 8004da8:	701a      	strb	r2, [r3, #0]



	switch(PC_Uart_Flag){
 8004daa:	4b92      	ldr	r3, [pc, #584]	; (8004ff4 <TSR_call_Back+0x25c>)
 8004dac:	781b      	ldrb	r3, [r3, #0]
 8004dae:	3b23      	subs	r3, #35	; 0x23
 8004db0:	2b1d      	cmp	r3, #29
 8004db2:	d86b      	bhi.n	8004e8c <TSR_call_Back+0xf4>
 8004db4:	a201      	add	r2, pc, #4	; (adr r2, 8004dbc <TSR_call_Back+0x24>)
 8004db6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004dba:	bf00      	nop
 8004dbc:	08004e35 	.word	0x08004e35
 8004dc0:	08004e77 	.word	0x08004e77
 8004dc4:	08004e85 	.word	0x08004e85
 8004dc8:	08004e6f 	.word	0x08004e6f
 8004dcc:	08004e8d 	.word	0x08004e8d
 8004dd0:	08004e8d 	.word	0x08004e8d
 8004dd4:	08004e8d 	.word	0x08004e8d
 8004dd8:	08004e43 	.word	0x08004e43
 8004ddc:	08004e59 	.word	0x08004e59
 8004de0:	08004e8d 	.word	0x08004e8d
 8004de4:	08004e8d 	.word	0x08004e8d
 8004de8:	08004e8d 	.word	0x08004e8d
 8004dec:	08004e4b 	.word	0x08004e4b
 8004df0:	08004e8d 	.word	0x08004e8d
 8004df4:	08004e8d 	.word	0x08004e8d
 8004df8:	08004e8d 	.word	0x08004e8d
 8004dfc:	08004e8d 	.word	0x08004e8d
 8004e00:	08004e8d 	.word	0x08004e8d
 8004e04:	08004e8d 	.word	0x08004e8d
 8004e08:	08004e8d 	.word	0x08004e8d
 8004e0c:	08004e8d 	.word	0x08004e8d
 8004e10:	08004e8d 	.word	0x08004e8d
 8004e14:	08004e8d 	.word	0x08004e8d
 8004e18:	08004e8d 	.word	0x08004e8d
 8004e1c:	08004e8d 	.word	0x08004e8d
 8004e20:	08004e8d 	.word	0x08004e8d
 8004e24:	08004e8d 	.word	0x08004e8d
 8004e28:	08004e8d 	.word	0x08004e8d
 8004e2c:	08004e8d 	.word	0x08004e8d
 8004e30:	08004e61 	.word	0x08004e61
	case '#':
		TSR_START_Flag=1;
 8004e34:	4b70      	ldr	r3, [pc, #448]	; (8004ff8 <TSR_call_Back+0x260>)
 8004e36:	2201      	movs	r2, #1
 8004e38:	701a      	strb	r2, [r3, #0]
		TSR_END_Flag=0;
 8004e3a:	4b70      	ldr	r3, [pc, #448]	; (8004ffc <TSR_call_Back+0x264>)
 8004e3c:	2200      	movs	r2, #0
 8004e3e:	701a      	strb	r2, [r3, #0]
		break;
 8004e40:	e024      	b.n	8004e8c <TSR_call_Back+0xf4>
	case '*':
		TSR_END_Flag=1;
 8004e42:	4b6e      	ldr	r3, [pc, #440]	; (8004ffc <TSR_call_Back+0x264>)
 8004e44:	2201      	movs	r2, #1
 8004e46:	701a      	strb	r2, [r3, #0]
		break;
 8004e48:	e020      	b.n	8004e8c <TSR_call_Back+0xf4>
	case 0x2F:
		FACE_START_Flag=1;
 8004e4a:	4b6d      	ldr	r3, [pc, #436]	; (8005000 <TSR_call_Back+0x268>)
 8004e4c:	2201      	movs	r2, #1
 8004e4e:	701a      	strb	r2, [r3, #0]
		FACE_END_Flag=0;
 8004e50:	4b6c      	ldr	r3, [pc, #432]	; (8005004 <TSR_call_Back+0x26c>)
 8004e52:	2200      	movs	r2, #0
 8004e54:	701a      	strb	r2, [r3, #0]
		break;
 8004e56:	e019      	b.n	8004e8c <TSR_call_Back+0xf4>
	case 0x2B:
		FACE_END_Flag=1;
 8004e58:	4b6a      	ldr	r3, [pc, #424]	; (8005004 <TSR_call_Back+0x26c>)
 8004e5a:	2201      	movs	r2, #1
 8004e5c:	701a      	strb	r2, [r3, #0]
		break;
 8004e5e:	e015      	b.n	8004e8c <TSR_call_Back+0xf4>

	case '@':
		DMS_START_OF_FRAME=1;
 8004e60:	4b69      	ldr	r3, [pc, #420]	; (8005008 <TSR_call_Back+0x270>)
 8004e62:	2201      	movs	r2, #1
 8004e64:	701a      	strb	r2, [r3, #0]
		DMS_END_OF_FRAME=0;
 8004e66:	4b69      	ldr	r3, [pc, #420]	; (800500c <TSR_call_Back+0x274>)
 8004e68:	2200      	movs	r2, #0
 8004e6a:	701a      	strb	r2, [r3, #0]
		break;
 8004e6c:	e00e      	b.n	8004e8c <TSR_call_Back+0xf4>
	case '&':
		DMS_END_OF_FRAME=1;
 8004e6e:	4b67      	ldr	r3, [pc, #412]	; (800500c <TSR_call_Back+0x274>)
 8004e70:	2201      	movs	r2, #1
 8004e72:	701a      	strb	r2, [r3, #0]
		break;
 8004e74:	e00a      	b.n	8004e8c <TSR_call_Back+0xf4>
	case GESTURE_START_OF_FRAME:

		vGESTURE_START_OF_FRAME=1;
 8004e76:	4b66      	ldr	r3, [pc, #408]	; (8005010 <TSR_call_Back+0x278>)
 8004e78:	2201      	movs	r2, #1
 8004e7a:	701a      	strb	r2, [r3, #0]
		vGESTURE_END_OF_FRAME=0;
 8004e7c:	4b65      	ldr	r3, [pc, #404]	; (8005014 <TSR_call_Back+0x27c>)
 8004e7e:	2200      	movs	r2, #0
 8004e80:	701a      	strb	r2, [r3, #0]
		break;
 8004e82:	e003      	b.n	8004e8c <TSR_call_Back+0xf4>
	case GESTURE_END_OF_FRAME:
		vGESTURE_END_OF_FRAME=1;
 8004e84:	4b63      	ldr	r3, [pc, #396]	; (8005014 <TSR_call_Back+0x27c>)
 8004e86:	2201      	movs	r2, #1
 8004e88:	701a      	strb	r2, [r3, #0]
			break;
 8004e8a:	bf00      	nop

	////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////

	if (FACE_START_Flag){
 8004e8c:	4b5c      	ldr	r3, [pc, #368]	; (8005000 <TSR_call_Back+0x268>)
 8004e8e:	781b      	ldrb	r3, [r3, #0]
 8004e90:	2b00      	cmp	r3, #0
 8004e92:	d043      	beq.n	8004f1c <TSR_call_Back+0x184>
		if(PC_Counter ==0)
 8004e94:	4b60      	ldr	r3, [pc, #384]	; (8005018 <TSR_call_Back+0x280>)
 8004e96:	781b      	ldrb	r3, [r3, #0]
 8004e98:	2b00      	cmp	r3, #0
 8004e9a:	d102      	bne.n	8004ea2 <TSR_call_Back+0x10a>
			PC_Uart_Flag=0;
 8004e9c:	4b55      	ldr	r3, [pc, #340]	; (8004ff4 <TSR_call_Back+0x25c>)
 8004e9e:	2200      	movs	r2, #0
 8004ea0:	701a      	strb	r2, [r3, #0]

		if(FACE_END_Flag ==0){
 8004ea2:	4b58      	ldr	r3, [pc, #352]	; (8005004 <TSR_call_Back+0x26c>)
 8004ea4:	781b      	ldrb	r3, [r3, #0]
 8004ea6:	2b00      	cmp	r3, #0
 8004ea8:	d112      	bne.n	8004ed0 <TSR_call_Back+0x138>
			GR_FACE_FLAG_ = (GR_FACE_FLAG_<<8)| PC_Uart_Flag;
 8004eaa:	4b5c      	ldr	r3, [pc, #368]	; (800501c <TSR_call_Back+0x284>)
 8004eac:	881b      	ldrh	r3, [r3, #0]
 8004eae:	021b      	lsls	r3, r3, #8
 8004eb0:	b21a      	sxth	r2, r3
 8004eb2:	4b50      	ldr	r3, [pc, #320]	; (8004ff4 <TSR_call_Back+0x25c>)
 8004eb4:	781b      	ldrb	r3, [r3, #0]
 8004eb6:	b21b      	sxth	r3, r3
 8004eb8:	4313      	orrs	r3, r2
 8004eba:	b21b      	sxth	r3, r3
 8004ebc:	b29a      	uxth	r2, r3
 8004ebe:	4b57      	ldr	r3, [pc, #348]	; (800501c <TSR_call_Back+0x284>)
 8004ec0:	801a      	strh	r2, [r3, #0]
			PC_Counter++;
 8004ec2:	4b55      	ldr	r3, [pc, #340]	; (8005018 <TSR_call_Back+0x280>)
 8004ec4:	781b      	ldrb	r3, [r3, #0]
 8004ec6:	3301      	adds	r3, #1
 8004ec8:	b2da      	uxtb	r2, r3
 8004eca:	4b53      	ldr	r3, [pc, #332]	; (8005018 <TSR_call_Back+0x280>)
 8004ecc:	701a      	strb	r2, [r3, #0]
 8004ece:	e025      	b.n	8004f1c <TSR_call_Back+0x184>
			 * 0x0000 | 0x2F =0x
			 *
			 * */

		}else{
			GR_FACE_FLAG_ &=0x0F0F;
 8004ed0:	4b52      	ldr	r3, [pc, #328]	; (800501c <TSR_call_Back+0x284>)
 8004ed2:	881a      	ldrh	r2, [r3, #0]
 8004ed4:	f640 730f 	movw	r3, #3855	; 0xf0f
 8004ed8:	4013      	ands	r3, r2
 8004eda:	b29a      	uxth	r2, r3
 8004edc:	4b4f      	ldr	r3, [pc, #316]	; (800501c <TSR_call_Back+0x284>)
 8004ede:	801a      	strh	r2, [r3, #0]
			GR_FACE_FLAG_send = ((GR_FACE_FLAG_ &0x0F00)>>4) |((GR_FACE_FLAG_&0x000F));
 8004ee0:	4b4e      	ldr	r3, [pc, #312]	; (800501c <TSR_call_Back+0x284>)
 8004ee2:	881b      	ldrh	r3, [r3, #0]
 8004ee4:	111b      	asrs	r3, r3, #4
 8004ee6:	b25b      	sxtb	r3, r3
 8004ee8:	f023 030f 	bic.w	r3, r3, #15
 8004eec:	b25a      	sxtb	r2, r3
 8004eee:	4b4b      	ldr	r3, [pc, #300]	; (800501c <TSR_call_Back+0x284>)
 8004ef0:	881b      	ldrh	r3, [r3, #0]
 8004ef2:	b25b      	sxtb	r3, r3
 8004ef4:	f003 030f 	and.w	r3, r3, #15
 8004ef8:	b25b      	sxtb	r3, r3
 8004efa:	4313      	orrs	r3, r2
 8004efc:	b25b      	sxtb	r3, r3
 8004efe:	b2da      	uxtb	r2, r3
 8004f00:	4b47      	ldr	r3, [pc, #284]	; (8005020 <TSR_call_Back+0x288>)
 8004f02:	701a      	strb	r2, [r3, #0]
			GR_FACE_FLAG_=0;
 8004f04:	4b45      	ldr	r3, [pc, #276]	; (800501c <TSR_call_Back+0x284>)
 8004f06:	2200      	movs	r2, #0
 8004f08:	801a      	strh	r2, [r3, #0]

			///////////////
			FACE_START_Flag=0;
 8004f0a:	4b3d      	ldr	r3, [pc, #244]	; (8005000 <TSR_call_Back+0x268>)
 8004f0c:	2200      	movs	r2, #0
 8004f0e:	701a      	strb	r2, [r3, #0]
			FACE_END_Flag=0;
 8004f10:	4b3c      	ldr	r3, [pc, #240]	; (8005004 <TSR_call_Back+0x26c>)
 8004f12:	2200      	movs	r2, #0
 8004f14:	701a      	strb	r2, [r3, #0]
			PC_Counter=0;
 8004f16:	4b40      	ldr	r3, [pc, #256]	; (8005018 <TSR_call_Back+0x280>)
 8004f18:	2200      	movs	r2, #0
 8004f1a:	701a      	strb	r2, [r3, #0]
		}
	}
	////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////
	if(TSR_START_Flag){
 8004f1c:	4b36      	ldr	r3, [pc, #216]	; (8004ff8 <TSR_call_Back+0x260>)
 8004f1e:	781b      	ldrb	r3, [r3, #0]
 8004f20:	2b00      	cmp	r3, #0
 8004f22:	d043      	beq.n	8004fac <TSR_call_Back+0x214>
		if(PC_Counter ==0)
 8004f24:	4b3c      	ldr	r3, [pc, #240]	; (8005018 <TSR_call_Back+0x280>)
 8004f26:	781b      	ldrb	r3, [r3, #0]
 8004f28:	2b00      	cmp	r3, #0
 8004f2a:	d102      	bne.n	8004f32 <TSR_call_Back+0x19a>
			PC_Uart_Flag=0;
 8004f2c:	4b31      	ldr	r3, [pc, #196]	; (8004ff4 <TSR_call_Back+0x25c>)
 8004f2e:	2200      	movs	r2, #0
 8004f30:	701a      	strb	r2, [r3, #0]

		if(TSR_END_Flag ==0){
 8004f32:	4b32      	ldr	r3, [pc, #200]	; (8004ffc <TSR_call_Back+0x264>)
 8004f34:	781b      	ldrb	r3, [r3, #0]
 8004f36:	2b00      	cmp	r3, #0
 8004f38:	d112      	bne.n	8004f60 <TSR_call_Back+0x1c8>
			GR_TSR_FLAG_OLED = (GR_TSR_FLAG_OLED<<8)| PC_Uart_Flag;
 8004f3a:	4b3a      	ldr	r3, [pc, #232]	; (8005024 <TSR_call_Back+0x28c>)
 8004f3c:	881b      	ldrh	r3, [r3, #0]
 8004f3e:	021b      	lsls	r3, r3, #8
 8004f40:	b21a      	sxth	r2, r3
 8004f42:	4b2c      	ldr	r3, [pc, #176]	; (8004ff4 <TSR_call_Back+0x25c>)
 8004f44:	781b      	ldrb	r3, [r3, #0]
 8004f46:	b21b      	sxth	r3, r3
 8004f48:	4313      	orrs	r3, r2
 8004f4a:	b21b      	sxth	r3, r3
 8004f4c:	b29a      	uxth	r2, r3
 8004f4e:	4b35      	ldr	r3, [pc, #212]	; (8005024 <TSR_call_Back+0x28c>)
 8004f50:	801a      	strh	r2, [r3, #0]
			PC_Counter++;
 8004f52:	4b31      	ldr	r3, [pc, #196]	; (8005018 <TSR_call_Back+0x280>)
 8004f54:	781b      	ldrb	r3, [r3, #0]
 8004f56:	3301      	adds	r3, #1
 8004f58:	b2da      	uxtb	r2, r3
 8004f5a:	4b2f      	ldr	r3, [pc, #188]	; (8005018 <TSR_call_Back+0x280>)
 8004f5c:	701a      	strb	r2, [r3, #0]
 8004f5e:	e025      	b.n	8004fac <TSR_call_Back+0x214>


		}else{
			GR_TSR_FLAG_OLED &=0x0F0F;
 8004f60:	4b30      	ldr	r3, [pc, #192]	; (8005024 <TSR_call_Back+0x28c>)
 8004f62:	881a      	ldrh	r2, [r3, #0]
 8004f64:	f640 730f 	movw	r3, #3855	; 0xf0f
 8004f68:	4013      	ands	r3, r2
 8004f6a:	b29a      	uxth	r2, r3
 8004f6c:	4b2d      	ldr	r3, [pc, #180]	; (8005024 <TSR_call_Back+0x28c>)
 8004f6e:	801a      	strh	r2, [r3, #0]
			GR_TSR_FLAG_OLED_send = ((GR_TSR_FLAG_OLED &0x0F00)>>4) |((GR_TSR_FLAG_OLED&0x000F));
 8004f70:	4b2c      	ldr	r3, [pc, #176]	; (8005024 <TSR_call_Back+0x28c>)
 8004f72:	881b      	ldrh	r3, [r3, #0]
 8004f74:	111b      	asrs	r3, r3, #4
 8004f76:	b25b      	sxtb	r3, r3
 8004f78:	f023 030f 	bic.w	r3, r3, #15
 8004f7c:	b25a      	sxtb	r2, r3
 8004f7e:	4b29      	ldr	r3, [pc, #164]	; (8005024 <TSR_call_Back+0x28c>)
 8004f80:	881b      	ldrh	r3, [r3, #0]
 8004f82:	b25b      	sxtb	r3, r3
 8004f84:	f003 030f 	and.w	r3, r3, #15
 8004f88:	b25b      	sxtb	r3, r3
 8004f8a:	4313      	orrs	r3, r2
 8004f8c:	b25b      	sxtb	r3, r3
 8004f8e:	b2da      	uxtb	r2, r3
 8004f90:	4b25      	ldr	r3, [pc, #148]	; (8005028 <TSR_call_Back+0x290>)
 8004f92:	701a      	strb	r2, [r3, #0]
			GR_TSR_FLAG_OLED=0;
 8004f94:	4b23      	ldr	r3, [pc, #140]	; (8005024 <TSR_call_Back+0x28c>)
 8004f96:	2200      	movs	r2, #0
 8004f98:	801a      	strh	r2, [r3, #0]
			///////////////
			TSR_END_Flag=0;
 8004f9a:	4b18      	ldr	r3, [pc, #96]	; (8004ffc <TSR_call_Back+0x264>)
 8004f9c:	2200      	movs	r2, #0
 8004f9e:	701a      	strb	r2, [r3, #0]
			TSR_START_Flag=0;
 8004fa0:	4b15      	ldr	r3, [pc, #84]	; (8004ff8 <TSR_call_Back+0x260>)
 8004fa2:	2200      	movs	r2, #0
 8004fa4:	701a      	strb	r2, [r3, #0]
			PC_Counter=0;
 8004fa6:	4b1c      	ldr	r3, [pc, #112]	; (8005018 <TSR_call_Back+0x280>)
 8004fa8:	2200      	movs	r2, #0
 8004faa:	701a      	strb	r2, [r3, #0]
		}
	}
	////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////
	if(DMS_START_OF_FRAME){
 8004fac:	4b16      	ldr	r3, [pc, #88]	; (8005008 <TSR_call_Back+0x270>)
 8004fae:	781b      	ldrb	r3, [r3, #0]
 8004fb0:	2b00      	cmp	r3, #0
 8004fb2:	d063      	beq.n	800507c <TSR_call_Back+0x2e4>
		if(PC_Counter ==0)
 8004fb4:	4b18      	ldr	r3, [pc, #96]	; (8005018 <TSR_call_Back+0x280>)
 8004fb6:	781b      	ldrb	r3, [r3, #0]
 8004fb8:	2b00      	cmp	r3, #0
 8004fba:	d102      	bne.n	8004fc2 <TSR_call_Back+0x22a>
			PC_Uart_Flag=0;
 8004fbc:	4b0d      	ldr	r3, [pc, #52]	; (8004ff4 <TSR_call_Back+0x25c>)
 8004fbe:	2200      	movs	r2, #0
 8004fc0:	701a      	strb	r2, [r3, #0]

		if(DMS_END_OF_FRAME ==0){
 8004fc2:	4b12      	ldr	r3, [pc, #72]	; (800500c <TSR_call_Back+0x274>)
 8004fc4:	781b      	ldrb	r3, [r3, #0]
 8004fc6:	2b00      	cmp	r3, #0
 8004fc8:	d132      	bne.n	8005030 <TSR_call_Back+0x298>
			GR_DMS_FLAG_ = (GR_DMS_FLAG_<<8)| PC_Uart_Flag;
 8004fca:	4b18      	ldr	r3, [pc, #96]	; (800502c <TSR_call_Back+0x294>)
 8004fcc:	881b      	ldrh	r3, [r3, #0]
 8004fce:	021b      	lsls	r3, r3, #8
 8004fd0:	b21a      	sxth	r2, r3
 8004fd2:	4b08      	ldr	r3, [pc, #32]	; (8004ff4 <TSR_call_Back+0x25c>)
 8004fd4:	781b      	ldrb	r3, [r3, #0]
 8004fd6:	b21b      	sxth	r3, r3
 8004fd8:	4313      	orrs	r3, r2
 8004fda:	b21b      	sxth	r3, r3
 8004fdc:	b29a      	uxth	r2, r3
 8004fde:	4b13      	ldr	r3, [pc, #76]	; (800502c <TSR_call_Back+0x294>)
 8004fe0:	801a      	strh	r2, [r3, #0]
			PC_Counter++;
 8004fe2:	4b0d      	ldr	r3, [pc, #52]	; (8005018 <TSR_call_Back+0x280>)
 8004fe4:	781b      	ldrb	r3, [r3, #0]
 8004fe6:	3301      	adds	r3, #1
 8004fe8:	b2da      	uxtb	r2, r3
 8004fea:	4b0b      	ldr	r3, [pc, #44]	; (8005018 <TSR_call_Back+0x280>)
 8004fec:	701a      	strb	r2, [r3, #0]
 8004fee:	e045      	b.n	800507c <TSR_call_Back+0x2e4>
 8004ff0:	40013800 	.word	0x40013800
 8004ff4:	2000421f 	.word	0x2000421f
 8004ff8:	20004220 	.word	0x20004220
 8004ffc:	20004221 	.word	0x20004221
 8005000:	20004222 	.word	0x20004222
 8005004:	20004223 	.word	0x20004223
 8005008:	20004234 	.word	0x20004234
 800500c:	20004235 	.word	0x20004235
 8005010:	20004200 	.word	0x20004200
 8005014:	20004201 	.word	0x20004201
 8005018:	2000421e 	.word	0x2000421e
 800501c:	20004224 	.word	0x20004224
 8005020:	20004226 	.word	0x20004226
 8005024:	2000421c 	.word	0x2000421c
 8005028:	20000049 	.word	0x20000049
 800502c:	20004236 	.word	0x20004236


		}else{
			GR_DMS_FLAG_ &=0x0F0F;
 8005030:	4b37      	ldr	r3, [pc, #220]	; (8005110 <TSR_call_Back+0x378>)
 8005032:	881a      	ldrh	r2, [r3, #0]
 8005034:	f640 730f 	movw	r3, #3855	; 0xf0f
 8005038:	4013      	ands	r3, r2
 800503a:	b29a      	uxth	r2, r3
 800503c:	4b34      	ldr	r3, [pc, #208]	; (8005110 <TSR_call_Back+0x378>)
 800503e:	801a      	strh	r2, [r3, #0]
			GR_DMS_FLAG_send = ((GR_DMS_FLAG_ &0x0F00)>>4) |((GR_DMS_FLAG_&0x000F));
 8005040:	4b33      	ldr	r3, [pc, #204]	; (8005110 <TSR_call_Back+0x378>)
 8005042:	881b      	ldrh	r3, [r3, #0]
 8005044:	111b      	asrs	r3, r3, #4
 8005046:	b25b      	sxtb	r3, r3
 8005048:	f023 030f 	bic.w	r3, r3, #15
 800504c:	b25a      	sxtb	r2, r3
 800504e:	4b30      	ldr	r3, [pc, #192]	; (8005110 <TSR_call_Back+0x378>)
 8005050:	881b      	ldrh	r3, [r3, #0]
 8005052:	b25b      	sxtb	r3, r3
 8005054:	f003 030f 	and.w	r3, r3, #15
 8005058:	b25b      	sxtb	r3, r3
 800505a:	4313      	orrs	r3, r2
 800505c:	b25b      	sxtb	r3, r3
 800505e:	b2da      	uxtb	r2, r3
 8005060:	4b2c      	ldr	r3, [pc, #176]	; (8005114 <TSR_call_Back+0x37c>)
 8005062:	701a      	strb	r2, [r3, #0]
			GR_DMS_FLAG_=0;
 8005064:	4b2a      	ldr	r3, [pc, #168]	; (8005110 <TSR_call_Back+0x378>)
 8005066:	2200      	movs	r2, #0
 8005068:	801a      	strh	r2, [r3, #0]
//			MCAL_USART_SendData(TSR_UART_INSTANT, GR_DMS_FLAG_send);
			///////////////
			DMS_START_OF_FRAME=0;
 800506a:	4b2b      	ldr	r3, [pc, #172]	; (8005118 <TSR_call_Back+0x380>)
 800506c:	2200      	movs	r2, #0
 800506e:	701a      	strb	r2, [r3, #0]
			DMS_END_OF_FRAME=0;
 8005070:	4b2a      	ldr	r3, [pc, #168]	; (800511c <TSR_call_Back+0x384>)
 8005072:	2200      	movs	r2, #0
 8005074:	701a      	strb	r2, [r3, #0]
			PC_Counter=0;
 8005076:	4b2a      	ldr	r3, [pc, #168]	; (8005120 <TSR_call_Back+0x388>)
 8005078:	2200      	movs	r2, #0
 800507a:	701a      	strb	r2, [r3, #0]
	}
	////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////

	if(vGESTURE_START_OF_FRAME){
 800507c:	4b29      	ldr	r3, [pc, #164]	; (8005124 <TSR_call_Back+0x38c>)
 800507e:	781b      	ldrb	r3, [r3, #0]
 8005080:	2b00      	cmp	r3, #0
 8005082:	d043      	beq.n	800510c <TSR_call_Back+0x374>
		if(PC_Counter ==0)
 8005084:	4b26      	ldr	r3, [pc, #152]	; (8005120 <TSR_call_Back+0x388>)
 8005086:	781b      	ldrb	r3, [r3, #0]
 8005088:	2b00      	cmp	r3, #0
 800508a:	d102      	bne.n	8005092 <TSR_call_Back+0x2fa>
			PC_Uart_Flag=0;
 800508c:	4b26      	ldr	r3, [pc, #152]	; (8005128 <TSR_call_Back+0x390>)
 800508e:	2200      	movs	r2, #0
 8005090:	701a      	strb	r2, [r3, #0]

		if(vGESTURE_END_OF_FRAME ==0){
 8005092:	4b26      	ldr	r3, [pc, #152]	; (800512c <TSR_call_Back+0x394>)
 8005094:	781b      	ldrb	r3, [r3, #0]
 8005096:	2b00      	cmp	r3, #0
 8005098:	d112      	bne.n	80050c0 <TSR_call_Back+0x328>
			GR_GESTURE_FLAG_ = (GR_GESTURE_FLAG_<<8)| PC_Uart_Flag;
 800509a:	4b25      	ldr	r3, [pc, #148]	; (8005130 <TSR_call_Back+0x398>)
 800509c:	881b      	ldrh	r3, [r3, #0]
 800509e:	021b      	lsls	r3, r3, #8
 80050a0:	b21a      	sxth	r2, r3
 80050a2:	4b21      	ldr	r3, [pc, #132]	; (8005128 <TSR_call_Back+0x390>)
 80050a4:	781b      	ldrb	r3, [r3, #0]
 80050a6:	b21b      	sxth	r3, r3
 80050a8:	4313      	orrs	r3, r2
 80050aa:	b21b      	sxth	r3, r3
 80050ac:	b29a      	uxth	r2, r3
 80050ae:	4b20      	ldr	r3, [pc, #128]	; (8005130 <TSR_call_Back+0x398>)
 80050b0:	801a      	strh	r2, [r3, #0]
			PC_Counter++;
 80050b2:	4b1b      	ldr	r3, [pc, #108]	; (8005120 <TSR_call_Back+0x388>)
 80050b4:	781b      	ldrb	r3, [r3, #0]
 80050b6:	3301      	adds	r3, #1
 80050b8:	b2da      	uxtb	r2, r3
 80050ba:	4b19      	ldr	r3, [pc, #100]	; (8005120 <TSR_call_Back+0x388>)
 80050bc:	701a      	strb	r2, [r3, #0]





}
 80050be:	e025      	b.n	800510c <TSR_call_Back+0x374>
			GR_GESTURE_FLAG_ &=0x0F0F;
 80050c0:	4b1b      	ldr	r3, [pc, #108]	; (8005130 <TSR_call_Back+0x398>)
 80050c2:	881a      	ldrh	r2, [r3, #0]
 80050c4:	f640 730f 	movw	r3, #3855	; 0xf0f
 80050c8:	4013      	ands	r3, r2
 80050ca:	b29a      	uxth	r2, r3
 80050cc:	4b18      	ldr	r3, [pc, #96]	; (8005130 <TSR_call_Back+0x398>)
 80050ce:	801a      	strh	r2, [r3, #0]
			GR_GESTURE_FLAG_send = ((GR_GESTURE_FLAG_ &0x0F00)>>4) |((GR_GESTURE_FLAG_&0x000F));
 80050d0:	4b17      	ldr	r3, [pc, #92]	; (8005130 <TSR_call_Back+0x398>)
 80050d2:	881b      	ldrh	r3, [r3, #0]
 80050d4:	111b      	asrs	r3, r3, #4
 80050d6:	b25b      	sxtb	r3, r3
 80050d8:	f023 030f 	bic.w	r3, r3, #15
 80050dc:	b25a      	sxtb	r2, r3
 80050de:	4b14      	ldr	r3, [pc, #80]	; (8005130 <TSR_call_Back+0x398>)
 80050e0:	881b      	ldrh	r3, [r3, #0]
 80050e2:	b25b      	sxtb	r3, r3
 80050e4:	f003 030f 	and.w	r3, r3, #15
 80050e8:	b25b      	sxtb	r3, r3
 80050ea:	4313      	orrs	r3, r2
 80050ec:	b25b      	sxtb	r3, r3
 80050ee:	b2da      	uxtb	r2, r3
 80050f0:	4b10      	ldr	r3, [pc, #64]	; (8005134 <TSR_call_Back+0x39c>)
 80050f2:	701a      	strb	r2, [r3, #0]
			GR_GESTURE_FLAG_=0;
 80050f4:	4b0e      	ldr	r3, [pc, #56]	; (8005130 <TSR_call_Back+0x398>)
 80050f6:	2200      	movs	r2, #0
 80050f8:	801a      	strh	r2, [r3, #0]
			vGESTURE_START_OF_FRAME=0;
 80050fa:	4b0a      	ldr	r3, [pc, #40]	; (8005124 <TSR_call_Back+0x38c>)
 80050fc:	2200      	movs	r2, #0
 80050fe:	701a      	strb	r2, [r3, #0]
			vGESTURE_END_OF_FRAME=0;
 8005100:	4b0a      	ldr	r3, [pc, #40]	; (800512c <TSR_call_Back+0x394>)
 8005102:	2200      	movs	r2, #0
 8005104:	701a      	strb	r2, [r3, #0]
			PC_Counter=0;
 8005106:	4b06      	ldr	r3, [pc, #24]	; (8005120 <TSR_call_Back+0x388>)
 8005108:	2200      	movs	r2, #0
 800510a:	701a      	strb	r2, [r3, #0]
}
 800510c:	bf00      	nop
 800510e:	bd80      	pop	{r7, pc}
 8005110:	20004236 	.word	0x20004236
 8005114:	20004238 	.word	0x20004238
 8005118:	20004234 	.word	0x20004234
 800511c:	20004235 	.word	0x20004235
 8005120:	2000421e 	.word	0x2000421e
 8005124:	20004200 	.word	0x20004200
 8005128:	2000421f 	.word	0x2000421f
 800512c:	20004201 	.word	0x20004201
 8005130:	20004202 	.word	0x20004202
 8005134:	20004204 	.word	0x20004204

08005138 <TSR_init>:
 * @param [in] - void
 * @param [out] - Void
 * @retval -
 * Note-
 */
void TSR_init(void){
 8005138:	b590      	push	{r4, r7, lr}
 800513a:	b085      	sub	sp, #20
 800513c:	af00      	add	r7, sp, #0
	USART_Config_t UART1_CON={115200,EGHIT_BITS,Parity_DISABLE,Interrupt,ONE_STOP_BIT,Disabled,Asynchronous,TSR_call_Back};
 800513e:	4b07      	ldr	r3, [pc, #28]	; (800515c <TSR_init+0x24>)
 8005140:	463c      	mov	r4, r7
 8005142:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8005144:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	MCAL_USART_init(TSR_UART_INSTANT, &UART1_CON);
 8005148:	463b      	mov	r3, r7
 800514a:	4619      	mov	r1, r3
 800514c:	4804      	ldr	r0, [pc, #16]	; (8005160 <TSR_init+0x28>)
 800514e:	f7fe ff7f 	bl	8004050 <MCAL_USART_init>
}
 8005152:	bf00      	nop
 8005154:	3714      	adds	r7, #20
 8005156:	46bd      	mov	sp, r7
 8005158:	bd90      	pop	{r4, r7, pc}
 800515a:	bf00      	nop
 800515c:	080057bc 	.word	0x080057bc
 8005160:	40013800 	.word	0x40013800

08005164 <CAR_ON_Handler>:
 * @param [in] - void
 * @param [out] - Void
 * @retval -
 * Note-
 */
void CAR_ON_Handler(){
 8005164:	b580      	push	{r7, lr}
 8005166:	b084      	sub	sp, #16
 8005168:	af04      	add	r7, sp, #16
	CAR_login_counter=0;
 800516a:	4b2f      	ldr	r3, [pc, #188]	; (8005228 <CAR_ON_Handler+0xc4>)
 800516c:	2200      	movs	r2, #0
 800516e:	701a      	strb	r2, [r3, #0]
	if((MCAL_Read_PIN(CONTACT_BOTTON_PORT, CONTACT_BOTTON_PIN)==0)  && (GR_GESTURE_FLAG_send !=GESTURE_CAR_ON_FLAG)){
 8005170:	2101      	movs	r1, #1
 8005172:	482e      	ldr	r0, [pc, #184]	; (800522c <CAR_ON_Handler+0xc8>)
 8005174:	f7fd fefc 	bl	8002f70 <MCAL_Read_PIN>
 8005178:	4603      	mov	r3, r0
 800517a:	2b00      	cmp	r3, #0
 800517c:	d150      	bne.n	8005220 <CAR_ON_Handler+0xbc>
 800517e:	4b2c      	ldr	r3, [pc, #176]	; (8005230 <CAR_ON_Handler+0xcc>)
 8005180:	781b      	ldrb	r3, [r3, #0]
 8005182:	2b26      	cmp	r3, #38	; 0x26
 8005184:	d04c      	beq.n	8005220 <CAR_ON_Handler+0xbc>
		_TIM1_delay_ms(30); //depouncing delay
 8005186:	201e      	movs	r0, #30
 8005188:	f7fe ff4a 	bl	8004020 <_TIM1_delay_ms>
		if((MCAL_Read_PIN(CONTACT_BOTTON_PORT, CONTACT_BOTTON_PIN)==0)  && (GR_GESTURE_FLAG_send !=GESTURE_CAR_ON_FLAG)){
 800518c:	2101      	movs	r1, #1
 800518e:	4827      	ldr	r0, [pc, #156]	; (800522c <CAR_ON_Handler+0xc8>)
 8005190:	f7fd feee 	bl	8002f70 <MCAL_Read_PIN>
 8005194:	4603      	mov	r3, r0
 8005196:	2b00      	cmp	r3, #0
 8005198:	d142      	bne.n	8005220 <CAR_ON_Handler+0xbc>
 800519a:	4b25      	ldr	r3, [pc, #148]	; (8005230 <CAR_ON_Handler+0xcc>)
 800519c:	781b      	ldrb	r3, [r3, #0]
 800519e:	2b26      	cmp	r3, #38	; 0x26
 80051a0:	d03e      	beq.n	8005220 <CAR_ON_Handler+0xbc>

			if(CAR_ON_counter ==1 &&GR_FACE_FLAG_send !=0x99&&GR_FACE_FLAG_send !=0x00){
 80051a2:	4b24      	ldr	r3, [pc, #144]	; (8005234 <CAR_ON_Handler+0xd0>)
 80051a4:	781b      	ldrb	r3, [r3, #0]
 80051a6:	2b01      	cmp	r3, #1
 80051a8:	d13a      	bne.n	8005220 <CAR_ON_Handler+0xbc>
 80051aa:	4b23      	ldr	r3, [pc, #140]	; (8005238 <CAR_ON_Handler+0xd4>)
 80051ac:	781b      	ldrb	r3, [r3, #0]
 80051ae:	2b99      	cmp	r3, #153	; 0x99
 80051b0:	d036      	beq.n	8005220 <CAR_ON_Handler+0xbc>
 80051b2:	4b21      	ldr	r3, [pc, #132]	; (8005238 <CAR_ON_Handler+0xd4>)
 80051b4:	781b      	ldrb	r3, [r3, #0]
 80051b6:	2b00      	cmp	r3, #0
 80051b8:	d032      	beq.n	8005220 <CAR_ON_Handler+0xbc>

				CAR_ON_counter=0;
 80051ba:	4b1e      	ldr	r3, [pc, #120]	; (8005234 <CAR_ON_Handler+0xd0>)
 80051bc:	2200      	movs	r2, #0
 80051be:	701a      	strb	r2, [r3, #0]
				GR_FACE_FLAG_send=0;
 80051c0:	4b1d      	ldr	r3, [pc, #116]	; (8005238 <CAR_ON_Handler+0xd4>)
 80051c2:	2200      	movs	r2, #0
 80051c4:	701a      	strb	r2, [r3, #0]
				CAR_login_counter=0;
 80051c6:	4b18      	ldr	r3, [pc, #96]	; (8005228 <CAR_ON_Handler+0xc4>)
 80051c8:	2200      	movs	r2, #0
 80051ca:	701a      	strb	r2, [r3, #0]
				DMS__zero_COUNTER=0;
 80051cc:	4b1b      	ldr	r3, [pc, #108]	; (800523c <CAR_ON_Handler+0xd8>)
 80051ce:	2200      	movs	r2, #0
 80051d0:	701a      	strb	r2, [r3, #0]
				DMS__one_COUNTER=0;
 80051d2:	4b1b      	ldr	r3, [pc, #108]	; (8005240 <CAR_ON_Handler+0xdc>)
 80051d4:	2200      	movs	r2, #0
 80051d6:	701a      	strb	r2, [r3, #0]
				DMS_WAIT_COUNTER=0;
 80051d8:	4b1a      	ldr	r3, [pc, #104]	; (8005244 <CAR_ON_Handler+0xe0>)
 80051da:	2200      	movs	r2, #0
 80051dc:	701a      	strb	r2, [r3, #0]
				GR_GESTURE_FLAG_send=0;
 80051de:	4b14      	ldr	r3, [pc, #80]	; (8005230 <CAR_ON_Handler+0xcc>)
 80051e0:	2200      	movs	r2, #0
 80051e2:	701a      	strb	r2, [r3, #0]
				//UART SEND
				//
				_TIM1_delay_ms(1);
 80051e4:	2001      	movs	r0, #1
 80051e6:	f7fe ff1b 	bl	8004020 <_TIM1_delay_ms>

				ACC_FROM_ADC_TO_DAC(ACC_DAC_MIN_DECIMAL);
 80051ea:	2040      	movs	r0, #64	; 0x40
 80051ec:	f7ff fb92 	bl	8004914 <ACC_FROM_ADC_TO_DAC>
				MCAL_USART_SendData(TSR_UART_INSTANT,CAR_OFF_FLAG);
 80051f0:	2133      	movs	r1, #51	; 0x33
 80051f2:	4815      	ldr	r0, [pc, #84]	; (8005248 <CAR_ON_Handler+0xe4>)
 80051f4:	f7ff f894 	bl	8004320 <MCAL_USART_SendData>
				_TIM1_delay_ms(30);
 80051f8:	201e      	movs	r0, #30
 80051fa:	f7fe ff11 	bl	8004020 <_TIM1_delay_ms>
				TFT_SET_BACKGROUND(0,159,0,127,0xff,0xff,0xff);
 80051fe:	23ff      	movs	r3, #255	; 0xff
 8005200:	9302      	str	r3, [sp, #8]
 8005202:	23ff      	movs	r3, #255	; 0xff
 8005204:	9301      	str	r3, [sp, #4]
 8005206:	23ff      	movs	r3, #255	; 0xff
 8005208:	9300      	str	r3, [sp, #0]
 800520a:	237f      	movs	r3, #127	; 0x7f
 800520c:	2200      	movs	r2, #0
 800520e:	219f      	movs	r1, #159	; 0x9f
 8005210:	2000      	movs	r0, #0
 8005212:	f7fc fb6e 	bl	80018f2 <TFT_SET_BACKGROUND>
				vTaskResume(FACE_ID_TASK_Handle);
 8005216:	4b0d      	ldr	r3, [pc, #52]	; (800524c <CAR_ON_Handler+0xe8>)
 8005218:	681b      	ldr	r3, [r3, #0]
 800521a:	4618      	mov	r0, r3
 800521c:	f7fb fad4 	bl	80007c8 <vTaskResume>
		}

	}


}
 8005220:	bf00      	nop
 8005222:	46bd      	mov	sp, r7
 8005224:	bd80      	pop	{r7, pc}
 8005226:	bf00      	nop
 8005228:	2000422f 	.word	0x2000422f
 800522c:	40010c00 	.word	0x40010c00
 8005230:	20004204 	.word	0x20004204
 8005234:	2000422e 	.word	0x2000422e
 8005238:	20004226 	.word	0x20004226
 800523c:	20004230 	.word	0x20004230
 8005240:	20004231 	.word	0x20004231
 8005244:	20004233 	.word	0x20004233
 8005248:	40013800 	.word	0x40013800
 800524c:	200042a8 	.word	0x200042a8

08005250 <CAR_ON_init>:
 * @param [in] - void
 * @param [out] - Void
 * @retval -
 * Note-
 */
void CAR_ON_init(){
 8005250:	b580      	push	{r7, lr}
 8005252:	b086      	sub	sp, #24
 8005254:	af00      	add	r7, sp, #0
	EXTI_config_t CAR_BOTTON_SITTING={EXT1PB1,FALLING,ENABLE,CAR_ON_Handler};
 8005256:	2301      	movs	r3, #1
 8005258:	80bb      	strh	r3, [r7, #4]
 800525a:	4b0f      	ldr	r3, [pc, #60]	; (8005298 <CAR_ON_init+0x48>)
 800525c:	60bb      	str	r3, [r7, #8]
 800525e:	2301      	movs	r3, #1
 8005260:	81bb      	strh	r3, [r7, #12]
 8005262:	2307      	movs	r3, #7
 8005264:	81fb      	strh	r3, [r7, #14]
 8005266:	2300      	movs	r3, #0
 8005268:	743b      	strb	r3, [r7, #16]
 800526a:	2301      	movs	r3, #1
 800526c:	747b      	strb	r3, [r7, #17]
 800526e:	4b0b      	ldr	r3, [pc, #44]	; (800529c <CAR_ON_init+0x4c>)
 8005270:	617b      	str	r3, [r7, #20]
	MCAL_EXTI_init(&CAR_BOTTON_SITTING);
 8005272:	1d3b      	adds	r3, r7, #4
 8005274:	4618      	mov	r0, r3
 8005276:	f7fd fb61 	bl	800293c <MCAL_EXTI_init>
	PIN_config pin={CONTACT_BOTTON_PIN,INPUT_PD};
 800527a:	2300      	movs	r3, #0
 800527c:	603b      	str	r3, [r7, #0]
 800527e:	2301      	movs	r3, #1
 8005280:	803b      	strh	r3, [r7, #0]
 8005282:	2303      	movs	r3, #3
 8005284:	70bb      	strb	r3, [r7, #2]
	MCAL_GPIO_init(CONTACT_BOTTON_PORT, &pin);
 8005286:	463b      	mov	r3, r7
 8005288:	4619      	mov	r1, r3
 800528a:	4803      	ldr	r0, [pc, #12]	; (8005298 <CAR_ON_init+0x48>)
 800528c:	f7fd fd5e 	bl	8002d4c <MCAL_GPIO_init>
}
 8005290:	bf00      	nop
 8005292:	3718      	adds	r7, #24
 8005294:	46bd      	mov	sp, r7
 8005296:	bd80      	pop	{r7, pc}
 8005298:	40010c00 	.word	0x40010c00
 800529c:	08005165 	.word	0x08005165

080052a0 <FACE_ID_TASK>:
 * @param [in] - void
 * @param [out] - Void
 * @retval -
 * Note-
 */
void FACE_ID_TASK(){
 80052a0:	b580      	push	{r7, lr}
 80052a2:	af00      	add	r7, sp, #0
	while(1){
		//		_TIM1_delay_ms(500);
		if((MCAL_Read_PIN(CONTACT_BOTTON_PORT, CONTACT_BOTTON_PIN)==1) ){
 80052a4:	2101      	movs	r1, #1
 80052a6:	4834      	ldr	r0, [pc, #208]	; (8005378 <FACE_ID_TASK+0xd8>)
 80052a8:	f7fd fe62 	bl	8002f70 <MCAL_Read_PIN>
 80052ac:	4603      	mov	r3, r0
 80052ae:	2b01      	cmp	r3, #1
 80052b0:	d13d      	bne.n	800532e <FACE_ID_TASK+0x8e>
			_TIM1_delay_ms(30); //depouncing delay
 80052b2:	201e      	movs	r0, #30
 80052b4:	f7fe feb4 	bl	8004020 <_TIM1_delay_ms>
			if((MCAL_Read_PIN(CONTACT_BOTTON_PORT, CONTACT_BOTTON_PIN)==1) ){
 80052b8:	2101      	movs	r1, #1
 80052ba:	482f      	ldr	r0, [pc, #188]	; (8005378 <FACE_ID_TASK+0xd8>)
 80052bc:	f7fd fe58 	bl	8002f70 <MCAL_Read_PIN>
 80052c0:	4603      	mov	r3, r0
 80052c2:	2b01      	cmp	r3, #1
 80052c4:	d1ee      	bne.n	80052a4 <FACE_ID_TASK+0x4>
				//UART SEND

				if(CAR_login_counter==0){
 80052c6:	4b2d      	ldr	r3, [pc, #180]	; (800537c <FACE_ID_TASK+0xdc>)
 80052c8:	781b      	ldrb	r3, [r3, #0]
 80052ca:	2b00      	cmp	r3, #0
 80052cc:	d109      	bne.n	80052e2 <FACE_ID_TASK+0x42>
					MCAL_USART_SendData(TSR_UART_INSTANT,CAR_ON_FLAG);
 80052ce:	2122      	movs	r1, #34	; 0x22
 80052d0:	482b      	ldr	r0, [pc, #172]	; (8005380 <FACE_ID_TASK+0xe0>)
 80052d2:	f7ff f825 	bl	8004320 <MCAL_USART_SendData>
					CAR_login_counter++;
 80052d6:	4b29      	ldr	r3, [pc, #164]	; (800537c <FACE_ID_TASK+0xdc>)
 80052d8:	781b      	ldrb	r3, [r3, #0]
 80052da:	3301      	adds	r3, #1
 80052dc:	b2da      	uxtb	r2, r3
 80052de:	4b27      	ldr	r3, [pc, #156]	; (800537c <FACE_ID_TASK+0xdc>)
 80052e0:	701a      	strb	r2, [r3, #0]
				}

//				GR_FACE_FLAG_send =0x98;
				if(GR_FACE_FLAG_send !=0x99 && GR_FACE_FLAG_send !=0x00){
 80052e2:	4b28      	ldr	r3, [pc, #160]	; (8005384 <FACE_ID_TASK+0xe4>)
 80052e4:	781b      	ldrb	r3, [r3, #0]
 80052e6:	2b99      	cmp	r3, #153	; 0x99
 80052e8:	d0dc      	beq.n	80052a4 <FACE_ID_TASK+0x4>
 80052ea:	4b26      	ldr	r3, [pc, #152]	; (8005384 <FACE_ID_TASK+0xe4>)
 80052ec:	781b      	ldrb	r3, [r3, #0]
 80052ee:	2b00      	cmp	r3, #0
 80052f0:	d0d8      	beq.n	80052a4 <FACE_ID_TASK+0x4>
					CAR_ON_counter=1;
 80052f2:	4b25      	ldr	r3, [pc, #148]	; (8005388 <FACE_ID_TASK+0xe8>)
 80052f4:	2201      	movs	r2, #1
 80052f6:	701a      	strb	r2, [r3, #0]
					CAR_login_counter=0;
 80052f8:	4b20      	ldr	r3, [pc, #128]	; (800537c <FACE_ID_TASK+0xdc>)
 80052fa:	2200      	movs	r2, #0
 80052fc:	701a      	strb	r2, [r3, #0]
					GR_GESTURE_FLAG_send=0;
 80052fe:	4b23      	ldr	r3, [pc, #140]	; (800538c <FACE_ID_TASK+0xec>)
 8005300:	2200      	movs	r2, #0
 8005302:	701a      	strb	r2, [r3, #0]
					TFT_Welcome_ICON_Print();
 8005304:	f7fc fb98 	bl	8001a38 <TFT_Welcome_ICON_Print>
					_TIM1_delay_ms(1);
 8005308:	2001      	movs	r0, #1
 800530a:	f7fe fe89 	bl	8004020 <_TIM1_delay_ms>

					TFT_SPEED_ICON_Print();
 800530e:	f7fc fb77 	bl	8001a00 <TFT_SPEED_ICON_Print>
					_TIM1_delay_ms(1);
 8005312:	2001      	movs	r0, #1
 8005314:	f7fe fe84 	bl	8004020 <_TIM1_delay_ms>

					TFT_KM_H_ICON_Print();
 8005318:	f7fc fbba 	bl	8001a90 <TFT_KM_H_ICON_Print>
					_TIM1_delay_ms(1);
 800531c:	2001      	movs	r0, #1
 800531e:	f7fe fe7f 	bl	8004020 <_TIM1_delay_ms>

					vTaskSuspend(FACE_ID_TASK_Handle);
 8005322:	4b1b      	ldr	r3, [pc, #108]	; (8005390 <FACE_ID_TASK+0xf0>)
 8005324:	681b      	ldr	r3, [r3, #0]
 8005326:	4618      	mov	r0, r3
 8005328:	f7fb f99e 	bl	8000668 <vTaskSuspend>
 800532c:	e7ba      	b.n	80052a4 <FACE_ID_TASK+0x4>
					//					vTaskPrioritySet(FACE_ID_TASK_Handle,1);


				}
			}
		}else if(GR_GESTURE_FLAG_send ==GESTURE_CAR_ON_FLAG){
 800532e:	4b17      	ldr	r3, [pc, #92]	; (800538c <FACE_ID_TASK+0xec>)
 8005330:	781b      	ldrb	r3, [r3, #0]
 8005332:	2b26      	cmp	r3, #38	; 0x26
 8005334:	d1b6      	bne.n	80052a4 <FACE_ID_TASK+0x4>

			//				GR_FACE_FLAG_send =0x98;
							if(GR_FACE_FLAG_send !=0x99 && GR_FACE_FLAG_send !=0x00){
 8005336:	4b13      	ldr	r3, [pc, #76]	; (8005384 <FACE_ID_TASK+0xe4>)
 8005338:	781b      	ldrb	r3, [r3, #0]
 800533a:	2b99      	cmp	r3, #153	; 0x99
 800533c:	d0b2      	beq.n	80052a4 <FACE_ID_TASK+0x4>
 800533e:	4b11      	ldr	r3, [pc, #68]	; (8005384 <FACE_ID_TASK+0xe4>)
 8005340:	781b      	ldrb	r3, [r3, #0]
 8005342:	2b00      	cmp	r3, #0
 8005344:	d0ae      	beq.n	80052a4 <FACE_ID_TASK+0x4>

								CAR_ON_counter=1;
 8005346:	4b10      	ldr	r3, [pc, #64]	; (8005388 <FACE_ID_TASK+0xe8>)
 8005348:	2201      	movs	r2, #1
 800534a:	701a      	strb	r2, [r3, #0]

								TFT_Welcome_ICON_Print();
 800534c:	f7fc fb74 	bl	8001a38 <TFT_Welcome_ICON_Print>
								_TIM1_delay_ms(1);
 8005350:	2001      	movs	r0, #1
 8005352:	f7fe fe65 	bl	8004020 <_TIM1_delay_ms>

								TFT_SPEED_ICON_Print();
 8005356:	f7fc fb53 	bl	8001a00 <TFT_SPEED_ICON_Print>
								_TIM1_delay_ms(1);
 800535a:	2001      	movs	r0, #1
 800535c:	f7fe fe60 	bl	8004020 <_TIM1_delay_ms>

								TFT_KM_H_ICON_Print();
 8005360:	f7fc fb96 	bl	8001a90 <TFT_KM_H_ICON_Print>
								_TIM1_delay_ms(1);
 8005364:	2001      	movs	r0, #1
 8005366:	f7fe fe5b 	bl	8004020 <_TIM1_delay_ms>
//								GR_GESTURE_FLAG_send=0;
								vTaskSuspend(FACE_ID_TASK_Handle);
 800536a:	4b09      	ldr	r3, [pc, #36]	; (8005390 <FACE_ID_TASK+0xf0>)
 800536c:	681b      	ldr	r3, [r3, #0]
 800536e:	4618      	mov	r0, r3
 8005370:	f7fb f97a 	bl	8000668 <vTaskSuspend>
		if((MCAL_Read_PIN(CONTACT_BOTTON_PORT, CONTACT_BOTTON_PIN)==1) ){
 8005374:	e796      	b.n	80052a4 <FACE_ID_TASK+0x4>
 8005376:	bf00      	nop
 8005378:	40010c00 	.word	0x40010c00
 800537c:	2000422f 	.word	0x2000422f
 8005380:	40013800 	.word	0x40013800
 8005384:	20004226 	.word	0x20004226
 8005388:	2000422e 	.word	0x2000422e
 800538c:	20004204 	.word	0x20004204
 8005390:	200042a8 	.word	0x200042a8

08005394 <GESTURE_check>:
/***********************************/




void GESTURE_check(){
 8005394:	b580      	push	{r7, lr}
 8005396:	b084      	sub	sp, #16
 8005398:	af04      	add	r7, sp, #16
	while(1){
	if(GR_GESTURE_FLAG_send ==GESTURE_CAR_OFF_FLAG){
 800539a:	4b28      	ldr	r3, [pc, #160]	; (800543c <GESTURE_check+0xa8>)
 800539c:	781b      	ldrb	r3, [r3, #0]
 800539e:	2b27      	cmp	r3, #39	; 0x27
 80053a0:	d1fb      	bne.n	800539a <GESTURE_check+0x6>

		if(CAR_ON_counter ==1 &&GR_FACE_FLAG_send !=0x99&&GR_FACE_FLAG_send !=0x00){
 80053a2:	4b27      	ldr	r3, [pc, #156]	; (8005440 <GESTURE_check+0xac>)
 80053a4:	781b      	ldrb	r3, [r3, #0]
 80053a6:	2b01      	cmp	r3, #1
 80053a8:	d1f7      	bne.n	800539a <GESTURE_check+0x6>
 80053aa:	4b26      	ldr	r3, [pc, #152]	; (8005444 <GESTURE_check+0xb0>)
 80053ac:	781b      	ldrb	r3, [r3, #0]
 80053ae:	2b99      	cmp	r3, #153	; 0x99
 80053b0:	d0f3      	beq.n	800539a <GESTURE_check+0x6>
 80053b2:	4b24      	ldr	r3, [pc, #144]	; (8005444 <GESTURE_check+0xb0>)
 80053b4:	781b      	ldrb	r3, [r3, #0]
 80053b6:	2b00      	cmp	r3, #0
 80053b8:	d0ef      	beq.n	800539a <GESTURE_check+0x6>
			vTaskPrioritySet(GESTURE_check_TASK_Handle,4);
 80053ba:	4b23      	ldr	r3, [pc, #140]	; (8005448 <GESTURE_check+0xb4>)
 80053bc:	681b      	ldr	r3, [r3, #0]
 80053be:	2104      	movs	r1, #4
 80053c0:	4618      	mov	r0, r3
 80053c2:	f7fb f88d 	bl	80004e0 <vTaskPrioritySet>
			CAR_ON_counter=0;
 80053c6:	4b1e      	ldr	r3, [pc, #120]	; (8005440 <GESTURE_check+0xac>)
 80053c8:	2200      	movs	r2, #0
 80053ca:	701a      	strb	r2, [r3, #0]
			GR_FACE_FLAG_send=0;
 80053cc:	4b1d      	ldr	r3, [pc, #116]	; (8005444 <GESTURE_check+0xb0>)
 80053ce:	2200      	movs	r2, #0
 80053d0:	701a      	strb	r2, [r3, #0]
			CAR_login_counter=0;
 80053d2:	4b1e      	ldr	r3, [pc, #120]	; (800544c <GESTURE_check+0xb8>)
 80053d4:	2200      	movs	r2, #0
 80053d6:	701a      	strb	r2, [r3, #0]
			DMS__zero_COUNTER=0;
 80053d8:	4b1d      	ldr	r3, [pc, #116]	; (8005450 <GESTURE_check+0xbc>)
 80053da:	2200      	movs	r2, #0
 80053dc:	701a      	strb	r2, [r3, #0]
			DMS__one_COUNTER=0;
 80053de:	4b1d      	ldr	r3, [pc, #116]	; (8005454 <GESTURE_check+0xc0>)
 80053e0:	2200      	movs	r2, #0
 80053e2:	701a      	strb	r2, [r3, #0]
			DMS_WAIT_COUNTER=0;
 80053e4:	4b1c      	ldr	r3, [pc, #112]	; (8005458 <GESTURE_check+0xc4>)
 80053e6:	2200      	movs	r2, #0
 80053e8:	701a      	strb	r2, [r3, #0]
			GR_GESTURE_FLAG_send=0;
 80053ea:	4b14      	ldr	r3, [pc, #80]	; (800543c <GESTURE_check+0xa8>)
 80053ec:	2200      	movs	r2, #0
 80053ee:	701a      	strb	r2, [r3, #0]
			//UART SEND
			//
			_TIM1_delay_ms(1);
 80053f0:	2001      	movs	r0, #1
 80053f2:	f7fe fe15 	bl	8004020 <_TIM1_delay_ms>

			ACC_FROM_ADC_TO_DAC(ACC_DAC_MIN_DECIMAL);
 80053f6:	2040      	movs	r0, #64	; 0x40
 80053f8:	f7ff fa8c 	bl	8004914 <ACC_FROM_ADC_TO_DAC>
			MCAL_USART_SendData(TSR_UART_INSTANT,CAR_OFF_FLAG);
 80053fc:	2133      	movs	r1, #51	; 0x33
 80053fe:	4817      	ldr	r0, [pc, #92]	; (800545c <GESTURE_check+0xc8>)
 8005400:	f7fe ff8e 	bl	8004320 <MCAL_USART_SendData>
			_TIM1_delay_ms(30);
 8005404:	201e      	movs	r0, #30
 8005406:	f7fe fe0b 	bl	8004020 <_TIM1_delay_ms>
			TFT_SET_BACKGROUND(0,159,0,127,0xff,0xff,0xff);
 800540a:	23ff      	movs	r3, #255	; 0xff
 800540c:	9302      	str	r3, [sp, #8]
 800540e:	23ff      	movs	r3, #255	; 0xff
 8005410:	9301      	str	r3, [sp, #4]
 8005412:	23ff      	movs	r3, #255	; 0xff
 8005414:	9300      	str	r3, [sp, #0]
 8005416:	237f      	movs	r3, #127	; 0x7f
 8005418:	2200      	movs	r2, #0
 800541a:	219f      	movs	r1, #159	; 0x9f
 800541c:	2000      	movs	r0, #0
 800541e:	f7fc fa68 	bl	80018f2 <TFT_SET_BACKGROUND>
			vTaskResume(FACE_ID_TASK_Handle);
 8005422:	4b0f      	ldr	r3, [pc, #60]	; (8005460 <GESTURE_check+0xcc>)
 8005424:	681b      	ldr	r3, [r3, #0]
 8005426:	4618      	mov	r0, r3
 8005428:	f7fb f9ce 	bl	80007c8 <vTaskResume>
			vTaskPrioritySet(GESTURE_check_TASK_Handle,2);
 800542c:	4b06      	ldr	r3, [pc, #24]	; (8005448 <GESTURE_check+0xb4>)
 800542e:	681b      	ldr	r3, [r3, #0]
 8005430:	2102      	movs	r1, #2
 8005432:	4618      	mov	r0, r3
 8005434:	f7fb f854 	bl	80004e0 <vTaskPrioritySet>
	if(GR_GESTURE_FLAG_send ==GESTURE_CAR_OFF_FLAG){
 8005438:	e7af      	b.n	800539a <GESTURE_check+0x6>
 800543a:	bf00      	nop
 800543c:	20004204 	.word	0x20004204
 8005440:	2000422e 	.word	0x2000422e
 8005444:	20004226 	.word	0x20004226
 8005448:	200042b0 	.word	0x200042b0
 800544c:	2000422f 	.word	0x2000422f
 8005450:	20004230 	.word	0x20004230
 8005454:	20004231 	.word	0x20004231
 8005458:	20004233 	.word	0x20004233
 800545c:	40013800 	.word	0x40013800
 8005460:	200042a8 	.word	0x200042a8

08005464 <HW_init>:
 * @retval -
 * Note-
 */


void HW_init(){
 8005464:	b580      	push	{r7, lr}
 8005466:	af00      	add	r7, sp, #0
	Sys_Clk_init();
 8005468:	f7ff f894 	bl	8004594 <Sys_Clk_init>
	_TIM1_delay_ms(100);
 800546c:	2064      	movs	r0, #100	; 0x64
 800546e:	f7fe fdd7 	bl	8004020 <_TIM1_delay_ms>
	////////////*********TFT_init***************//////////////////
	TFT_init(RGB_5_6_5);
 8005472:	2055      	movs	r0, #85	; 0x55
 8005474:	f7fc f924 	bl	80016c0 <TFT_init>
	_TIM1_delay_ms(100);
 8005478:	2064      	movs	r0, #100	; 0x64
 800547a:	f7fe fdd1 	bl	8004020 <_TIM1_delay_ms>

	////////////*********TSR init***************//////////////////
	TSR_init();
 800547e:	f7ff fe5b 	bl	8005138 <TSR_init>
	_TIM1_delay_ms(100);
 8005482:	2064      	movs	r0, #100	; 0x64
 8005484:	f7fe fdcc 	bl	8004020 <_TIM1_delay_ms>

	////////////*********ACC_throtel_init*********//////////////////
	ACC_throtel_init();
 8005488:	f7ff f9b8 	bl	80047fc <ACC_throtel_init>
	_TIM1_delay_ms(100);
 800548c:	2064      	movs	r0, #100	; 0x64
 800548e:	f7fe fdc7 	bl	8004020 <_TIM1_delay_ms>

	////////////*********DAC init***************//////////////////
	ACC_DAC_init();
 8005492:	f7ff f9e3 	bl	800485c <ACC_DAC_init>
	_TIM1_delay_ms(100);
 8005496:	2064      	movs	r0, #100	; 0x64
 8005498:	f7fe fdc2 	bl	8004020 <_TIM1_delay_ms>

	////////////*********DMS_init***************//////////////////
	DMS_init();
 800549c:	f7fb fec4 	bl	8001228 <DMS_init>
	_TIM1_delay_ms(100);
 80054a0:	2064      	movs	r0, #100	; 0x64
 80054a2:	f7fe fdbd 	bl	8004020 <_TIM1_delay_ms>

	////////////*********CAR_ON_init***************//////////////////
	CAR_ON_init();
 80054a6:	f7ff fed3 	bl	8005250 <CAR_ON_init>
	_TIM1_delay_ms(100);
 80054aa:	2064      	movs	r0, #100	; 0x64
 80054ac:	f7fe fdb8 	bl	8004020 <_TIM1_delay_ms>
	////////////*********HALL_EFECT_Init***************//////////////////

	HALL_EFECT_Init();
 80054b0:	f7ff f8e6 	bl	8004680 <HALL_EFECT_Init>
	_TIM1_delay_ms(100);
 80054b4:	2064      	movs	r0, #100	; 0x64
 80054b6:	f7fe fdb3 	bl	8004020 <_TIM1_delay_ms>
	////////////*********LUNA_INIT***************//////////////////
	LUNA_INIT(CONTIOUS_RANGING_MODE,BYTE_9_CM);
 80054ba:	2100      	movs	r1, #0
 80054bc:	2000      	movs	r0, #0
 80054be:	f7fb ffd7 	bl	8001470 <LUNA_INIT>
	_TIM1_delay_ms(100);
 80054c2:	2064      	movs	r0, #100	; 0x64
 80054c4:	f7fe fdac 	bl	8004020 <_TIM1_delay_ms>

}
 80054c8:	bf00      	nop
 80054ca:	bd80      	pop	{r7, pc}

080054cc <main>:
int main(void)
{
 80054cc:	b580      	push	{r7, lr}
 80054ce:	b082      	sub	sp, #8
 80054d0:	af02      	add	r7, sp, #8
	//	_TIM1_delay_s(2);
	HW_init();
 80054d2:	f7ff ffc7 	bl	8005464 <HW_init>

	///////////////////////////
	if(xTaskCreate(ACC_throttel_Handller_TASK,"ACC_throttel_Handller_TASK",256,NULL,2,NULL)!=pdPASS ){
 80054d6:	2300      	movs	r3, #0
 80054d8:	9301      	str	r3, [sp, #4]
 80054da:	2302      	movs	r3, #2
 80054dc:	9300      	str	r3, [sp, #0]
 80054de:	2300      	movs	r3, #0
 80054e0:	f44f 7280 	mov.w	r2, #256	; 0x100
 80054e4:	4936      	ldr	r1, [pc, #216]	; (80055c0 <main+0xf4>)
 80054e6:	4837      	ldr	r0, [pc, #220]	; (80055c4 <main+0xf8>)
 80054e8:	f7fa feb9 	bl	800025e <xTaskCreate>
 80054ec:	4603      	mov	r3, r0
 80054ee:	2b01      	cmp	r3, #1
 80054f0:	d001      	beq.n	80054f6 <main+0x2a>
		Error_Handller();
 80054f2:	f7ff f84b 	bl	800458c <Error_Handller>
	}

	if(xTaskCreate(ACC_Handller_TASK,"ACC_Handller_TASK",256,NULL,2,NULL)!=pdPASS ){
 80054f6:	2300      	movs	r3, #0
 80054f8:	9301      	str	r3, [sp, #4]
 80054fa:	2302      	movs	r3, #2
 80054fc:	9300      	str	r3, [sp, #0]
 80054fe:	2300      	movs	r3, #0
 8005500:	f44f 7280 	mov.w	r2, #256	; 0x100
 8005504:	4930      	ldr	r1, [pc, #192]	; (80055c8 <main+0xfc>)
 8005506:	4831      	ldr	r0, [pc, #196]	; (80055cc <main+0x100>)
 8005508:	f7fa fea9 	bl	800025e <xTaskCreate>
 800550c:	4603      	mov	r3, r0
 800550e:	2b01      	cmp	r3, #1
 8005510:	d001      	beq.n	8005516 <main+0x4a>
		Error_Handller();
 8005512:	f7ff f83b 	bl	800458c <Error_Handller>
	}


	if(xTaskCreate(ACC_STATE_READ_TASK,"BOTTON_READ",256,NULL,2,&ACC_STATE_READ_TASK_Handle)!=pdPASS ){
 8005516:	4b2e      	ldr	r3, [pc, #184]	; (80055d0 <main+0x104>)
 8005518:	9301      	str	r3, [sp, #4]
 800551a:	2302      	movs	r3, #2
 800551c:	9300      	str	r3, [sp, #0]
 800551e:	2300      	movs	r3, #0
 8005520:	f44f 7280 	mov.w	r2, #256	; 0x100
 8005524:	492b      	ldr	r1, [pc, #172]	; (80055d4 <main+0x108>)
 8005526:	482c      	ldr	r0, [pc, #176]	; (80055d8 <main+0x10c>)
 8005528:	f7fa fe99 	bl	800025e <xTaskCreate>
 800552c:	4603      	mov	r3, r0
 800552e:	2b01      	cmp	r3, #1
 8005530:	d001      	beq.n	8005536 <main+0x6a>
		Error_Handller();
 8005532:	f7ff f82b 	bl	800458c <Error_Handller>
	}
	///////////////////////

	if(xTaskCreate(TFT_Handller_TASK,"TFT_Handller_TASK",256,NULL,2,&TSR_Handller_TASK_Handle)!=pdPASS ){
 8005536:	4b29      	ldr	r3, [pc, #164]	; (80055dc <main+0x110>)
 8005538:	9301      	str	r3, [sp, #4]
 800553a:	2302      	movs	r3, #2
 800553c:	9300      	str	r3, [sp, #0]
 800553e:	2300      	movs	r3, #0
 8005540:	f44f 7280 	mov.w	r2, #256	; 0x100
 8005544:	4926      	ldr	r1, [pc, #152]	; (80055e0 <main+0x114>)
 8005546:	4827      	ldr	r0, [pc, #156]	; (80055e4 <main+0x118>)
 8005548:	f7fa fe89 	bl	800025e <xTaskCreate>
 800554c:	4603      	mov	r3, r0
 800554e:	2b01      	cmp	r3, #1
 8005550:	d001      	beq.n	8005556 <main+0x8a>
		Error_Handller();
 8005552:	f7ff f81b 	bl	800458c <Error_Handller>
	}

	///////////////////////

	if(xTaskCreate(DMS_Handller_TASK,"DMS_Handller_TASK",256,NULL,2,NULL)!=pdPASS ){
 8005556:	2300      	movs	r3, #0
 8005558:	9301      	str	r3, [sp, #4]
 800555a:	2302      	movs	r3, #2
 800555c:	9300      	str	r3, [sp, #0]
 800555e:	2300      	movs	r3, #0
 8005560:	f44f 7280 	mov.w	r2, #256	; 0x100
 8005564:	4920      	ldr	r1, [pc, #128]	; (80055e8 <main+0x11c>)
 8005566:	4821      	ldr	r0, [pc, #132]	; (80055ec <main+0x120>)
 8005568:	f7fa fe79 	bl	800025e <xTaskCreate>
 800556c:	4603      	mov	r3, r0
 800556e:	2b01      	cmp	r3, #1
 8005570:	d001      	beq.n	8005576 <main+0xaa>
		Error_Handller();
 8005572:	f7ff f80b 	bl	800458c <Error_Handller>
	}

	if(xTaskCreate(GESTURE_check,"GESTURE_check_TASK",256,NULL,2,GESTURE_check_TASK_Handle)!=pdPASS ){
 8005576:	4b1e      	ldr	r3, [pc, #120]	; (80055f0 <main+0x124>)
 8005578:	681b      	ldr	r3, [r3, #0]
 800557a:	9301      	str	r3, [sp, #4]
 800557c:	2302      	movs	r3, #2
 800557e:	9300      	str	r3, [sp, #0]
 8005580:	2300      	movs	r3, #0
 8005582:	f44f 7280 	mov.w	r2, #256	; 0x100
 8005586:	491b      	ldr	r1, [pc, #108]	; (80055f4 <main+0x128>)
 8005588:	481b      	ldr	r0, [pc, #108]	; (80055f8 <main+0x12c>)
 800558a:	f7fa fe68 	bl	800025e <xTaskCreate>
 800558e:	4603      	mov	r3, r0
 8005590:	2b01      	cmp	r3, #1
 8005592:	d001      	beq.n	8005598 <main+0xcc>
		Error_Handller();
 8005594:	f7fe fffa 	bl	800458c <Error_Handller>
	}
	///////////////////////
	if(xTaskCreate(FACE_ID_TASK,"FACE_ID_TASK",256,NULL,5,&FACE_ID_TASK_Handle)!=pdPASS ){
 8005598:	4b18      	ldr	r3, [pc, #96]	; (80055fc <main+0x130>)
 800559a:	9301      	str	r3, [sp, #4]
 800559c:	2305      	movs	r3, #5
 800559e:	9300      	str	r3, [sp, #0]
 80055a0:	2300      	movs	r3, #0
 80055a2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80055a6:	4916      	ldr	r1, [pc, #88]	; (8005600 <main+0x134>)
 80055a8:	4816      	ldr	r0, [pc, #88]	; (8005604 <main+0x138>)
 80055aa:	f7fa fe58 	bl	800025e <xTaskCreate>
 80055ae:	4603      	mov	r3, r0
 80055b0:	2b01      	cmp	r3, #1
 80055b2:	d001      	beq.n	80055b8 <main+0xec>
		Error_Handller();
 80055b4:	f7fe ffea 	bl	800458c <Error_Handller>



	//    MCAL_USART_SendData(TSR_UART_INSTANT, 'D');

	vTaskStartScheduler();
 80055b8:	f7fb f97e 	bl	80008b8 <vTaskStartScheduler>

	for(;;);
 80055bc:	e7fe      	b.n	80055bc <main+0xf0>
 80055be:	bf00      	nop
 80055c0:	080057cc 	.word	0x080057cc
 80055c4:	08004a95 	.word	0x08004a95
 80055c8:	080057e8 	.word	0x080057e8
 80055cc:	080049ed 	.word	0x080049ed
 80055d0:	200042b4 	.word	0x200042b4
 80055d4:	080057fc 	.word	0x080057fc
 80055d8:	08004b8d 	.word	0x08004b8d
 80055dc:	200042ac 	.word	0x200042ac
 80055e0:	08005808 	.word	0x08005808
 80055e4:	08004ce9 	.word	0x08004ce9
 80055e8:	0800581c 	.word	0x0800581c
 80055ec:	0800470d 	.word	0x0800470d
 80055f0:	200042b0 	.word	0x200042b0
 80055f4:	08005830 	.word	0x08005830
 80055f8:	08005395 	.word	0x08005395
 80055fc:	200042a8 	.word	0x200042a8
 8005600:	08005844 	.word	0x08005844
 8005604:	080052a1 	.word	0x080052a1

08005608 <Reset_Handler>:
 8005608:	480d      	ldr	r0, [pc, #52]	; (8005640 <LoopForever+0x2>)
 800560a:	4685      	mov	sp, r0
 800560c:	f3af 8000 	nop.w
 8005610:	480c      	ldr	r0, [pc, #48]	; (8005644 <LoopForever+0x6>)
 8005612:	490d      	ldr	r1, [pc, #52]	; (8005648 <LoopForever+0xa>)
 8005614:	4a0d      	ldr	r2, [pc, #52]	; (800564c <LoopForever+0xe>)
 8005616:	2300      	movs	r3, #0
 8005618:	e002      	b.n	8005620 <LoopCopyDataInit>

0800561a <CopyDataInit>:
 800561a:	58d4      	ldr	r4, [r2, r3]
 800561c:	50c4      	str	r4, [r0, r3]
 800561e:	3304      	adds	r3, #4

08005620 <LoopCopyDataInit>:
 8005620:	18c4      	adds	r4, r0, r3
 8005622:	428c      	cmp	r4, r1
 8005624:	d3f9      	bcc.n	800561a <CopyDataInit>
 8005626:	4a0a      	ldr	r2, [pc, #40]	; (8005650 <LoopForever+0x12>)
 8005628:	4c0a      	ldr	r4, [pc, #40]	; (8005654 <LoopForever+0x16>)
 800562a:	2300      	movs	r3, #0
 800562c:	e001      	b.n	8005632 <LoopFillZerobss>

0800562e <FillZerobss>:
 800562e:	6013      	str	r3, [r2, #0]
 8005630:	3204      	adds	r2, #4

08005632 <LoopFillZerobss>:
 8005632:	42a2      	cmp	r2, r4
 8005634:	d3fb      	bcc.n	800562e <FillZerobss>
 8005636:	f000 f811 	bl	800565c <__libc_init_array>
 800563a:	f7ff ff47 	bl	80054cc <main>

0800563e <LoopForever>:
 800563e:	e7fe      	b.n	800563e <LoopForever>
 8005640:	20005000 	.word	0x20005000
 8005644:	20000000 	.word	0x20000000
 8005648:	20000050 	.word	0x20000050
 800564c:	0801f2d4 	.word	0x0801f2d4
 8005650:	20000050 	.word	0x20000050
 8005654:	200042b8 	.word	0x200042b8

08005658 <ADC3_IRQHandler>:
 8005658:	e7fe      	b.n	8005658 <ADC3_IRQHandler>
	...

0800565c <__libc_init_array>:
 800565c:	b570      	push	{r4, r5, r6, lr}
 800565e:	2500      	movs	r5, #0
 8005660:	4e0c      	ldr	r6, [pc, #48]	; (8005694 <__libc_init_array+0x38>)
 8005662:	4c0d      	ldr	r4, [pc, #52]	; (8005698 <__libc_init_array+0x3c>)
 8005664:	1ba4      	subs	r4, r4, r6
 8005666:	10a4      	asrs	r4, r4, #2
 8005668:	42a5      	cmp	r5, r4
 800566a:	d109      	bne.n	8005680 <__libc_init_array+0x24>
 800566c:	f000 f822 	bl	80056b4 <_init>
 8005670:	2500      	movs	r5, #0
 8005672:	4e0a      	ldr	r6, [pc, #40]	; (800569c <__libc_init_array+0x40>)
 8005674:	4c0a      	ldr	r4, [pc, #40]	; (80056a0 <__libc_init_array+0x44>)
 8005676:	1ba4      	subs	r4, r4, r6
 8005678:	10a4      	asrs	r4, r4, #2
 800567a:	42a5      	cmp	r5, r4
 800567c:	d105      	bne.n	800568a <__libc_init_array+0x2e>
 800567e:	bd70      	pop	{r4, r5, r6, pc}
 8005680:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8005684:	4798      	blx	r3
 8005686:	3501      	adds	r5, #1
 8005688:	e7ee      	b.n	8005668 <__libc_init_array+0xc>
 800568a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800568e:	4798      	blx	r3
 8005690:	3501      	adds	r5, #1
 8005692:	e7f2      	b.n	800567a <__libc_init_array+0x1e>
 8005694:	0801f2cc 	.word	0x0801f2cc
 8005698:	0801f2cc 	.word	0x0801f2cc
 800569c:	0801f2cc 	.word	0x0801f2cc
 80056a0:	0801f2d0 	.word	0x0801f2d0

080056a4 <memset>:
 80056a4:	4603      	mov	r3, r0
 80056a6:	4402      	add	r2, r0
 80056a8:	4293      	cmp	r3, r2
 80056aa:	d100      	bne.n	80056ae <memset+0xa>
 80056ac:	4770      	bx	lr
 80056ae:	f803 1b01 	strb.w	r1, [r3], #1
 80056b2:	e7f9      	b.n	80056a8 <memset+0x4>

080056b4 <_init>:
 80056b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80056b6:	bf00      	nop
 80056b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80056ba:	bc08      	pop	{r3}
 80056bc:	469e      	mov	lr, r3
 80056be:	4770      	bx	lr

080056c0 <_fini>:
 80056c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80056c2:	bf00      	nop
 80056c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80056c6:	bc08      	pop	{r3}
 80056c8:	469e      	mov	lr, r3
 80056ca:	4770      	bx	lr
